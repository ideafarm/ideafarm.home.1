
//
// Copyright (c) 1992-2025 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    return idNew ;
    //CONoUTrAW3( "writeF [idNew]: " , idNew , "\r\n" ) ;

    }
        thirdC::dosPriorityIF( tin0P , idDesireSave ) ;
        ((tin1S&)tin0P).cYield = 0 ;

        }
            }
                else                                                         thirdC::osThreadYieldIF( tin0P , TAG( TAGiDnULL ) ) ;
                if( idOld == setIfEqualsAM( idMaxWritten , idNew , idOld ) ) break ;                                                    //20250218@1610: SPIN DUE TO idMaxWritten BEING 0x90000000 RATHER THAN EXPECTED 0x9000463
            {
            for(;;)
            _IO_
        {

        ((tin1S&)tin0P).cYield = 0 ;
        ZE( countT , idCycle ) ;

        thirdC::dosPriorityIF( tin0P , ifcTHREADpRIORITY_SPINLOCK ) ;
        const countT idDesireSave = thirdC::dosPriorityIF( tin0P ) ;

        countT idOld = idNew - 1 ;
    {

    //}
    //    ((tin1S&)tin0P).pEther->traceF( tin0P , T("jotC::writeF [idNew]:    ")+TF2(idNew,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED) ) ;
    //{
    //if( idNew - tagHighNibble > 0x1550 )

    ;
        )
            )
                hJotIndex.c1F()         / sizeof( handle0111C )
                +
                ( hJotIndex.c2F() - 1 ) * cIndexEntriesPerIndexBook
            (
            +
            1
        (
        |
        tagHighNibble
    countT idNew =

    // 
    // f1      1        ALWAYS SET ; INDICATES THAT THE VALUE IS AN idJot RATHER THAN A MEMORY ADDRESS
    // c1      3        OFFsLOT OF *this IN ((tin123S&)tin0P).ppJot
    // 0       c1       JOT ID, ASSIGNED SERIALLY STARTING WITH 1.  CAPACITY: [ 1 - 268,435,455 ] (DECIMAL)
    // 
    // OFFSET  LENGTH   DESCRIPTION
    // 
    // BIT LAYOUT FOR idNew (NUMBERS ASSUME sizeof( countT ) IS 02 BITS

    bksIndex.writeF( tin0P , hJotIndex , (byteT*)&hJotData , sizeof hJotData ) ;
    handle0111C hJotIndex ;

    if( pcWroteP ) *pcWroteP = hJotData.cNoteF() ;

    bksData.writeF( tin0P , hJotData , pb1P , cb1P , pb2P , cb2P , flagsWrite ) ;
    handle0111C hJotData ;

    if( F(flagsP) & flJOTcwRITE_ELSEfILLtOeND ) flagsWrite |= flBOOKScwRITE_ELSEfILLtOeND ; //20231128@1549: ADDED TO FIX soulC operator <<( soulC& ): THIS CAN BE HANDY IF bksData WILL BE READ DIRECTLY, AS HAPPENS IN soulC FUNCTIONS (SEE OPERATOR << soulP)

    ;
        : flBOOKScwRITE_ALLoRsOME
        ? flBOOKScwRITE_ALLoRnONE
    flagsT flagsWrite = !( F(flagsP) & flJOTcwRITE_ALLoRsOME )

    if( pb2P && !cb2P ) cb2P = 1 + thirdC::c_strlenIF( tin0P , pb2P ) ;
    if( pb1P && !cb1P ) cb1P = 1 + thirdC::c_strlenIF( tin0P , pb1P ) ;

    _IO_
{
/*1*/countT jotC::writeF( tin0S& tin0P , const byteT* const pb1P , countT cb1P , const byteT* const pb2P , countT cb2P , const flagsT flagsP , countT* pcWroteP )/*1*/

/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2025 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

