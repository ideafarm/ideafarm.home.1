
//
// Copyright (c) 1992-2025 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    #endif
        BOSnOvALUE( WHATsn , OSsLEEPf( ( TUCK >> 4 ) << shiftP ) )
    #elif defined( __NT__ )
        BOSpOOP
        BOSS( WHATsn , BOSfAIL , DosSleep( 50 ) )
    #ifdef __OS2__

    //}
    //    sleepC::blammoIfIF( tin0P ) ;
    //    _IO_
    //{
    // 20250411@1552: THIS IS COMMENTED OUT TO MINIMIZE OVERHEAD

    //}
    //    BLAMMO ;
    //    countT foo = 2 ;
    //{
    //if( F(((tin123S&)tin0P).where.flagsThreadModeWhere) & flTHREADmODEwHERE_WHEREiSwATCHING )

    //_IO_
    // 20250411@1552: THIS IS COMMENTED OUT BECAUSE inOutFrameC CT'OR CALLS ME
{
/*1*/voidT thirdC::dosSleepWinkIF( tin0S& tin0P , const countT shiftP )/*1*/



//      
//          windows 11 laptop:      0.5          1.0        15.6
//      
//          windows server 2019:    0.5         15.6        15.6
//      
//                                  min         now         max
//                                  --------- PERIOD ----------
//                             units: milliseconds, foreign notation
//      
//      }
//          if( nowPeriod ) ;
//      
//          static NTSTATUS status = ntQueryTimerResolution( &maxPeriod , &minPeriod , &nowPeriod ) ;
//          static ULONG nowPeriod ;
//          static ULONG maxPeriod ;
//          static ULONG minPeriod ;
//      
//          fooFT ntQueryTimerResolution = (fooFT)GetProcAddress( osh , "NtQueryTimerResolution" ) ;
//      
//          HMODULE osh = GetModuleHandle( "ntdll.dll" ) ;
//      {
//      
//      
// VALUES RETURNED BY ntQueryTimerResolution

// 20250411@1813: PS:PERSONALITY: I NOW SLEEP FOR 16_9 MILLISECONDS (IF !shiftP), WHICH APPEARS TO BE GUARANTEED TO WORK ON ALL WINDOWS PLATFORMS

// 20250411@1552: ( TUCK >> 4 ) <- TUCK BECAUSE DEFAULT TIMER RESOLUTION IN WINDOWS 10 IS REPORTEDLY 15.6 MS AND I NEED TO USE A VALUE THAT IS ABOVE THE SYSTEM MINIMUM

/**/
*/
 the actual arg is 50, since 0 does not appear to work as intended for Windows
this function just calls the operating system's sleep function, specifying a duration of 0
for max speed, this function contains no standard overhead code
arguments
warning: on some operating systems, use of this function can prevent other processes from gaining access to the cpu
this function releases the cpu for use by other threads within the current process
  \<A HREF=\"5.2730104.1.1.0.html\"\>2730104:  WAKEsHOW( "example.simplest.func.102009a.thirdC.dosSleepWinkIF" )\</A\>
 simplest
examples
\<A HREF=\"5.102009a.1.0.html\"\>definition\</A\>
\<A HREF=\"6.$dosSleepWinkIF.0.html\"\>instances\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2025 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

