
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


REST

etThread.loafIF( tinBaseP ) ;
etThread.osThreadF( tinBaseP , countTC() , tmStopped2F , 0 , 0  , flTHREADlAUNCH_null , 0 , 0 , (countT)&batonx ) ;
etThread.osThreadF( tinBaseP , countTC() , tmStopped1F , 0 , 0  , flTHREADlAUNCH_null , 0 , 0 , (countT)&batonx ) ;
batonC batonx( tinBaseP , TAG( TAGiDnULL ) ) ;

TODO

DONE( tmStopped2F )
}
    batonx.ungrabF( tinBaseP ) ;
    batonx.grabF( tinBaseP , TAG( TAGiDnULL ) ) ;
    batonC& batonx = *(batonC*)pTaskP->c1 ;
    }
        ++ s ; ether.osSleepF( tinBaseP , TOCK ) ;
        sleepC s( tinBaseP , TAG( TAGiDnULL ) ) ;
    {
{
if( pTaskP && pTaskP->c1 )
TASK( tmStopped2F )

DONE( tmStopped1F )
}
    batonx.ungrabF( tinBaseP ) ;
    }
        ++ s ; ether.osSleepF( tinBaseP , TICK * 0xff ) ;
        sleepC s( tinBaseP , TAG( TAGiDnULL ) ) ;
    {

    batonx.grabF( tinBaseP , TAG( TAGiDnULL ) ) ;
    batonC& batonx = *(batonC*)pTaskP->c1 ;
{
if( pTaskP && pTaskP->c1 )
TASK( tmStopped1F )

/*1*/WAKEhIDE( "example.other.monitor.threadstop.sleep" )/*1*/
/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

