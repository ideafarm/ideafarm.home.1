
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    return pbRC ;

    //}
    //    CONoUTrAW( ostoSay ) ;
    //    OStEXTAK( ostoSay , "\"\r\n" ) ;
    //    OStEXTA(  ostoSay , guts.postName ) ;
    //    OStEXTAK( ostoSay , " of pool named \"" ) ;
    //    OStEXTC(  ostoSay , offs , 0 ) ;
    //    OStEXTAK( ostoSay , " which is in slots at offset " ) ;
    //    OStEXTC(  ostoSay , pbRC , '0' ) ;
    //    OStEXTAK( ostoSay , " is pointer " ) ;
    //    OStEXTC(  ostoSay , idAptP , '0' ) ;
    //    OStEXTAK( ostoSay , "apt " ) ;
    //    OStEXT(   ostoSay , TUCK << 1 ) ;
    //{
    //if( ((tin123S&)tin0P).pc Utility[ 0 ] )

    byteT* pbRC = (*guts.ppSlots[ offs ])[ ( idAptP & ~( BM_HIGH | BM_HIGH2 ) ) >> guts.cBitsExpCbDrop ] ;  //A:ASSUME: countT IS 02 BITS

    __( !guts.ppSlots[ offs ] ) ;

    }
        guts.pGrabNewElt[ offs ].ungrabF( tin0P ) ;
        }
            THREADmODE2rESTORE
            guts.ppSlots[ offs ] = new( 0 , tin0P , guts.pbza + offs * sizeof( slotsC ) , sizeof( slotsC ) ) slotsC( tin0P , TAG( TAGiDnULL ) , LF , ostoName , guts.cBitsExpCbDrop , offs , face.pcCbDropAdjust[ offs ] , face.cbDropSeparator , flagsc , guts.idStateSpace , guts.idMemorySpace , this ) ;
            THREADmODE2oN( flTHREADmODE2_ALLOWsTOPwHILEgRABBING )
        
            if( F(guts.flagsCt) & flPOOLc_NOdROPhEADERS ) flagsc |= flSLOTSc_NOdROPhEADERS ;
            if( F(guts.flagsCt) & flPOOLc_NOsEXiNpOOL   ) flagsc |= flSLOTSc_NOsEXiNpOOL   ;
            if( F(guts.flagsCt) & flPOOLc_NOTES         ) flagsc |= flSLOTSc_NOTES         ;
            if( F(guts.flagsCt) & flPOOLc_READoNLY      ) flagsc |= flSLOTSc_READoNLY      ;
            flagsT flagsc = flSLOTSc_null ;

            OStEXTCF( ostoName , offs , '0' ) ;
            OStEXTAK( ostoName , ".slots." ) ;
            OStEXTAK( ostoName , ".poolC" ) ;
            OStEXTA(  ostoName , guts.postName ) ;
            OStEXT(   ostoName , TUCK << 2 )
        {
        if( !guts.ppSlots[ offs ] )
        guts.pGrabNewElt[ offs ].grabF( tin0P , TAG( TAGiDnULL ) ) ;
    {
    if( !guts.ppSlots[ offs ] )

ppsDebug = guts.ppSlots ;
static slotsC** ppsDebug ;

    const countT offs = guts.expCbDropMin + ( idAptP & ( 1 << guts.cBitsExpCbDrop ) - 1 ) ;     //U::O: STORE "( 1 << guts.cBitsExpCbDrop ) - 1" as a const countT
    if( F(((tin123S&)tin0P).flagsThreadMode3) & flTHREADmODE3_DISALLOWpUSE ) { BLAMMO ; }
    _IO_

    }
        if( POOP ) return 0 ;
        __Z( idAptP ) ;
        if( POOP ) return 0 ;
    {
    IFbEcAREFUL

    TINSL
{
/*1*/byteT* poolC::operator []( const countT idAptP )/*1*/

/**/

*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

