
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    if( ((tin9S&)tinBaseP).pag1->_soulC_.pStkTrace && ((tin9S&)tinBaseP).cArmTrace_soulC && ( ((tin9S&)tinBaseP).cArmTrace_soulC == - 1 || !( -- ((tin9S&)tinBaseP).cArmTrace_soulC ) ) ) traceF( tinBaseP , ((tin9S&)tinBaseP).flagsTrace_soulC , T("CT") ) ;

    }
        thirdC::c_memcpyIF( tinBaseP , *(osTextT**)&postNameJot , postNameJotP , 1 + costNameJot ) ;
        ((thirdC&)ether).newF( tinBaseP , LF , *(osTextT**)&postNameJot , 1 + costNameJot ) ; ___( postNameJot ) ;
        countT costNameJot = thirdC::c_strlenIF( tinBaseP , postNameJotP ) ;
    {
    if( postNameJotP )

    }
        thirdC::c_memcpyIF( tinBaseP , *(osTextT**)&postName , postNameP , 1 + costName ) ;
        ((thirdC&)ether).newF( tinBaseP , LF , *(osTextT**)&postName , 1 + costName ) ; ___( postName ) ;
        countT costName = thirdC::c_strlenIF( tinBaseP , postNameP ) ;
    {
    if( postNameP )

    else            thirdC::c_memsetIF( tinBaseP , (byteT*)pbBitsCt , sizeof pbBitsCt ) ;
    if( pbBitsCtP ) thirdC::c_memcpyIF( tinBaseP , (byteT*)pbBitsCt , (byteT*)pbBitsCtP , sizeof pbBitsCt ) ;

    _IO_
{
/*1*/voidT soulC::ctF( tin0S& tinBaseP , const byteT* const pbBitsCtP , const osTextT* const postNameJotP , const osTextT* const postNameP )/*1*/

/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

