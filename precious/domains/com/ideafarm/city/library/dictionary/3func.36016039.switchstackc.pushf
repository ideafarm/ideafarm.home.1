
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    return *this ;
    if( pBaton ) pBaton->ungrabF( tinBaseP ) ;
    pushF( tinBaseP , (countT)pc3P , bTinHasLeverP ) ;
    _IO_
    else if( osTidOwner != ((tinFullS&)tinBaseP).osTid && !bDying && !( F(flagsSwitch) & flSTACKc_ALLOWmULTIPLEuNSERIALIZED ) ) BLAMMO ;
    else if( !osTidOwner ) osTidOwner = ((tinFullS&)tinBaseP).osTid ;
    if( pBaton ) pBaton->grabF( tinBaseP , TAG( TAGiDnULL ) ) ;

    }
        if( third ) return *this ;
    {
    IFbEcAREFUL
    SCOOP
{
/*1*/switchStackC& switchStackC::pushF( tinBaseS& tinBaseP , const count3S* const pc3P , const boolT bTinHasLeverP )/*1*/
/**/
*/
 pc3P
arguments
like operator << except supports pTinHasLeverP
evaluates to a reference to this stack object
functionally identical to operator << ( const countT valueP )
  \<A HREF=\"5.8330104.1.1.0.html\"\>8330104:  WAKEsHOW( "example.simplest.func.121003b.switchStackC.pushF" )\</A\>
 simplest
examples
\<A HREF=\"5.121003b.1.0.html\"\>definition\</A\>
\<A HREF=\"6.$pushF.0.html\"\>instances\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

