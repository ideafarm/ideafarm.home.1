
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    if( pbBitsCtP ) ; //U::

    if( bOsCall ) ((tinNormalS*)pTin)->grabPseudo.flags |= flGRABc_PSEUDOoScALL ; //IT IS ILLEGAL, THOUGH NOT ENFORCED, TO CONSTRUCT A sleepC OBJECT ON THIS THREAD WHILE I EXIST; THIS IS BECAUSE I DO NOT SAVE AND RESTORE THE grabC FLAGS
    (countT&)((tinNormalS*)pTin)->grabPseudo.idiFileCt = idiFileCtP ;
    (countT&)((tinNormalS*)pTin)->grabPseudo.idLineCt  = idLineCtP  ;
    }
        ((tinNormalS*)pTin)->grabPseudo.cGrabbed ++ ;
        if( ((tinNormalS*)pTin)->grabPseudo.stat.cAcquisitions != - 1 ) inc02AM( ((tinNormalS*)pTin)->grabPseudo.stat.cAcquisitions ) ;
        else                         ((tinNormalS*)pTin)->grabPseudo.osTid = ((tinNormalS&)tinBaseP).osTid ;
        }
            { BLAMMO ; }
        {
        if( ((tinNormalS*)pTin)->grabPseudo.osTid )
        }
            { BLAMMO ; }
        {
        if( ((tinNormalS*)pTin)->grabPseudo.cGrabbed == - 1 )
        ((tinNormalS*)pTin)->grabPseudo.stat.cCollisionsNew = 0 ; //U:MIGHT OVERWRITE A FEW COLLISIONS THAT SHOULD BE COUNTED AS NEW (I.E. SINCE INCREMENTING idGrabberOk)
        }
            { BLAMMO ; }
        {
        if( ((tinNormalS*)pTin)->grabPseudo.idGrabberOk != idGrabberMe )
        countT idGrabberMe = 1 + incv02AM( ((tinNormalS*)pTin)->grabPseudo.idGrabberHigh ) ;
        //CODE SYNCH: 17f0005 1700003
        //SIMULATE WHATEVER grabF DOES TO MAKE grabPseudo LOOK GRABBED
    {
    if( bOuter )

    }
        }
            BLAMMO ;

            etherC::ifcSayIF( ostoBuf , flSAY_LOG | flSAY_APPEND ) ;

            OStEXTAK( ostoBuf , "\r\n" ) ;
            //OStEXTC( ostoBuf , bTlsEarlyLateI , 0 ) ;
            OStEXTC( ostoBuf , bTlsEarlyLateIF() , 0 ) ;
            OStEXTAK( ostoBuf , " bTlsEarlyLateI: " ) ;
            OStEXTC( ostoBuf , ((tinNormalS&)tinBaseP).idTin , 0 ) ;
            OStEXTAK( ostoBuf , "\" idTin: " ) ;
            OStEXTA( ostoBuf , ((tinNormalS&)tinBaseP).postThreadName ) ;
            OStEXTAK( ostoBuf , "\r\nTINSL: \"" ) ;
            OStEXTC( ostoBuf , ((tinNormalS*)pTin)->idTin , 0 ) ;
            OStEXTAK( ostoBuf , "\" idTin: " ) ;
            OStEXTA( ostoBuf , ((tinNormalS*)pTin)->postThreadName ) ;
            OStEXTAK( ostoBuf , "\r\npTin : \"" ) ;
            OStEXT( ostoBuf , 0x80 )
        {
        if( pTin != &tinBaseP )
        TINSL
    {
    if( ((tinNormalS*)pTin)->idTinNamed != ifcIDtINnAMED_tinHeartI )

    }
        }
            BLAMMO ;

            etherC::ifcSayIF( ostor , flSAY_LOG | flSAY_APPEND ) ;

            OStEXTAK( ostor , "\r\n" ) ;
            OStEXTC( ostor , ((tinNormalS&)tinBaseP).idLineMile , 0 ) ;
            OStEXTAK( ostor , "; idLineMile is " ) ;
            //OStEXTC( ostor , ((tinNormalS&)tinBaseP).pc Utility[ 1 ] , 0 ) ;
            OStEXTAK( ostor , "\"; pcUtilityI[1] is " ) ;
            OStEXTA( ostor , ((tinNormalS&)tinBaseP).postThreadName )
            OStEXTAK( ostor , "sleep blammo 1 (sleepC constructor) on thread \"" )
            OStEXT( ostor , 0x100 ) ;
            LOGcALLnEST( "sleep blammo 1" )

        {
        if( !_bStopOk )

        SET_bStopOk
    {
    if( !( F(((tinNormalS&)tinBaseP).flagsThreadMode4) & flTHREADmODE4_EXCEPTIONrEPORTINGiNpROGRESS ) )
    //CODEsYNC DUPLICATE CODE: 1700005 1700003

    blammoIfIF( tinBaseP ) ;

    }
        BLAMMO ;
    {
    if( pTin == &processGlobal4I.tinNormalVeryVeryEarlyLateMain && F(processGlobal2I.flCt) & flCTdTg_tinNormalVeryEarlyLateMainI && !( F(processGlobal2I.flDt) & flCTdTg_tinNormalVeryEarlyLateMainI ) )

    _IO_
{
bOuter( !((tinNormalS&)tinBaseP).grabPseudo.cGrabbed )
bOsCall( bOsCallP ) ,
pTin( &tinBaseP ) ,
idiFileCtSave( ((tinNormalS&)tinBaseP).grabPseudo.idiFileCt ) ,
idLineCtSave( ((tinNormalS&)tinBaseP).grabPseudo.idLineCt ) ,
/*1*/sleepC::sleepC( tinBaseS& tinBaseP , const countT idLineCtP , const countT idiFileCtP , const byteT* const pbBitsCtP , const boolT bOsCallP ) :/*1*/

/**/
*/
\<A HREF=\"5.1700003.1.0.html\"\>definition\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

