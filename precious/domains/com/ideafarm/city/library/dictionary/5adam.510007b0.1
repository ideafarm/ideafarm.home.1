
//
// Copyright (c) 1992-2025 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//

                            
REST

etherC::loafIF( tin0P ) ;
etThread.traceF( tin0P , T("ok") ) ;

}
    }
        }
            etThread.traceF( tin0P , T("found ")+T(pb2f)+T(" at [offrFound]: ")+TF2(offrFound,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED) ) ;
            byteT pb2f[] = { circle[ offrFound ] , 0 } ;
        {
        else
        if( !offrFound ) etThread.traceF( tin0P , T("did not find '")+T(pb2s)+T("'") ) ;
        countT offrFound = circle.findF( *pb2s ) ;
        byteT pb2s[] = { bb , 0 } ;
    {
    for( byteT bb = bbPushWoth ; bb < bbPushEnd ; bb ++ )

    }
        bbPushEnd = bbPush ;
        while( cDo -- ) circle << ( bbPush ++ ) ;
        countT cDo = cPush ;
        byteT bbPush = bbPushWoth ;
    {
    ZE( byteT , bbPushEnd ) ;
    byteT bbPushWoth = 'a' ;

    etThread.traceF( tin0P , T("pass [cPush]: ")+TF2(cPush,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED) ) ;

    circleC circle( tin0P , etThread , 4 ) ;
{
for( countT cPush = 0 ; cPush <= 0x10 ; cPush ++ )

TODO


/*1*/WAKEhIDE( "example.test.1snip.15000191.circleC" )/*1*/
/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2025 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
