
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    }
        }
            }
                }
                    }
                        //U:: BLAMMOiD( dropHeader - pzMetaNote[ offs ].dropHeaderCopy ) ;

                        //tinP.pc Utility[ 8 ] = pzMetaNote[ offs ].idThreadDel ;
                        //tinP.pc Utility[ 7 ] = pzMetaNote[ offs ].idThreadNew ;
                        //tinP.pc Utility[ 6 ] = pzMetaNote[ offs ].idiFileTagged2 ;
                        //tinP.pc Utility[ 5 ] = pzMetaNote[ offs ].idLineTagged2 ;
                        //tinP.pc Utility[ 4 ] = pzMetaNote[ offs ].idiFileTagged ;
                        //tinP.pc Utility[ 3 ] = pzMetaNote[ offs ].idLineTagged ;
                        //tinP.pc Utility[ 2 ] = pzMetaNote[ offs ].idAdam ;
                        //tinP.pc Utility[ 1 ] = pzMetaNote[ offs ].dropHeaderCopy ;
                        //tinP.pc Utility[ 0 ] = dropHeader ;
                    {
                    if( getNegAM( pzMetaNote[ offs ].finger ) == FINGERnEG_dropNoteSpoolC2 && dropHeader - pzMetaNote[ offs ].dropHeaderCopy )
                    countT& dropHeader = *(countT*)( pbData + offs * cbGross ) ;
                {
                if( bOwned )

                }
                    mask = 1 ;
                    pbo ++ ;
                {
                if( !mask )
                mask <<= 1 ;
                boolT bOwned = *pbo & mask ;
            {
            for( countT offs = offSlotsUseableBegin ; offs < offSlotsUseableEnd ; offs ++ )

            byteT mask = 1 ;
            byteT* pbo = pbzMetaBitsOwned ;
            const countT offSlotsUseableEnd   =                                                                     cSlots - pzMetaHead->cSlotsAvoidHi ;
            const countT offSlotsUseableBegin =                                                                              pzMetaHead->cSlotsAvoidLo ;
            const countT cSlots               =                                                                         1 << pzMetaHead->expSlots      ;
            const countT cbGross              = ( CBsEXdROPsEPARATOR + CBsEXdROPhEADER + pzMetaHead->cbDropAdjust ) + ( 1 << pzMetaHead->expCbDrop )   ;
        {
        if( pzMetaNote )

        ;
            : 0
            ? (dropNoteS*)( pbzMetaBitsOwned + cbaBitsOwned )
        dropNoteS* pzMetaNote = F(pzMetaHead->flagsCtCopy) & fliSEXc_NOTES

        cbaBitsOwned += CBtOaLIGN02( pbzMetaBitsOwned + cbaBitsOwned ) ;
        countT cbaBitsOwned = 1 + ( 1 << pzMetaHead->expSlots ) / SB ;

        byteT* pbzMetaBitsOwned = (byteT*)( pzMetaHead + 1 ) ;
    {
    if( pzMetaHead )

    //_IO_

    }
        if( POOP ) return ;
    {
    IFbEcAREFUL
    SCOOP
{
/*1*/voidT sexC::testDropHeadersF( tinS& tinP )/*1*/


/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

