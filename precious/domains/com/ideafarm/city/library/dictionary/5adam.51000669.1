
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


REST

etherC::loafIF( tinBaseP ) ;

etThread.delF( tinBaseP , pstt1w ) ;
}
    etThread.strokeF( tinBaseP , T("--->")+T(psttc1)+T("<---\r\n") ) ;
{
FORsTRINGSiN1( pstt1w )
etThread.strWordsF( tinBaseP , pstt1w , psttIn , sttq2 , psttd , flSTRwORDS_null , 0 , 0 , 0 , 0 , 0 ) ; ___( pstt1w ) ;
strokeS sttq2( 0 , sc_IGNOREqUOTES ) ;
ZE( strokeS* , pstt1w ) ;

strokeS* psttd = td ;
TN( td , "12" ) ;

etThread.strokeF( tinBaseP , tcr ) ;
}
    etThread.strokeF( tinBaseP , TF2(bIn,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED) ) ;
    boolT bIn = etThread.strIsInQuoteF( tinBaseP , sttq , ids , psttIn ) ;
{
for( countT ids = 1 ; ids <= csttIn ; ids ++ )
strokeS sttq ;
etThread.strokeF( tinBaseP , tcr+tIn+tcr ) ;

countT   csttIn = tIn.csF( tinBaseP ) ;
strokeS* psttIn = tIn ;
TN( tIn , "**1log: \\\" 2**" ) ;
//TN( tIn , "    \\a    \\b    \\c    \\d    \\\"    \\a    \\b    \\c    \\d   \\\"    \\a    \\b    \\c    \\d" ) ;
//TN( tIn , "abcd\\\"e\\\"fgh" ) ;
TN( tcr , "\r\n" ) ;

TODO

/*1*/WAKEsHOWtEXT( "doodle.strWordsF" )/*1*/
/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

