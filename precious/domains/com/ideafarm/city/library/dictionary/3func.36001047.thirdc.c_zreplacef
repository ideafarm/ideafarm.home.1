
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    delF( tin0P , postDoomed ) ;

    }
        postP[ costNew ] = 0 ;
        }
            }
                postcGet ++ ;
                postcPut ++ ;
                if( postcPut && postcGet ) *postcPut = *postcGet ;
            {
            else
            }
                postcGet += costEach ;
                postcPut += costEachNew ;
                c_memcpyIF( tin0P , postcPut , postNewP , costEachNew ) ;
            {
            if( postcGet == c_strstrIF( tin0P , postcGet , postOldP ) )
        {
        while( postcGet < postEnd )
        countT costEachNew = c_strlenIF( tin0P , postNewP ) ;
        postcPut = postP ;
        postcGet = postDoomed ;
        ZE( osTextT* , postcPut ) ;
        ZE( osTextT* , postcGet ) ;
    {
    if( postP )

    }
        if( postP ) postP[ costNew ] = 0 ;
        newF( tin0P , LF , postP , costNew + 1 ) ; ___( postP ) ;
        costNew = c_strlenIF( tin0P , postDoomed ) + costExtra ;
        postP = 0 ;
        postDoomed = postP ;

        sCountT costExtra = cHit * ( (sCountT)c_strlenIF( tin0P , postNewP ) - costEach ) ;
        }
            if( postc == postEnd ) break ;
            postc += costEach ;
            cHit ++ ;
        {
        while( postHit = c_strstrIF( tin0P , postc , postOldP ) , postHit )
        ZE( osTextT* , postHit ) ;
        postc = postP ;
        ZE( osTextT* , postc ) ;
        postEnd = postP + c_strlenIF( tin0P , postP ) ;
        costEach = c_strlenIF( tin0P , postOldP ) ;
        ZE( countT , cHit ) ;
    {
    ZE( countT , costNew ) ;
    ZE( countT , costEach ) ;
    ZE( osTextT* , postEnd ) ;
    ZE( osTextT* , postDoomed ) ;
    _IO_

    }
        if( POOP ) return ;
        __( !c_strlenIF( tin0P , postNewP ) ) ;
        __( !c_strlenIF( tin0P , postOldP ) ) ;
        __Z( postNewP ) ;
        __Z( postOldP ) ;
        __Z( postP ) ;
        if( POOP ) return ;
    {
    IFbEcAREFUL    
    SCOOP
{
/*1*/voidT thirdC::c_zReplaceF( tin0S& tin0P , osTextT*& postP , const osTextT* const postOldP , const osTextT* const postNewP )/*1*/

/**/
*/
 postNewP
 postOldP
 postP
arguments
  \<A HREF=\"5.ec00104.1.1.0.html\"\>ec00104:  WAKEsHOW( "example.simplest.func.102004d.thirdC.c_zReplaceF" )\</A\>
 simplest
examples
\<A HREF=\"5.102004d.1.0.html\"\>definition\</A\>
\<A HREF=\"6.$c_zReplaceF.0.html\"\>instances\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

