
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    }
        phDll = 0 ;
        }
            dec02AM( tinP.cKidThreads ) ;
            dec02AM( tinP.pag1->_thirdC_.cAllKidThreads ) ;
        {
        if( POOP )
        //if( POOP ) dec02AM( tinP.pag1->_thirdC_.cAllOrphanThreads ) ;

        if( !( ++ processGlobal2I.pcPhaseLow[ tinP.monitor.idThread ] ) ) { BLAMMO ; }
        BOSpOOP
        BOS( WHATgbo , BOSoK , StartServiceCtrlDispatcher( tbl ) )
        if( !( ++ processGlobal2I.pcPhaseLow[ tinP.monitor.idThread ] ) ) { BLAMMO ; }
        tinP.pag1->_etherC_.pHdll = phDll = &hDll ;
        handleC hDll( tinP , TAG( TAGiDnULL ) , ifcIDtYPEhANDLE_DLL ) ; //OPENED BY tmServiceMainF; CANNOT BE CLOSED (FOR UNK REASON) UNTIL AFTER StartServiceCtrlDispatcher RETURNS

        inc02AM( tinP.cKidThreads ) ;
        inc02AM( tinP.pag1->_thirdC_.cAllKidThreads ) ;
        //inc02AM( tinP.pag1->_thirdC_.cAllOrphanThreads ) ;

        processGlobal2I.pEtThreadServiceEventHandler = pEtherContainsMe ;
        processGlobal2I.pTinDadService = &tinP ;

        tbl[ 1 ].lpServiceProc = 0 ;
        tbl[ 1 ].lpServiceName = 0 ;
        tbl[ 0 ].lpServiceProc = osServiceMainF ;
        tbl[ 0 ].lpServiceName = (osTextT*)tinP.pag1->postServiceName ;
        SERVICE_TABLE_ENTRY tbl[ 2 ] ;
    {
    if( !POOP )
    processGlobal2I._thirdC_flagsModeProcess1 |= flMODEpROCESS1_QUITaTsHUTDOWN ; //I WANT TO SET flMODEpROCESS1_DRIVER BIT AS SOON AS I KNOW THAT I AM THE DRIVER PROCESS

    DECoShANDLES
    BOSpOOP
    BOS( WHATgbo , BOSoK , CloseServiceHandle( hsm ) )
    DECoShANDLES
    BOSpOOP
    BOS( WHATgbo , BOSoK , CloseServiceHandle( hsv ) )
    BOSpOOP
    BOS( WHATgbo , BOSoK , QueryServiceStatus( hsv , (SERVICE_STATUS*)tinP.pag1->pcServiceStatus ) )
    BOSpOOP
    SC_HANDLE hsv = (SC_HANDLE)tinP.brcRaw ;
    INCoShANDLES
    BOSpOOP
    BOS( WHATgbo , BOSoK , OpenService( hsm , tinP.pag1->postServiceName , SERVICE_ALL_ACCESS ) )
    INCoShANDLES
    SC_HANDLE hsm = (SC_HANDLE)tinP.brcRaw ;
    BOSpOOP
    BOS( WHATgbo , BOSoK , OpenSCManager( 0 , 0 , SC_MANAGER_ALL_ACCESS ) )
    tinP.pag1->postServiceName = postNameP ;

    _IO_

    }
        if( POOP ) return ;
        __( !!( F(flagsMode) & flTHIRDmODE_TINoWNER ) ) ; // THIS AND THE PRECEDING LINE ENSURES THAT pEtherContainsMe DOES NOT POINT TO etPrime (HOPEFULLY IT POINTS TO etThread) SO THAT THAT IDENTIFIER IS NOT MISLEADING
        __( tinP.monitor.idThread - 1 ) ;
        __Z( pEtherContainsMe ) ;
        if( POOP ) return ;
        __( cIn > 1 ) ;
        if( POOP ) return ;
    {
    IFbEcAREFUL
    SCOOP

    cIn ++ ;
    static countT cIn ;
{
/*1*/voidT thirdC::osDriverF( tinNormalS& tinP , const osTextT* postNameP )/*1*/

}
    processGlobal2I.pcPhaseLow[ ifcIDtHREADlOW_tmWindowsOrServiceMainF ] = - 1 ;
    }
        #endif
            tmServiceMainF( (voidT*)&fake ) ;
        #elif defined( __NT__ )
            tmServiceMainF( (countT)&fake ) ;
        #if defined( __OS2__ )

        taskS fake( *processGlobal2I.pTinDadService , 0 , 0 , 0 , flTHREADlAUNCH_FAKE /* | flTHREADlAUNCH_ORPHAN */ , 0 , 0 , cHowP , (countT)ppostHowP , (countT)phDll ) ;
    {
{
VOID WINAPI osServiceMainF( DWORD cHowP , LPTSTR* ppostHowP ) // RUNS ON A NEW THREAD CREATED WITHIN StartServiceCtrlDispatcher

handleC* phDll ;

/**/
*/
  windows nt
 some operating systems require this
it is illegal to call me on a thread other than the main thread of a process
it is illegal to refer to this symbol anywhere except in the definition of etherC::osDriverF
\<A HREF=\"5.10200da.1.0.html\"\>definition\</A\>
\<A HREF=\"6.$osDriverF.0.html\"\>instances\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

