
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    BOSpOOP
    BOS( WHATgbo , BOSoK , SetFileTime( (voidT*)hFileP.osF( ifcIDtYPEhANDLE_FILE ) , !pTimeCreatedP ? 0 : &ftCreated , !pTimeAccessedP ? 0 : &ftAccessed , !pTimeWrittenP ? 0 : &ftWritten ) )

    }
        SystemTimeToFileTime( &sta , &ftAccessed ) ;

        sta.wMilliseconds = (count01T)  ms      ;
        sta.wSecond       = (count01T)  ss      ;
        sta.wMinute       = (count01T)  mm      ;
        sta.wHour         = (count01T)  hh      ;
        sta.wDay          = (count01T)( d + 1 ) ;
        sta.wMonth        = (count01T)( m + 1 ) ;
        sta.wYear         = (count01T)( y + 1 ) ;
        SYSTEMTIME sta ;

        osTimeToOldTimeF( tinP , ms , ss , mm , hh , d , m , y , dow , pTimeAccessedP->time1 , pTimeAccessedP->time2 , flOStIMEfROMoLDtIME_OLDtIMEiSutc ) ;
        ZE( countT  , dow ) ;
        ZE( sCountT , y   ) ;
        ZE( countT  , m   ) ;
        ZE( countT  , d   ) ;
        ZE( countT  , hh  ) ;
        ZE( countT  , mm  ) ;
        ZE( countT  , ss  ) ;
        ZE( countT  , ms  ) ;
    {
    if( pTimeAccessedP )
    FILETIME ftAccessed ;

    }
        SystemTimeToFileTime( &stc , &ftCreated ) ;

        stc.wMilliseconds = (count01T)  ms      ;
        stc.wSecond       = (count01T)  ss      ;
        stc.wMinute       = (count01T)  mm      ;
        stc.wHour         = (count01T)  hh      ;
        stc.wDay          = (count01T)( d + 1 ) ;
        stc.wMonth        = (count01T)( m + 1 ) ;
        stc.wYear         = (count01T)( y + 1 ) ;
        SYSTEMTIME stc ;

        osTimeToOldTimeF( tinP , ms , ss , mm , hh , d , m , y , dow , pTimeCreatedP->time1 , pTimeCreatedP->time2 , flOStIMEfROMoLDtIME_OLDtIMEiSutc ) ;
        ZE( countT  , dow ) ;
        ZE( sCountT , y   ) ;
        ZE( countT  , m   ) ;
        ZE( countT  , d   ) ;
        ZE( countT  , hh  ) ;
        ZE( countT  , mm  ) ;
        ZE( countT  , ss  ) ;
        ZE( countT  , ms  ) ;
    {
    if( pTimeCreatedP )
    FILETIME ftCreated  ;

    }
        SystemTimeToFileTime( &stw , &ftWritten ) ;

        stw.wMilliseconds = (count01T)  ms      ;
        stw.wSecond       = (count01T)  ss      ;
        stw.wMinute       = (count01T)  mm      ;
        stw.wHour         = (count01T)  hh      ;
        stw.wDay          = (count01T)( d + 1 ) ;
        stw.wMonth        = (count01T)( m + 1 ) ;
        stw.wYear         = (count01T)( y + 1 ) ;
        SYSTEMTIME stw ;

        osTimeToOldTimeF( tinP , ms , ss , mm , hh , d , m , y , dow , pTimeWrittenP->time1 , pTimeWrittenP->time2 , flOStIMEfROMoLDtIME_OLDtIMEiSutc ) ;
        ZE( countT  , dow ) ;
        ZE( sCountT , y   ) ;
        ZE( countT  , m   ) ;
        ZE( countT  , d   ) ;
        ZE( countT  , hh  ) ;
        ZE( countT  , mm  ) ;
        ZE( countT  , ss  ) ;
        ZE( countT  , ms  ) ;
    {
    if( pTimeWrittenP )
    FILETIME ftWritten  ;

    //A:ASSUME: NTFS FILE SYSTEM (OR OTHER SYSTEM THAT STORES FILE TIMES AS UTC

    _IO_

    }
        if( POOP ) return ;
        __( !hFileP ) ;
        if( POOP ) return ;
    {
    IFbEcAREFUL        
{
/*1*/voidT thirdC::setFileTimeF( tinS& tinP , const handleC& hFileP , timeS* pTimeWrittenP , timeS* pTimeCreatedP , timeS* pTimeAccessedP )/*1*/

/**/

*/
/*


//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
