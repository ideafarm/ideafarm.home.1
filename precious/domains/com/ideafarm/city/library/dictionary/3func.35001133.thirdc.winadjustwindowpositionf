
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    }
        idRowP = winIfRowIF( info.bottom ) ;
        idColP = winIfColIF( info.left   ) ;
        cRowsP = info.bottom - info.top + 1 ;
        cColsP = info.right - info.left + 1 ;
    {
    if( !POOP )

    }
        ((tin9S&)tin0P).pag1->_thirdC_.mRowsAdjForWinFrame = info.bottom - bottomSave ; //POSITIVE NUMBER FOR ADJUSTING BOTTOM LEFT CORNER
        ((tin9S&)tin0P).pag1->_thirdC_.mColsAdjForWinFrame = leftSave    - info.left  ; //POSITIVE NUMBER FOR ADJUSTING BOTTOM LEFT CORNER
    {
    if( !((tin9S&)tin0P).pag1->_thirdC_.mColsAdjForWinFrame && !((tin9S&)tin0P).pag1->_thirdC_.mRowsAdjForWinFrame )

    BOSpOOP
    BOS( WHATgbo , BOSoK , AdjustWindowRect( &info , WS_OVERLAPPEDWINDOW , 0 ) )

    countT bottomSave = info.bottom ;
    countT leftSave = info.left ;

    info.top    = info.bottom - cRowsP + 1 ;
    info.bottom = winOsRowIF( idRowP ) ;
    info.right  = info.left + cColsP - 1 ;
    info.left   = winOsColIF( idColP ) ;
    RECT info ;

    _IO_

    }
        if( POOP ) return ;
        __Z( cRowsP ) ;
        __Z( cColsP ) ; //NULL SIZE MIGHT WORK: NOT TESTED
        if( POOP ) return ;
    {
    IFbEcAREFUL    
    SCOOP
{
/*1*/voidT thirdC::winAdjustWindowPositionF( tin0S& tin0P , sCountT& idColP , sCountT& idRowP , countT& cColsP , countT& cRowsP )/*1*/

/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

