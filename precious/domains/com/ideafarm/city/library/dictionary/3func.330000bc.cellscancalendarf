
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    }
        }
            default : { ether.strFuseF( tinP , psttP , TP("|",cColP) ) ; break ; }
            case 2  : { ether.strFuseF( tinP , psttP , T("|")+tOld+TP("",cColP-tOld.csF(tinP)-1) ) ; break ; }
            case 1  : { ether.strFuseF( tinP , psttP , T("|")+tTimeCave ) ; break ; }
            case 0  : { ether.strFuseF( tinP , psttP , TPS("+",cColP,S1C('-')) ) ; break ; }
        {
        switch( oScanP )
    {
    else
    }
        }
            default : { ether.strFuseF( tinP , psttP , TP("@",cColP) ) ; break ; }
            case 2  : { ether.strFuseF( tinP , psttP , T("@")+tOld+TP("",cColP-tOld.csF(tinP)-1) ) ; break ; }
            case 1  : { ether.strFuseF( tinP , psttP , T("@")+tTimeCave ) ; break ; }
            case 0  : { ether.strFuseF( tinP , psttP , TPS("@",cColP,S1C('-')) ) ; break ; }
        {
        switch( oScanP )
    {
    else if( oDayP == oTodayP + 1 && oTodayP % 8 != 7 )
    }
        }
            default : { ether.strFuseF( tinP , psttP , TP("|",cColP) ) ; break ; }
            case 2  : { ether.strFuseF( tinP , psttP , T("|")+tOld+TP("",cColP-tOld.csF(tinP)-1) ) ; break ; }
            case 1  : { ether.strFuseF( tinP , psttP , T("|")+tTimeCave ) ; break ; }
            case 0  : { ether.strFuseF( tinP , psttP , TPS("@",cColP,S1C('-')) ) ; break ; }
        {
        switch( oScanP )
    {
    else if( oDayP == oTodayP + 9 && oTodayP % 8 != 7 )
    }
        }
            default : { ether.strFuseF( tinP , psttP , TP("|",cColP) ) ; break ; }
            case 2  : { ether.strFuseF( tinP , psttP , T("|")+tOld+TP("",cColP-tOld.csF(tinP)-1) ) ; break ; }
            case 1  : { ether.strFuseF( tinP , psttP , T("|")+tTimeCave ) ; break ; }
            case 0  : { ether.strFuseF( tinP , psttP , TPS("@",cColP,S1C('@')) ) ; break ; }
        {
        switch( oScanP )
    {
    else if( oDayP == oTodayP + 8 )
    }
        }
            default : { ether.strFuseF( tinP , psttP , TP("@",cColP) ) ; break ; }
            case 2  : { ether.strFuseF( tinP , psttP , T("@")+tOld+TP("",cColP-tOld.csF(tinP)-1) ) ; break ; }
            case 1  : { ether.strFuseF( tinP , psttP , T("@")+tTimeCave ) ; break ; }
            case 0  : { ether.strFuseF( tinP , psttP , TPS("@",cColP,S1C('@')) ) ; break ; }
        {
        switch( oScanP )
    {
    if( oDayP == oTodayP )

    ;
        : TF3(time2P,flFORMAT_NObIGITvALUES,cColP-1)
        ? TF3(time2P,flFORMAT_NObIGITvALUES,cColP-5)+T("CAVE")
    TN( tTimeCave , "" ) ; tTimeCave = F(flagsP) & flCELLsCANcALENDAR_CAVE

    }
        tOld = T(ppsttDayOfWeekP[dow])+TF4(da+1,flFORMAT_FOREIGN|flFORMAT_NObASE|flFORMAT_NObIGITvALUES|flFORMAT_FILLzE,2,0xa)+T(ppsttMonthP[mo])+TF4((ye+1)%100,flFORMAT_FOREIGN|flFORMAT_NObASE|flFORMAT_NObIGITvALUES|flFORMAT_FILLzE,2,0xa) ;
        { ZE( countT , time1 ) ; ether.osTimeToOldTimeF( tinP , ms , ss , mm , hh , da , mo , ye , dow , time1 , time2P , flOStIMEfROMoLDtIME_OLDtIMEiSutc ) ; }
        ZE( countT , dow ) ;
        ZE( sCountT , ye ) ;
        ZE( countT , mo ) ;
        ZE( countT , da ) ;
        ZE( countT , hh ) ;
        ZE( countT , mm ) ;
        ZE( countT , ss ) ;
        ZE( countT , ms ) ;
    {
    TN( tOld , "" ) ;

    time2P |= oDayP ;
    time2P &= 0xffffff00 ;

    }
        if( POOP ) return ;
        FV( flCELLsCANcALENDAR , flagsP ) ;
        if( POOP ) return ;
    {
    IFbEcAREFUL
{
/*1*/voidT cellScanCalendarF( tinNormalS& tinP , etherC& ether , strokeS*& psttP , const countT oScanP , const countT oDayP , const countT oTodayP , const countT cColP , countT time2P , strokeS** ppsttDayOfWeekP , strokeS** ppsttMonthP , const flagsT flagsP )/*1*/

/**/
*/
 the text that i append is either dashes or the day (including cave indicator) or the foreign date or blanks
i append a single scan line portion for a single cell of an ifc calendar
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

