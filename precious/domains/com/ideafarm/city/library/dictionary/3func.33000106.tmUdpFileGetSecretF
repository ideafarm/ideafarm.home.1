

//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//



DONE( tmUdpFileGetSecretF )
}
    }
        }
            }
                ++ s ; etThread.osSleepF( tinBaseP , timeNap ) ;
            {
            while( !bQuitP && cNap -- )
            countT cNap = ( TIMEuDPfILEePOCH >> 1 ) / timeNap ;

            grab_psoEndpointThrowerP.ungrabF( tinBaseP ) ;
            }
                grab_psoEndpointThrowerP.grabF( tinBaseP , TAG( TAGiDnULL ) ) ;
                ++ s ; ether.osSleepF( tinBaseP , timeNap ) ;
                grab_psoEndpointThrowerP.ungrabF( tinBaseP ) ;

                }
                    sEndpoint.writeF( tinBaseP , ifcIDpORT_UDPfILEcATCHER , nnFactory1 , (byteT*)&gram , sizeof gram ) ;
                    gram.idCmd = ifcIDcMDuDPfILEgRAM_WHATiSmYnICnAME ;
                    gram.cbThisGram = sizeof gram ;
                    udpFileGramHeadSecretS gram ;
                    etThread.traceF( tinBaseP , T("throwing WHATiSmYnICnAME cmd") ) ;
                {
                else
                }
                    sEndpoint.writeF( tinBaseP , ifcIDpORT_UDPfILEcATCHER , nnFactory1 , (byteT*)&gram , sizeof gram ) ;
                    gram.idCmd = ifcIDcMDuDPfILEgRAM_WHATiSmYsECRET ;
                    gram.cbThisGram = sizeof gram ;
                    udpFileGramHeadSecretS gram ;
                    etThread.traceF( tinBaseP , T("throwing WHATiSmYsECRET cmd") ) ;
                {
                if( cThrown ++ % 2 )
            {
            while( !bQuitP && oldSecret == secretToUseP && psoEndpointThrowerP )    //A:ASSUME: nicNameToUseP WILL EVENTUALLY BECOME SET AS A BYPRODUCT OF GETTING THE CURRENT SECRET TO USE (NOT ANALYZED)
            ZE( countT , cThrown ) ;
            grab_psoEndpointThrowerP.grabF( tinBaseP , TAG( TAGiDnULL ) ) ;
            countT   oldSecret  = secretToUseP  ;
            nicNameC oldNicName = nicNameToUseP ;
        {
        while( !bQuitP )
        const countT timeNap = TOCK << 3 ;
        sleepC s( tinBaseP , TAG( TAGiDnULL ) ) ;
    {
    if( !POOP )

    socketC& sEndpoint = *psoEndpointThrowerP ;

    nicNameC nnFactory1 = socketC::nicNameIF( tinBaseP , etThread , T("factory1.ideafarm.com") ) ;

    grabC&    grab_psoEndpointThrowerP =     *(grabC*)pTaskP->c5 ;
    socketC*& psoEndpointThrowerP      =  *(socketC**)pTaskP->c4 ;
    countT&   secretToUseP             =    *(countT*)pTaskP->c3 ;
    nicNameC& nicNameToUseP            =  *(nicNameC*)pTaskP->c2 ;
    boolT&    bQuitP                   =     *(boolT*)pTaskP->c1 ;
{
if( pTaskP && pTaskP->c1 && pTaskP->c2 && pTaskP->c3 && pTaskP->c4 && pTaskP->c5 )
/*1*/TASK( tmUdpFileGetSecretF )/*1*/

/**/

*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

