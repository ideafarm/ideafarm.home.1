
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    __NZ( bImpotent ) ;

    }
        }
            ((tinFullS&)tinBaseP).pEther->delF( tinBaseP , pstt1f ) ;
            }
                //etherC::etRockIF( tinBaseP ).traceF( tinBaseP , T("deleted : ")+T(psttc1) ) ;
                ((tinFullS&)tinBaseP).pEther->diskFileOrDirDeleteF( tinBaseP , psttc1 ) ;
                //etherC::etRockIF( tinBaseP ).traceF( tinBaseP , T("deleting: ")+T(psttc1) ) ;
            {
            FORsTRINGSiN1( pstt1f )

            ((tinFullS&)tinBaseP).pcQuit = pcQuitSave ;

            countT cFound = ((tinFullS&)tinBaseP).pEther->diskFindFileOrDirF( tinBaseP , pstt1f , fnLike.pathF() , &pat , flDISKfIND_null , 0 , 0 , 0 , 8 ) ; ___( pstt1f ) ;
            ZE( strokeS* , pstt1f ) ;

            patternC pat( tinBaseP , *((tinFullS&)tinBaseP).pEther , fnLike , ifcIDtYPEpATTERN_FOREIGNwILDCARDsTRICT ) ;
            fileNameC fnLike( tinBaseP , *((tinFullS&)tinBaseP).pEther , tLike ) ;

                                       ((tinFullS&)tinBaseP).pcQuit = 0 ;
            const countT* pcQuitSave = ((tinFullS&)tinBaseP).pcQuit ;

            //etherC::etRockIF( tinBaseP ).traceF( tinBaseP , T("deleting: ")+tLike ) ;

            TN( tLike , "" ) ; tLike = T(iffn)+T(postName)+T(".*") ;

            ifFileNameC iffn( tinBaseP , *((tinFullS&)tinBaseP).pEther , postPath ) ;
        {
        if( !POOP )

        __Z( *postPath ) ;
        thirdC::postPathStateSpaceIF( tinBaseP , postPath , sizeof postPath , idStateSpace , idMemorySpaceCt ) ;
        osTextT postPath[ TUCK << 1 ] ;
    {
    if( F(flagsCt) & flNAPKINSc_PURGEoNdT )

    }
        }
            DELzOMBIE( pfDoomed ) ;
            fileC* pfDoomed = (fileC*)pbDockFile + offDock ;

            DELzOMBIE( pnDoomed ) ;
            napkinC* pnDoomed = (napkinC*)pbDockNapkin + offDock ;
        {
        if( pcDockOffNapkin[ offDock ] != - 1 )
    {
    for( countT offDock = 0 ; offDock < cDocks ; offDock ++ )

    }
        bImpotent = 1 ;
        POOPR
    {
    if( POOP )
    ZE( boolT , bImpotent )

    _IO_

    TINSL
{
/*1*/napkinsC::~napkinsC( voidT )/*1*/

/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

