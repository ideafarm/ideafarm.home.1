
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    }
        DELzOMBIE( pDoomed ) ;
        grabC* pDoomed = (grabC*)pbzaGrab + offs ;
    {
    for( countT offs = expSlotsMin ; offs < sizeof ppSex / sizeof ppSex[ 0 ] ; offs ++ )

    }
        inc02AM( pcTallyOut[ offs ] ) ;
        if( ppSex[ offs ] ) DELzOMBIE( ppSex[ offs ] ) ;
        inc02AM( pcTallyIn[ offs ] ) ;
    {
    for( countT offs = expSlotsMin ; offs < sizeof ppSex / sizeof ppSex[ 0 ] ; offs ++ )

    }
        inc02AM( pcTallyOut[ offs ] ) ;
        if( ppSex[ offs ] && !( F( ppSex[ offs ]->flagsStatePrivateF() ) & flSEXcsTATEpRIVATE_USINGnAPfORmETA ) ) { DELzOMBIE( ppSex[ offs ] ) ; }
        inc02AM( pcTallyIn[ offs ] ) ;
    {
    for( countT offs = expSlotsMin ; offs < sizeof ppSex / sizeof ppSex[ 0 ] ; offs ++ ) // DELETE sexC BACKED IN *pPoolContainsMe (I.E. NESTED IN OTHER sexC INSTANCES)

    //}
    //    CONoUTrAW( "\r\n" ) ;    
    //    CONoUTrAW( postName ) ;
    //    CONoUTrAW3( "\r\n~slotsC [idIn,name]:    " , idIn , "    " ) ;    
    //
    //    countT idIn = 1 + incv02AM( idInLath ) ;
    //    static countT idInLath ;
    //{
    //if( ((tinFullS&)tinBaseP).pc Utility[ 0 ] )

    _IO_

    TINSL
{
/*1*/slotsC::~slotsC( voidT )/*1*/

/**/

*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

