
}
    return offs ;

    if( !cbuMax ) offs = - 1 ;

    }
        cbuMax <<= 1 ;
        offs ++ ;
    {
    while( cbuMax && cbP > cbuMax )

    countT cbuMax = 1 << offs ;
    countT offs = guts.expCbDropMin ;
{
/*1*/countT poolC::expCbDropBigEnoughF( countT cbP )/*1*/
/**/
*/
/*
