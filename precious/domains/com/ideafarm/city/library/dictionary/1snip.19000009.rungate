
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    }
        etThread.delF( tin0P , psttHome ) ;
        }
            }
                etThread.delF( tin0P , psttLevel ) ;
                }
                    }
                        }
                            }
                                }
                                    if( pMainF ) (*pMainF)( &main ) ;
                                    mainS main( tin0P , ether , etThread , T("cid ")+tCid+T(" level ")+T(psttLevel) ) ;
                                {
                                else
                                if( etThread ) ifcGATEeRROR( 9 )
                                etThread.dllEntryF( tin0P , pMainF , hDll , T("mainF") ) ;
                                ZE( mainFT , pMainF ) ;
                                etThread.strokeF( tin0P , T("")+S2(saOLD_EDITeRASEbACKtOmARK,scOld_EDIT)+S2(0,scOld_SYSmARK)+T("step 9 of 31") ) ;
                            {
                            else
                            if( etThread ) ifcGATEeRROR( 8 )
                            etThread.dllOpenF( tin0P , hDll , T("///ideafarm/ephemeral/domains/com/ideafarm/city/park/")+T(psttLevel)+T("/ideafarm.51000400.ipdos-wd") ) ;
                            ZE( countT , hDll ) ;
                            etThread.strokeF( tin0P , T("")+S2(saOLD_EDITeRASEbACKtOmARK,scOld_EDIT)+S2(0,scOld_SYSmARK)+T("step 8 of 31") ) ;
                        {
                        else
                        if( etThread ) ifcGATEeRROR( 7 )
                        hoverC hoverLevel( tin0P , etThread , T("///ideafarm/ephemeral/domains/com/ideafarm/city/park/")+T(psttLevel)+T("/") ) ;
                        etThread.strokeF( tin0P , T("")+S2(saOLD_EDITeRASEbACKtOmARK,scOld_EDIT)+S2(0,scOld_SYSmARK)+T("step 7 of 31") ) ;
                    {
                    else
                    if( etThread ) ifcGATEeRROR( 6 )
                    refreshFilesF( tin0P , etThread , psttLevel ) ;
                    etThread.strokeF( tin0P , T("")+S2(saOLD_EDITeRASEbACKtOmARK,scOld_EDIT)+S2(0,scOld_SYSmARK)+T("step 6 of 31") ) ;
                {
                else
                if( etThread ) ifcGATEeRROR( 5 )
                etThread.boxGetShadow::20141115@1937::MIGRATE:TO:USE:SETTINGS.BIT.TREE::SettingF( tin0P , psttLevel , T("///ideafarm/ephemeral/domains/com/ideafarm/city/settings/")+tCid+T("/reliability") , T("7use") , T("1build\r\n2play\r\n3check\r\n4batter\r\n5useok\r\n6usebetter\r\n7use") ) ; ___( psttLevel ) ;
                TNCID ;
                ZE( strokeS* , psttLevel ) ;
                etThread.strokeF( tin0P , T("")+S2(saOLD_EDITeRASEbACKtOmARK,scOld_EDIT)+S2(0,scOld_SYSmARK)+T("step 5 of 31") ) ;
            {
            else        
            if( etThread ) ifcGATEeRROR( 4 )
            etThread.boxPourF( tin0P , T(WWWiDEAFARMcOM) , T("///ideafarm/ephemeral/domains/com/ideafarm/city/data/new/") , T("///ideafarm/ephemeral/domains/com/ideafarm/city/data/out/") , 0x100000 , CbOXpOURmAX ) ;
            etThread.strokeF( tin0P , T("")+S2(saOLD_EDITeRASEbACKtOmARK,scOld_EDIT)+S2(0,scOld_SYSmARK)+T("step 4 of 31") ) ;

            }
                etThread.strokeF( tin0P , T("")+S2(saOLD_EDITeRASEbACKtOmARK,scOld_EDIT)+tWarn+T("\r\n")+S2(0,scOld_SYSmARK) ) ;
                /*U: HOSTlOG( etThread , tWarn ) ; */
                textC tWarn = T("step 3 note (2): only ")+TF1(cbFree)+T(" bytes") ;
            {
            if( cbFree < 0x800000 )
            etThread.strokeF( tin0P , T("")+S2(saOLD_EDITeRASEbACKtOmARK,scOld_EDIT)+S2(0,scOld_SYSmARK)+T("step 3 of 31") ) ;

            etThread.strokeF( tin0P , T("")+S2(saOLD_EDITeRASEbACKtOmARK,scOld_EDIT)+T("step 2 note (1): \"")+T(psttHome)+T("\"\r\n")+S2(0,scOld_SYSmARK) ) ;
        {
        else
        if( etThread ) ifcGATEeRROR( 2 )
        countT cbFree = etThread.diskChooseSiteF( tin0P , psttHome , T("ideafarm") ) ;
        ZE( strokeS* , psttHome ) ;
        etThread.strokeF( tin0P , T("")+S2(saOLD_EDITeRASEbACKtOmARK,scOld_EDIT)+S2(0,scOld_SYSmARK)+T("step 2 of 31") ) ;
    {
    else
    if( etThread ) ifcGATEeRROR( 1 )
    /*U: HOSTlOG( etThread , "gate step 1" ) ; */
    etThread.strokeF( tin0P , T("")+S2(saOLD_EDITeRASEbACKtOmARK,scOld_EDIT)+S2(0,scOld_SYSmARK)+T("step 1 of 31") ) ;

    ((tin1S&)tin0P).flagsThreadMode1 |= flTHREADmODE1_SHOWpROGRESS ;
    etThread.paperTitleF( tin0P , T("IdeaFarm " "(tm) City: see http://www.ideafarm.com for instructions and assistance") ) ;
    //etThread.osThreadSwitchingDesireF( tin0P , ifcTHREADpRIORITY_RUSH ) ;
{
else
}
    etThread.strokeF( tin0P , T("Another 0100001 appears to be alive on this computer.  Only one is allowed.") ) ;
    etThread = 0  ;
{
if( etThread )
//U::USE A napkinC OBJECT TO TEST FOR ALONENESS
batonC baton( tin0P , TAG( TAGiDnULL ) , T("0100001") ) ;
/*1*//*RUNgATE*//*1*/

/**/
*/
it is illegal to refer to this symbol in the definition of an adam
\<A HREF=\"5.005000c.1.0.html\"\>definition\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

