
//
// Copyright (c) 1992-2025 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


REST

etherC::loafIF( tin0P ) ;
etThread.traceF( tin0P , T("ok") ) ;

#endif


 S: 220-smtp.example.com ESMTP Server
   C: EHLO client.example.com
   S: 250-smtp.example.com Hello client.example.com
   S: 250-AUTH GSSAPI DIGEST-MD5
   S: 250-ENHANCEDSTATUSCODES
   S: 250 STARTTLS
   C: STARTTLS
   S: 220 Ready to start TLS
     ... TLS negotiation proceeds, further commands
         protected by TLS layer ...
   C: EHLO client.example.com
   S: 250-smtp.example.com Hello client.example.com
   S: 250 AUTH GSSAPI DIGEST-MD5 PLAIN
   C: AUTH PLAIN [redacted]
   S: 235 2.7.0 Authentication successful


#if defined( NEVERdEFINED )
//ABOVE THIS LINE: CODEMINE

}

    CONoUTrAW( "\r\nafter writing password\r\n" ) ;

    ss.verifyReplyF( tin0P , 235 ) ;
    ss.writeF( tin0P , (osTextT*)tSay , (countT)tSay.csF( tin0P ) ) ;
    tSay = T("[redacted]\r\n") ;

    CONoUTrAW( "\r\nwriting password\r\n" ) ;

    ss.verifyReplyF( tin0P , 334 ) ;
    ss.writeF( tin0P , (osTextT*)tSay , (countT)tSay.csF( tin0P ) ) ;
    tSay = T("[redacted]\r\n") ;

    CONoUTrAW( "\r\nwriting username\r\n" ) ;

    ss.verifyReplyF( tin0P , 334 ) ;
    ss.writeF( tin0P , (osTextT*)tSay , (countT)tSay.csF( tin0P ) ) ;
    tSay = T("auth login\r\n") ;
    //B: tSay = T("auth plain postmaster@unconfirmed.ideafarm.com [redacted]\r\n") ;

    ss.verifyReplyF( tin0P , 250 ) ;

    ss.writeF( tin0P , (osTextT*)tSay , (countT)tSay.csF( tin0P ) ) ;
    tSay = T("ehlo unconfirmed.ideafarm.com\r\n") ;

    ss.shakeHandsAsClientF( tin0P ) ;

    ss.verifyReplyF( tin0P , 220 ) ;
    ss.writeF( tin0P , (osTextT*)tSay , (countT)tSay.csF( tin0P ) ) ;
    tSay = T("starttls\r\n") ;

    ss.verifyReplyF( tin0P , 250 ) ;
    ss.writeF( tin0P , (osTextT*)tSay , (countT)tSay.csF( tin0P ) ) ;
    TN( tSay , "ehlo unconfirmed.ideafarm.com\r\n" ) ;

    ss.verifyReplyF( tin0P , 220 ) ;
    ss.connectF( tin0P , 587 , socketC::nicNameIF( tin0P , etThread , T("smtp.mailgun.org") ) ) ;
    socketC ss( tin0P , etThread , TAG( TAGiDnULL ) , ifcSOCKETtYPE_STREAM , flSOCKETc_CRYPTfOREIGNsSL | flSOCKETc_CRYPTfOREIGNsSLdEFERhANDSHAKE ) ;
{

TODO

/*1*/WAKEsHOWtEXT( "doodle.smtp.mailgun" )/*1*/
/**/
*/
i use bare metal sockets code to test the basic thirdC::openSsl_* member functions
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2025 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

