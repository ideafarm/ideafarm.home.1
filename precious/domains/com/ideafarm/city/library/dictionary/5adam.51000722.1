
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


REST

etherC::loafIF( tinBaseP ) ;
etThread.traceF( tinBaseP , T("ok") ) ;

etThread.diskWalkF( tinBaseP , cDirs , cFiles , T("///d/tmp/archive.shrunk/") , bQuit , diskWalkFooCBF , 0 , 0 , 0 ) ;
ZE( boolT , bQuit ) ;
ZE( countT , cFiles ) ;
ZE( countT , cDirs ) ;

TODO


}
    return bDoIt ;

    }
        ((tinNormalS&)tinBaseP).pEther->delF( tinBaseP , psttShort ) ;
        ((tinNormalS&)tinBaseP).pEther->delF( tinBaseP , psttPath ) ;

        }
            DEL( pInfoShrunk ) ;
            DEL( pInfoUnshrunk ) ;

            }
                ((tinNormalS&)tinBaseP).pEther->diskFileOrDirDeleteF( tinBaseP , tShrunk , flFILEoRdIRdELETE_null , 0 ) ;
                etherC::etRockIF( tinBaseP ).traceF( tinBaseP , T("deleting: ")+tShrunk ) ;
            {
            if( pInfoShrunk->cbUsedHigh > pInfoUnshrunk->cbUsedHigh || pInfoShrunk->cbUsed > pInfoUnshrunk->cbUsed )

            }
                ((tinNormalS&)tinBaseP).pEther->diskFileQueryF( tinBaseP , pInfoUnshrunk , fi ) ;
                fileC fi( tinBaseP , (strokeS*)tUnshrunk , ifcOPENaCCESS_R , ifcOPENsHARE_R , flOPENdETAILS_LOCsEQ , ifcOPENhOW_nFeO , flFILEaTTR1_null, flFILEaTTR2_null , flFILEc_null , 0 , 0 ) ;
            {
            ZE( infoFileS* , pInfoUnshrunk ) ;

            }
                ((tinNormalS&)tinBaseP).pEther->diskFileQueryF( tinBaseP , pInfoShrunk , fi ) ;
                fileC fi( tinBaseP , (strokeS*)tShrunk , ifcOPENaCCESS_R , ifcOPENsHARE_R , flOPENdETAILS_LOCsEQ , ifcOPENhOW_nFeO , flFILEaTTR1_null, flFILEaTTR2_null , flFILEc_null , 0 , 0 ) ;
            {
            ZE( infoFileS* , pInfoShrunk ) ;
        {
        if( ((tinNormalS&)tinBaseP).pEther->diskFileExistsF( tinBaseP , tUnshrunk ) )

        TN( tUnshrunk , "" ) ; tUnshrunk = T("///d/tmp/archive.unshrunk/")+T(psttShort) ;

        ((tinNormalS&)tinBaseP).pEther->strBisectF( tinBaseP , psttPath , psttShort , tShrunk , T("/") , -1 , flSTRbISECT_APPENDdELIMITER , 0 ) ;  ___( psttPath ) ; ___( psttShort ) ;
        ZE( strokeS* , psttShort ) ;
        ZE( strokeS* , psttPath ) ;

        TN( tShrunk , ifName ) ;
        ifFileNameC ifName( tinBaseP , *((tinNormalS&)tinBaseP).pEther , postNameP ) ;
    {
    if( postNameP[ thirdC::c_strlenIF( tinBaseP , postNameP ) - 1 ] != '\\' && ((tinNormalS&)tinBaseP).pEther ) // IF NOT A DIRECTORY
    ZE( boolT , bDoIt ) ;
    _IO_
{
/*1*/boolT diskWalkFooCBF( tinBaseS& tinBaseP , countT& cDirsP , countT& cFilesP , boolT& bQuitP , const osTextT* const postNameP , countT* const pcArgP , const countT* const pModuloFilesP , const countT* const pModuloDirsP )/*1*/


/*1*/WAKEsHOWtEXT( "tool.archive.zap.shrunk.if.bigger" )/*1*/
/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
