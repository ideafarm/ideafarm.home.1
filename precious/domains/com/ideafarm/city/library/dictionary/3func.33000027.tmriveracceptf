
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


DONE( tmRiverAcceptF )
}
    TELL( "tmRiverAcceptF: cleaning up" )
    }
        }
            ++ s ; etThread.osSleepF( tin0P , TOCK ) ;
            sleepC s( tin0P , TAG( TAGiDnULL ) ) ;
        {
    {
    while( !ether && !etThread && cClients )

    TELL( "cleaning up: waiting for all sessions to end" )
    }
        }
            else                                   { DEL( pso ) ; }
            if( !bDestroy && !ether && !etThread ) { ZE( countT , tnu ) ; etThread.osThreadF( tin0P , tnu , tmRiverServeF , 0 , 0  , flTHREADlAUNCH_null , 0 , 0 , (countT)&bDestroy , (countT)pso , (countT)pRiver , (countT)&cClients ) ; }
            TELL( "launching a thread to serve connection" )
            __( bRefuse ) ;
            in.acceptF( tin0P , pso , idPortPeer , nnPeer , bRefuse ) ;
            ZE( boolT , bRefuse ) ;
            ZE( countT , idPortPeer ) ;
            nicNameC nnPeer ;
            TELL( "waiting for a host to connect" )
            }
                sgnReady.giveF( tin0P ) ;
                bSgnGiven = 1 ;
            {
            if( !bSgnGiven )
            ZE( socketC* , pso ) ;
        {
        while( !POOP && !bDestroy )
        in.listenF( tin0P ) ;
        in.bindF( tin0P , idPort ) ;
        socketC in( tin0P , etThread , TAG( TAGiDnULL ) ) ;
        TELL( "setting up a new or replacement socket" )
    {
    while( !ether && !bDestroy )
    ZE( boolT , bSgnGiven ) ;

    ZE( countT , cClients ) ;
    signC&  sgnReady = *(signC*)pTaskP->c4 ;
    riverC* pRiver   = (riverC*)pTaskP->c3 ;
    countT  idPort   =          pTaskP->c2 ;
    boolT&  bDestroy = *(boolT*)pTaskP->c1 ;
    TELL( "setting up" )
{
if( pTaskP && pTaskP->c1 && pTaskP->c2 && pTaskP->c3 )
/*1*/TASK( tmRiverAcceptF )/*1*/
/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

