
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    return *this ;
    if( pBaton ) pBaton->ungrabF( tinBaseP ) ;

    if( !third ) *pStack << valueP ;
    }
        ( bTinHasLeverP ? swMe.forIfcThreadF( tinBaseP ) : (countT&)swMe ) = (countT)pStack ;
        __Z( pStack ) ;
        pStack = new( 0 , tinBaseP , LF ) stackC( tinBaseP , third , TAG( TAGiDnULL ) , flagsStack , idType , idGrabLayer , swMe.pLeverLathRefF( tinBaseP ) , 0 , pCbF ) ; ___BITScT( pStack , 0xecf ) ;
    {
    if( !pStack )
    stackC* pStack = (stackC*)( bTinHasLeverP ? swMe.forIfcThreadF( tinBaseP ) : (countT)swMe ) ;
    else if( osTidOwner != ((tin9S&)tinBaseP).osTid && !bDying && !( F(flagsSwitch) & flSTACKc_ALLOWmULTIPLEuNSERIALIZED ) ) BLAMMO ;
    else if( !osTidOwner ) osTidOwner = ((tin9S&)tinBaseP).osTid ;
    if( pBaton ) pBaton->grabF( tinBaseP , TAG( TAGiDnULL ) ) ;

    }
        if( third ) return *this ;
    {
    IFbEcAREFUL    
    SCOOP
{
/*1*/switchStackC& switchStackC::pushF( tin0S& tinBaseP , const countT valueP , const boolT bTinHasLeverP )/*1*/

/**/
*/
 valueP
arguments
like operator << except also supports bTinHasLeverP
evaluates to a reference to this stack object
places the address of an object onto this stack object
  \<A HREF=\"5.2330104.1.1.0.html\"\>2330104:  WAKEsHOW( "example.simplest.func.1210037.switchStackC.pushF" )\</A\>
 simplest
examples
\<A HREF=\"5.1210037.1.0.html\"\>definition\</A\>
\<A HREF=\"6.$pushF.0.html\"\>instances\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

