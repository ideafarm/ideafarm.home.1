
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


REST

etherC::loafIF( tinBaseP ) ;
etThread.traceF( tinBaseP , T("ok") ) ;

etThread.traceF( tinBaseP , T("cDuplicates: ")+TF2(cDuplicates,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED) ) ;

}
    }
        }
            etThread.delF( tinBaseP , postf ) ;
            etThread.traceF( tinBaseP , T(postf) ) ;
            swsNameByHash >> postf ;
            ZE( osTextT* , postf ) ;
        {
        while( swsNameByHash )

        }
            cDuplicates += cEqual - 1 ;
            etThread.traceF( tinBaseP , T("cEqual: ")+TF2(cEqual,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED) ) ;
        {
        if( cEqual > 1 )
        countT cEqual = swsNameByHash ;

        etThread.delF( tinBaseP , psttd ) ;
        etThread.traceF( tinBaseP , T(psttd) ) ;
        etThread.strDumpIF( tinBaseP , psttd , pbLever , sizeof pbHash , flSTRdUMP_FOREIGN ) ; ___( psttd ) ;
        ZE( strokeS* , psttd ) ;

        pbLever = (byteT*)swsNameByHash.leverF( tinBaseP , idf ) ;
    {
    for( countT idf = 1 ; idf <= cFlavors ; idf ++ )
    etThread.traceF( tinBaseP , T("cFlavors: ")+TF2(cFlavors,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED)+T("    ")+TF4(cFlavors,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED|flFORMAT_FOREIGN,0,0xa) ) ;
    countT cFlavors = swsNameByHash.cFlavorsF( tinBaseP ) ;
{
ZE( countT , cDuplicates ) ;

while( !ether && !POOP && ~hFind ) ;
}
    DEL( pInfo ) ;
    }
        swsNameByHash << postf ; postf = 0 ;

        etThread.strMakeF( tinBaseP , LF , postf , pInfo->psttIfoName ) ; ___( postf ) ;
        ZE( osTextT* , postf ) ;

        hasher.queryF( tinBaseP , pbHash , sizeof pbHash ) ;
        hasher.eatF( tinBaseP , pInfo->psttIfoName ) ;
        hasherC hasher( tinBaseP , etThread ) ;

        etThread.traceF( tinBaseP , pInfo->psttIfoName ) ;
    {
    if( pInfo && pInfo->psttIfoName && pInfo->psttIfoName[ CSpREFIX - 1 + pInfo->psttIfoName->idAdam ].idAdam != '/' )
    etThread.diskFindFileOrDirOldF( tinBaseP , pInfo , hFind , tLike ) ;
    ZE( infoFileS* , pInfo ) ;
{
do
handleC hFind( tinBaseP , TAG( TAGiDnULL ) , ifcIDtYPEhANDLE_FILEfIND ) ;

TN( tLike , "///d/ideafarm.home.101/IdeaFarm (tm)/SYSTEM/2.1. Drop Files Here To Archive Them/*" ) ;
//TN( tLike , "///d/tmp/x/a/*" ) ;

switchStackC swsNameByHash( tinBaseP , etThread , TAG( TAGiDnULL ) , flSTACKc_DOnOTsERIALIZE , pbLever , sizeof pbHash , flSTACKc_DOnOTsERIALIZE , ifcSTACKtYPE_PTR_byteT ) ;
const byteT* pbLever = pbHash ;
byteT pbHash[ 4 * sizeof( count02T ) ] ;

TODO

/*1*/WAKEsHOWtEXT( "tool.detect.duplicate.content.in.archive" )/*1*/
/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

