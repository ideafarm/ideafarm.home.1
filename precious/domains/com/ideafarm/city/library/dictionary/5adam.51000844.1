
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


REST

etherC::loafIF( tinBaseP ) ;
etThread.traceF( tinBaseP , T("ok") ) ;

etThread.boxPutF( tinBaseP , T("///d/tmp/uns.annotated") , posto , costo ) ;

etThread.delF( tinBaseP , pstto ) ;
countT costo = etThread.strMakeF( tinBaseP , LF , posto , pstto ) ; ___( posto ) ;
ZE( osTextT* , posto ) ;

etThread.delF( tinBaseP , pstt1w ) ;
}
    }
        else                                                                                      etThread.strFuseF( tinBaseP , pstto , T(psttc1)+tb4+tPath+tEOL ) ;
        if( !etThread.strIdF( tinBaseP , tDo , psttc1 ) || etThread.strIdF( tinBaseP , tDone , psttc1 ) ) etThread.strFuseF( tinBaseP , pstto , T(psttc1)+tEOL ) ;
    
        }
            etThread.delF( tinBaseP , psttPath ) ;
            tPath = T(psttPath) ;
            etThread.strSubstringF( tinBaseP , psttPath , idf , idl , psttc1 ) ; ___( psttPath ) ;
            ZE( countT , idl ) ;
            countT idf = idfUse ;
            ZE( strokeS* , psttPath ) ;
        {
        if( 1 == etThread.strIdF( tinBaseP , tBefore , psttc1 ) )    
    
        //etThread.traceF( tinBaseP , psttc1 , flTRACE_NOpREFIX | flTRACE_NObOOK ) ;
    {
    FORsTRINGSiN1( pstt1w )
    const countT idfUse = tBefore.csF( tinBaseP ) + 1 ;
    TN( tDone   , "    D:\\"       ) ;
    TN( tDo     , "!ideafarm."     ) ;
    TN( tBefore , " Directory of " ) ;
    TN( tPath   , ""               ) ;
    TN( tb4     , "    "           ) ;

    etThread.strMakeF( tinBaseP , LF , pstto , 0 , cstti << 1 ) ; ___( pstto ) ;
{
ZE( strokeS* , pstto ) ;

etThread.delF( tinBaseP , pstti ) ;
etThread.strWordsF( tinBaseP , pstt1w , pstti , sttq , tEOL , flSTRwORDS_null ) ; ___( pstt1w ) ;
TN( tEOL , "\r\n" ) ;
strokeS sttq( 0 , sc_IGNOREqUOTES ) ;
ZE( strokeS* , pstt1w ) ;

countT cstti = pstti->idAdam ;
etThread.delF( tinBaseP , posti ) ;
etThread.strMakeFromOsTextF( tinBaseP , pstti , posti , costi ) ; ___( pstti ) ;
ZE( strokeS* , pstti ) ;

etThread.boxGetShadowF( tinBaseP , posti , costi , T("///d/tmp/uns") ) ;
ZE( countT   , costi ) ;
ZE( osTextT* , posti ) ;

TODO

/*1*/WAKEsHOWtEXT( "tool.annotate.dir.listing.to.append.path.after.file.name" )/*1*/
/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
