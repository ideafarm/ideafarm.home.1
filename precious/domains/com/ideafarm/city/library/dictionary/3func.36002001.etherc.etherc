
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    }
        //traceF( tinBaseP , T("etherC::etherC [psttEarlyFolder]:    ")+T(((tinFullS&)tinBaseP).pag1->_etherC_.psttEarlyFolder) ) ;
        diskGetHoverF( tinBaseP , ((tinFullS&)tinBaseP).pag1->_etherC_.psttEarlyFolder ) ; ___( ((tinFullS&)tinBaseP).pag1->_etherC_.psttEarlyFolder ) ;

        if( !((tinFullS&)tinBaseP).pcQuit ) ((tinFullS&)tinBaseP).pcQuit = &(const countT&)POOP ;

        //etherC::etRockIF( tinBaseP ).traceF( tinBaseP , T("etherC etPrime [this,&poop]:    ")+TF2((countT)this,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED)+T("    ")+TF2((countT)&poop,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED) ) ;
    {
    if( this == ((tinFullS&)tinBaseP).pag1->_etherC_.pEtPrime )

    if( &tinBaseP != &processGlobal4I.tinNormalVeryVeryEarlyLateMain && ((tinFullS&)tinBaseP).pag1->_etherC_.pEtPrime && ((tinFullS&)tinBaseP).pag1->_etherC_.pSwEtThread && *((tinFullS&)tinBaseP).pag1->_etherC_.pSwEtThread == (countT)this ) ((tinFullS&)tinBaseP).pEther = this ;

    }
        third.pswPaintInfoFromDrawingHandle = new( 0 , tinBaseP , LF ) switchC( tinBaseP , third , TAGoR( TAGiDnULL , idLineCt , idiFileCt , pbBitsCt ) , flSTACKc_null , third.lever_swPaintInfoFromDrawingHandle ) ; ___( third.pswPaintInfoFromDrawingHandle ) ;
        third.pswWinFromDrawDuringPaint     = new( 0 , tinBaseP , LF ) switchC( tinBaseP , third , TAGoR( TAGiDnULL , idLineCt , idiFileCt , pbBitsCt ) , flSTACKc_null , third.lever_swWinFromDrawDuringPaint     ) ; ___( third.pswWinFromDrawDuringPaint ) ;
        third.pswWinFromDraw                = new( 0 , tinBaseP , LF ) switchC( tinBaseP , third , TAGoR( TAGiDnULL , idLineCt , idiFileCt , pbBitsCt ) , flSTACKc_null , third.lever_swWinFromDraw                ) ; ___( third.pswWinFromDraw ) ;
    {
    if( F(thirdC::third_flagsModeProcess2I_IF()) & flMODEpROCESS2_FANCY )

    third.pEtherContainsMe = this ;

    spacerSetF( tinBaseP ) ;
    //if( pcFunctionEntries && pcFunctionExits && pcFunctionTime1 && pcFunctionTime2 ) bFunctionCountersReady = 1 ;
    third.osTimeNowF( tinBaseP , timeBorn1 , timeBorn2 ) ;
    }
        thirdC::c_memcpyIF( tinBaseP , *(osTextT**)&postName , postNameP , 1 + costName ) ;
        newF( tinBaseP , LF , *(osTextT**)&postName , 1 + costName ) ; ___( postName ) ;
        countT costName = thirdC::c_strlenIF( tinBaseP , postNameP ) ;
    {
    if( postNameP )

    else            thirdC::c_memsetIF( tinBaseP , (byteT*)pbBitsCt , sizeof pbBitsCt ) ;
    if( pbBitsCtP ) thirdC::c_memcpyIF( tinBaseP , (byteT*)pbBitsCt , (byteT*)pbBitsCtP , sizeof pbBitsCt ) ;

    _IO_

    }
        if( POOP ) return ;
        FV( flWATCH     , flagsWatchP ) ;
        FV( flTHIRDmODE , flagsModeP ) ;
        if( POOP ) return ;
    {
    IFbEcAREFUL
    SCOOP
{
grabOsMake( tinBaseP , idLineCtP , idiFileCtP , pbBitsCtP , flGRABc_NOTjEALOUS , ifcIDgRABlAYER_OSmAKE )
cProgressDflt( 0 ) ,
psttUid( 0 ) ,
flagsWatch( third.flagsWatch ) ,
flagsMode( third.flagsMode ) ,
//pcRaceId( 0 ) ,
//bFunctionCountersReady( third.bFunctionCountersReady ) ,
//pcFunctionTime2( third.pcFunctionTime2 ) ,
//pcFunctionTime1( third.pcFunctionTime1 ) ,
//pcFunctionExits( third.pcFunctionExits ) ,
//pcFunctionEntries( third.pcFunctionEntries ) ,
timeSlept2( 0 ) ,
timeSlept1( 0 ) ,
timeSleep2( 0 ) ,
timeSleep1( 0 ) ,
timeBorn2( 0 ) ,
timeBorn1( 0 ) ,
psttLog( 0 ) ,
idTraceType( 0 ) ,
idTraceLevel( 0 ) ,
idiFileCt( idiFileCtP ) ,
idLineCt( idLineCtP ) ,
bClocks( tinBaseP , TAGoR( TAGiDnULL , idLineCtP , idiFileCtP , pbBitsCtP ) , 0 , ifcIDgRABlAYER_cBcLOCKS , flBATONc_NOTjEALOUS ) ,
etherInit( tinBaseP , (countT)this ) ,
poop( (poopC&)(const poopC&)third ) ,
third( tinBaseP , TAGoR( TAGiDnULL , idLineCtP , idiFileCtP , pbBitsCtP ) , flagsModeP , flagsWatchP ) ,
postName( 0 ) ,
baseSoilXxxxC( ((tinFullS&)tinBaseP).pag1->_etherC_.postOldClassName , postName ) ,
/*1*/etherC::etherC( tinBaseS& tinBaseP , const countT idLineCtP , const countT idiFileCtP , const byteT* const pbBitsCtP , const flagsT flagsModeP , const flagsT flagsWatchP , const osTextT* const postNameP )/*1*/ :

/**/
*/
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/1snip.0010091.flWATCH!||
 flagsWatchP
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/1snip.0010098.flTHIRDmODE!||
 flagsModeP
 idiFileCtP
 idLineCtP
arguments
  \<A HREF=\"5.e010104.1.1.0.html\"\>e010104:  WAKEsHOW( "example.simplest.func.1030002.etherC.etherC" )\</A\>
 simplest
examples
\<A HREF=\"5.1030002.1.0.html\"\>definition\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

