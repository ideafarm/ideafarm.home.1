
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


//VISIBLE

REST
etThread.osProcessIdPhaseAdamF( tinBaseP , ifcIDpHASEhANDOFFoLD_SHUTTINGdOWN ) ;

HEAReNTER( etThread ) ;

etThread.boxZapF( tinBaseP , T("///ideafarm/ephemeral/tmp/b210104.4") ) ;
etThread.boxZapF( tinBaseP , T("///ideafarm/ephemeral/tmp/b210104.3") ) ;
etThread.boxZapF( tinBaseP , T("///ideafarm/ephemeral/tmp/b210104.2") ) ;
etThread.boxZapF( tinBaseP , T("///ideafarm/ephemeral/tmp/b210104.1") ) ;

etThread.delF( tinBaseP , pstt1m ) ;
FORsTRINGSiN1( pstt1m ) etThread.strokeF( tinBaseP , T(" \"")+T(psttc1)+T("\"\r\n") ) ;
etThread.strokeF( tinBaseP , T("i found ")+TF1(cFound)+T(" files"":\r\n\r\n") ) ;
countT cFound = etThread.diskFindFileOrDirOldF( tinBaseP , pstt1m , T("///ideafarm/ephemeral/tmp/b210104.?") ) ;
ZE( strokeS* , pstt1m ) ;

etThread.boxPutF( tinBaseP , T("///ideafarm/ephemeral/tmp/b210104.4") , "dddd" ) ;
etThread.boxPutF( tinBaseP , T("///ideafarm/ephemeral/tmp/b210104.3") , "ccc" ) ;
etThread.boxPutF( tinBaseP , T("///ideafarm/ephemeral/tmp/b210104.2") , "bb" ) ;
etThread.boxPutF( tinBaseP , T("///ideafarm/ephemeral/tmp/b210104.1") , "a" ) ;

TODO

/*1*/WAKEhIDE( "example.simplest.func.103001c.etherC.diskFindFileOrDirOldF" )/*1*/
/**/
*/
\<A HREF=\"5.b210104.1.0.html\"\>definition\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

