
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//

    
REST

etThread.delF( tinBaseP , psttValue ) ;

etThread.strokeF( tinBaseP , T("\f") ) ;
sDone_tmWatchPromptF.waitF( tinBaseP ) ;
sPrompt.giveF( tinBaseP ) ;

FIREmYSELF ;
}
    ether.osSleepF( tinBaseP , TOCK * 0x10 ) ;
    sleepC s( tinBaseP , TAG( TAGiDnULL ) ) ;
{

etThread.strokeF( tinBaseP , tSay ) ;

;

    S2(0,scOld_POPfRAME)
        S2(0,scOld_POPfRAME)+
            buPrompt+
            T("\r\n")+
            buHint+
        S3(1.0,scOld_mmFRAMEcELLS,2.0)+
        S3(1.0,scOld_mmPADfORsADAMfRAMES,1.0)+
    S3(1,scOld_ccFRAMEfORsADAMfRAMES,1)+
    T("")+

tSay =
TN( tSay , "" ) ;

etThread.osThreadF( tinBaseP , countTC() , tmWatchPromptF , &sDone_tmWatchPromptF , 0 , 0  , flTHREADlAUNCH_null , 0 , 0 , (countT)&buPrompt , (countT)&buHint ) ;
signC sDone_tmWatchPromptF( tinBaseP , TAG( TAGiDnULL ) ) ;

tcPromptC buPrompt( tinBaseP , etThread , psttValue , T(">") , &bPrompt , &sPrompt , flTCfEATURE_defaultButton | flTCfEATURE_TABpARTICIPANT | flTCfEATURE_TABhEREsUPPRESSEShOTkEYS ) ;
ZE( strokeS* , psttValue ) ;
signC  sPrompt( tinBaseP , TAG( TAGiDnULL ) ) ;
batonC bPrompt( tinBaseP , TAG( TAGiDnULL ) ) ;

tcButtonC buHint( tinBaseP , 0 , 0 , flTCfEATURE_defaultButton , 0 , 0 , 1 ) ;

TODO

DONE( tmWatchPromptF )
}
    }
        bPrompt.ungrabF( tinBaseP ) ;
        buHintP.setF( tinBaseP , T("")+S3((measureT)psttValue->idAdam,scOld_mmFRAMEcELLS,(measureT)1.0)+T(psttValue)+S2(0,scOld_POPfRAME) ) ;
        bPrompt.grabF( tinBaseP , TAG( TAGiDnULL ) ) ;

        if( ether ) break ;
        sPrompt.waitF( tinBaseP ) ;
    {
    for(;;)

    strokeS*& psttValue = *(strokeS**)buPromptP ;
    signC&    sPrompt   = buPromptP ;
    batonC&   bPrompt   = buPromptP ;

    tcButtonC& buHintP    = *(tcButtonC*)pTaskP->c2 ;
    tcPromptC& buPromptP  = *(tcPromptC*)pTaskP->c1 ;
{
if( pTaskP && pTaskP->c1 && pTaskP->c2 )
TASK( tmWatchPromptF )

/*1*/WAKEsHOW( "example.simplest.snip.00300d5.tcPromptC" )/*1*/
/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

