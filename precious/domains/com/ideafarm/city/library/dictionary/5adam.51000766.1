
//
// Copyright (c) 1992-2025 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//

                            
REST

etherC::loafIF( tin0P ) ;
etThread.traceF( tin0P , T("ok") ) ;

etThread.diskWalkF( tin0P , cDirs , cFiles , T("///d/tmp/locker/") , ether , flDISKwALK_null , workCBF , 0 , 0 , 0 ) ;
ZE( countT , cFiles ) ;
ZE( countT , cDirs ) ;

etThread.traceF( tin0P , T("walking the directory tree") ) ;

FindClose( oshs ) ;
static countT rc = GetLastError() ;
static HANDLE oshs = FindFirstFile( "d:\\tmp\\locker\\*" , &info ) ;
static WIN32_FIND_DATA info ;

TODO

}
    return 0 ;

    }
        etherP.traceF( tin0P , tName ) ;
        TN( tName , ifName ) ;
        ifFileNameC ifName( tin0P , etherP , postNameP ) ;

        etherC& etherP            =  *((tin1S&)tin0P).pEther ;
        _IO_
    {
    if( postNameP )
    _IO_
{
boolT workCBF( tin0S& tin0P , countT& cDirsP , countT& cFilesP , const boolT& bQuitP , const osTextT* const postNameP , countT* const pcArgP , const countT* const pModuloDirsP , const countT* const pModuloFilesP )

/*1*/WAKEsHOWtEXT( "doodle.walk.locked.directory" )/*1*/
/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2025 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
