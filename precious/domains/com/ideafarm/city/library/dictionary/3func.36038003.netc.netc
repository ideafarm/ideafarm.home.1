
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    baton.ungrabF( tinBaseP ) ;
    if( idPort ) third.osThreadF( tinBaseP , countTC() , _tmCatchF , 0 , 0  , flTHREADlAUNCH_null , 0 , 0 , (countT)&bQuit_tmCatch , (countT)&bDone_tmCatch , idPort , (countT)&b_stCatch , (countT)&stCatch , (countT)&sgnCatch , (countT)&thirdP ) ;
    baton.grabF( tinBaseP , TAG( TAGiDnULL ) ) ;
    _IO_

    }
        if( third ) return ;
    {
    IFbEcAREFUL

{
bDestructionInProgress( 0 )
cReadPending( 0 ) ,
sgnCatch( tinBaseP , TAG( TAGiDnULL ) ) ,
stCatch( tinBaseP , thirdP , TAG( TAGiDnULL ) , flSTACKc_FIFO , ifcSTACKtYPE_PTR_soulC ) ,
b_stCatch( tinBaseP , TAG( TAGiDnULL ) ) ,
b_idGramLath( tinBaseP , TAG( TAGiDnULL ) ) ,
idGramLast( 0 ) ,
bDone_tmCatch( 0 ) ,
bQuit_tmCatch( 0 ) ,
baton( tinBaseP , TAG( TAGiDnULL ) ) ,
idPort( idPortP ) ,
third( thirdP ) ,
/*1*/netC::netC( tinBaseS& tinBaseP , thirdC& thirdP , const countT idPortP )/*1*/ :

/**/
*/
  if 0 then this net object cannot read; it can only write
  can be 0
 idPortP
 thirdP
 tinBaseP
arguments
\<A HREF=\"5.1510003.1.0.html\"\>definition\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

