
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


;
}
/**/
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34005.homeS.superRandomIF!||
    static voidT superRandomIF( tinBaseS& tinBaseP , countT*& pcP , countT& ccP , const flagsT flagsP = flHOMEsUPERrANDOM_null ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34004.homeS.homeIF!||
    static homeS& homeIF( voidT ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34003.homeS.homeS!||
    homeS( tinBaseS& tinBaseP ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34002.homeS.dt_homeS!||
    ~homeS( voidT ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34001.homeS.NEWdELcLASSb!||
    NEWdELcLASSpROTOS

    handleC             hUtility8 ;
    handleC             hUtility7 ;
    handleC             hUtility6 ;
    handleC             hUtility5 ;
    handleC             hUtility4 ;
    handleC             hUtility3 ;
    handleC             hUtility2 ;
    handleC             hUtility1 ;
    handleC             hStash ;
    count04T            idIdeaFarmKeys ;
    osTextT             postHome[ 0x1a ] ;              // "d:\ideafarm.home.12345678"
    countT              pcTallyIn[ CCtALLYiN ] ;        //  123456789abcdef0123456789a
    countT              idStepSoil ;                    //  0              1
    osTextT             postIdHomeGlobal[ COSTiDhOMEgLOBALmAX + 1 ] ;
    byteT               pb_pPoolReg[ CpOOLrEGISTRATIONSmAX * sizeof( poolRegistrationS ) ] ;
    countT              fliGrab ;
    tallyHoC            tallyHo ;
    osTextT             postDriverNameOld[ CSdRIVERnAMEmAX + 1 ] ;
    osTextT             postDriverNameNew[ CSdRIVERnAMEmAX + 1 ] ;
    countT              cReferencesLake ;
    fireAllS            pFireAll[ CfIREaLLrANKS ] ;
    countT              idVersionIpdosBan ;
    countT              idVersionIpdosNag ;
    countT              idVersionIpdosProduction ;
    countT              idVersionIpdosTest ;
    countT              idVersionIpdosMe ;
    grabC               grabSuperRandom ;
    countT              cNextSuperRandom ;
    countT              offNextSuperRandom ;
    countT              pcSuperRandom[ CCsUPERrANDOM ] ;
    countT              cSecretServerRegistrationsSeen ;
    portC               idpTeat ;
    countT              idRank ;
    portTimeC           idptRelay ; //SET AND MAINTAINED BY b150104 (U::THIS COMMENT PROBABLY IDENTIFIES THE WRONG ADAM)
    countT              idPortWatchHttpDeadman2 ; // SET AND MAINTAINED BY ifcIDaDAM_WATCH
    countT              idPortWatchHttpDeadman1 ; // SET AND MAINTAINED BY ifcIDaDAM_WATCH
    countT              portCloak ; // SET AND MAINTAINED BY ifcIDaDAM_CLOAK
    countT              idPortListMoneyBuckets ; // SET AND MAINTAINED BY ifcIDaDAM_LISTsERVERmONEYbUCKETS
    countT              idPortListServerIdAccountDescription ; //SET AND MAINTAINED BY ifcIDaDAM_LISTsERVERiDaCCOUNTdESCRIPTION
    countT              idPortListServerEmailIdAccount ; //SET AND MAINTAINED BY ifcIDaDAM_LISTsERVEReMAILiDaCCOUNT
    countT              idPortSerialNumberDispenser ; //SET AND MAINTAINED BY ifcIDaDAM_DOMAINsERIALnUMBERdISPENSER
    countT              idPortGlass2 ; //SET AND MAINTAINED BY ifcIDaDAM_2GLASS2
    countT              iduuHome ;
    countT              pcUtility[ CCuTILITYhOMEs ] ;
    flagsT              flagsAdams ;
    flagsT              flagsUtility ;
    flagsT              flags ;
    sCountT             timeUniqueLath2 ;
    countT              timeUniqueLath1 ;
    grabC               grabTimeUnique ;
    sCountT             timeBoot2 ;
    countT              timeBoot1 ;
    count04T            osTicksAtCt ;
    countT              idCellLath ;
    countT              idSerialLath ;
    const countT        idMe ;
    const countT        idFormat ;
    const countT        finger ;
/**/
{
/*1*/struct _export homeS/*1*/

//AFTER ABOUT 01 TOCKS HAVE ELAPSED, THIS IS "ALMOST GUARANTEED" TO BE UNIVERSALLY UNIQUE
//UNIVERSALLY UNIQUE, ASSIGNED TO EACH LOCAL HOME; NORMALLY DOES NOT CHANGE BUT CODE MUST NOT ASSUME THIS; (IF 2 HOMES HAVE SAME ID THEN ROOT RELAY WILL ASSIGN A REPLACEMENT VALUE SO IN THAT EVENT A HOME WILL EXPERIENCE A CHANGE)
//"iduu": "id universally unique"
//iduuHome

/**/
*/
\<A HREF=\"5.15000066.1.0.html\"\>definition\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

