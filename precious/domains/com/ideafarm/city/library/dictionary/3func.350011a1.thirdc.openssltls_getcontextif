
//
// Copyright (c) 1992-2025 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}


    #endif

        if( !POOP ) handleP.osF( ifcIDtYPEhANDLE_openSslContext , (countT)pContext ) ;


        __( ec ) ;
        }
            if( ec & 8 ) etherC::etTextIF( tin0P ).traceF( tin0P , T("openSslTls_getContextIF / could not read private key [postPemPrivateKeyP]:    ")+T(postPemPrivateKeyP)   ) ;
            if( ec & 4 ) etherC::etTextIF( tin0P ).traceF( tin0P , T("openSslTls_getContextIF / could not read certificate [postPemCertificatesP]:  ")+T(postPemCertificatesP) ) ;
            if( ec & 2 ) etherC::etTextIF( tin0P ).traceF( tin0P , T("openSslTls_getContextIF / could not obtain context") ) ;
            if( ec & 1 ) etherC::etTextIF( tin0P ).traceF( tin0P , T("openSslTls_getContextIF / exception caught") ) ;
            //CS:CODEsYNC: 350011a1 30000003
        {
        else
        if( !ec ) /*etherC::etTextIF( tin0P ).traceF( tin0P , T("openSslTls_getContextIF / aok") )*/ ;

        SSL_CTX* pContext = c_openSslTls_getContextIF( &ec , postPemCertificatesP , postPemPrivateKeyP ) ;
        ZE( countT , ec ) ;

    #elif defined( __NT__ )
    #ifdef __OS2__

    if( !( F(((tin1S&)tin0P).flagsThreadMode4) & flTHREADmODE4_ARMoPENsSL ) ) { BLAMMO ; }

    _IO_

    }





        if( POOP ) return ;
    {
    IFbEcAREFUL
{
/**//*1*/voidT thirdC::openSslTls_getContextIF( tin0S& tin0P , handleC& handleP , const osTextT* const postPemCertificatesP , const osTextT* const postPemPrivateKeyP )/*1*/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2025 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

