
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    //thirdC::p WinRootIF()->baton.ungrabF( tin0P ) ;
    ((tin1S&)tin0P).pag1->_etherC_.cIfcRenderingHandlerInfo = infoP ;
    ((tin1S&)tin0P).pag1->_etherC_.pIfcRenderingHandlerF = pIfcRenderingHandlerFIP ;
    //thirdC::p WinRootIF()->baton.grabF( tin0P , TAG( TAGiDnULL ) ) ;
    _IO_

    }
        if( POOP ) return ;
    {
    IFbEcAREFUL
    SCOOP
{
/*1*/voidT etherC::ifcRenderingHandlerF( tin0S& tin0P , const ifcRenderingHandlerFT pIfcRenderingHandlerFIP , const countT infoP )/*1*/
/**/
*/
  is passed to the handler each time that the handler is called
  can be 0
 infoP
  can be 0
 pIfcRenderingHandlerFIP
arguments
at any time there is either 0 or 1 handler registered
 this is currently done only for selected strokeS caste values
registers a handler function that is called each time i am about to render strokes into a face's drawing bitmap
\<A HREF=\"5.10301ac.1.0.html\"\>definition\</A\>
\<A HREF=\"6.$ifcRenderingHandlerF.0.html\"\>instances\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

