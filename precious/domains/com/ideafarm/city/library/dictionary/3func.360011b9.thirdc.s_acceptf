
//
// Copyright (c) 1992-2025 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    }
        pP.cFifoPushed ++ ;
        //if( ((tin1S&)tin0P).pEther ) ((tin1S&)tin0P).pEther->traceF( tin0P , T("++++++++++++++++                  accepted [oshSocket]:    ")+TF2(to.oshSocket,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED|flFORMAT_FILLzE|flFORMAT_FOREIGN) ) ;
        to.oshSocket = oshMaybe ;
    {
    else
    }
        to.oshSocket = INVALID_SOCKET ;
        if( oshMaybe != INVALID_SOCKET ) closesocket( oshMaybe ) ;
    {
    if( POOP )

    __( cbInfo - sizeof info ) ;

    //etRock.traceF( tin0P , T("s_acceptF / called  accept [idAccept,POOP]:    ")+TF2(idAccept,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED)+T("    ")+TF2(POOP,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED) ) ;

    countT oshMaybe = ((tin1S&)tin0P).brcRaw ;
    BOSpOOP
    BOSS( WHATsia , BOSsOCKETcODE , accept( pP.handle.osF( ifcIDtYPEhANDLE_SOCKET ) , (sockaddr*)&info , &cbInfo ) )

    //etRock.traceF( tin0P , T("s_acceptF / calling accept [idAccept]:    ")+TF2(idAccept,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED) ) ;
    etherC& etRock = etherC::etRockIF( tin0P ) ;

    countT idAccept = ((tin1S&)tin0P).glass.idThread << 0x10 | 1 + incv02AM( idAcceptLath ) ;
    static countT idAcceptLath ;

    c_memsetIF( tin0P , (byteT* const)&info , cbInfo ) ;
    sCountT cbInfo = sizeof( sockaddr_in6 ) ;
    sockaddr_in6& info = *(sockaddr_in6*)to.pbSockAddrIn6 ;
    oshSocketAcceptedS& to = pP.pFifo[ pP.cFifoPushed % pP.cFifoCapacity ] ;                                                  //A:ASSUME: I AM THE ONLY THREAD PUSHING TO THE FIFO, I.E. THE ONLY THREAD CALLING accept()

    while( pP.cFifoPushed - pP.cFifoPulled == pP.cFifoCapacity ) OSsLEEPf( TUCK ) ;
{
/*1*/voidT thirdC::s_acceptF( tin0S& tin0P , s_acceptF_parametersS& pP )/*1*/

/**/
*/
  if not 0 when i have accepted a connection then i close the connection and return 0
  normally should be 0
  can be 0
 bRefuseP
arguments
\<A HREF=\"5.10200d7.1.0.html\"\>definition\</A\>
\<A HREF=\"6.$s_acceptF.0.html\"\>instances\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2025 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

