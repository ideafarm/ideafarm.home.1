
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


REST

thirdC::third_flagsModeProcess2I_IF() &= ~( F(flMODEpROCESS2_SUPPRESSiNoUTfRAMEc) ) ;
etThread.traceF( tin0P , T("i've been fired") ) ;

//etherC::loafIF( tin0P ) ;

}
    Sleep( 1000 ) ;
{
while( !ether )

//thirdC::ctrlCIF( tin0P ) ;

etThread.traceF( tin0P , T("ok") ) ;

}
    etThread.traceMemoryGrainRptF( tin0P ) ;

    etThread.traceF( tin0P , T("all are ready now") ) ;
    }
        ++ s ; ether.osSleepF( tin0P , TOCK >> 2 ) ;
        etThread.traceF( tin0P , T("[pending]:    ")+TF2(CwORKERS-cReady,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED) ) ;
    {
    while( cReady < CwORKERS )

    cAlive = 0 ;
    etThread.traceF( tin0P , T("all are alive now") ) ;
    }
        ++ s ; ether.osSleepF( tin0P , TOCK >> 2 ) ;
        etThread.traceF( tin0P , T("[pending]:    ")+TF2(CwORKERS-cAlive,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED) ) ;
    {
    while( cAlive < CwORKERS )
    sleepC s( tin0P , TAG( TAGiDnULL ) ) ;

    THREADmODE2rESTORE
    }
        etThread.osThreadF( tin0P , countTC() , tmWorkF , 0 , &cAlive , flTHREADlAUNCH_NOiNoUTfRAMEsUPPORT | flTHREADlAUNCH_NOtINiNpOOL , CBsTACKmIN , 0 , (countT)&cReady ) ;
    {
    while( cDo -- )
    THREADmODE2oN( flTHREADmODE2_SUPPRESStELLmONITOR )
    countT cDo = CwORKERS ;
    ZE( countT , cReady ) ;
    ZE( countT , cAlive ) ;
{
if( !ether )

thirdC::third_flagsModeProcess2I_IF() |= flMODEpROCESS2_SUPPRESSiNoUTfRAMEc ;

TODO

DONEnOeTHERS( tmWorkF )
THREADmODE4rESTORE
}                                                           // ether AND etRock ARE AVAILABLE AS SHARED etherC INSTANCES
    etRock.traceF( tin0P , T("i've been fired") ) ;          // THIS CALL TO traceF CAUSES LOTS OF poolC DROP ALLOCATIONS, WHICH CAN FAIL DUE TO EXHAUSTION OF THE ADDRESS SPACE
    etherC::loafIF( tin0P ) ;
    inc02AM( cReadyP ) ;

    countT& cReadyP = *(countT*)pTaskP->c1 ;
{
if( pTaskP && pTaskP->c1 )
THREADmODE4oN( flTHREADmODE4_NOsEXiNpOOL ) ;
TASKnOeTHERS( tmWorkF )

#define CwORKERS ( 0x1000 )
//REDUCED TO MAKE ADDRESS SPACE AVAILABLE FOR THE traceF CALLS DURING TERMINATION

//G BUT FAILS DURING QUIT: #define CwORKERS ( 0x1000 + 99 )
//G:#define CwORKERS ( 0x1000 + 99 )
//G:#define CwORKERS ( 0x1000 + 98 )
//G:#define CwORKERS 0x1000
//G:#define CwORKERS 0x800
//WITHOUT RESETTING cAlive (I.E DO NOT CT tin123S AND etThread ON THE KID THREADS)

//B:#define CwORKERS 0x600
//B:#define CwORKERS 0x800
//G:#define CwORKERS 0x3f2
//20240918@1819: WITH 2 TOCK THREAD STACKS

//#define CwORKERS 0x8
//G:#define CwORKERS 0x3f2
//B:#define CwORKERS 1050
//B:#define CwORKERS 1100
//G:#define CwORKERS 1010

/*1*/WAKEsHOWtEXT( "example.other.3func.36002065.etherc.osthreadf.launching.many.threads" )/*1*/
/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
