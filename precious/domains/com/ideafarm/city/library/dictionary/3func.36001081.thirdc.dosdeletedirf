
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    }
        delF( tin0P , postShorter ) ;
        }
            __1
            __( rc ) ;
        {
        if( bFail )

        while( !*this && ( bNoQuit || ( bNoQuitEarly && !thPrimeIF( tin0P ) ) || ( cTriesP && -- cTriesP ) ) ) ;
        }
            else break ;
            }
                ++ s ; dosSleepIF( tin0P , TUCK * 128 ) ;
                sleepC s( tin0P , TAG( TAGiDnULL ) ) ;
            {
            if( bFail )

            #endif

                }
                    else                                       rc = ((tin9S&)tin0P).brcLath ;
                    if( ((tin9S&)tin0P).brcLath == ERROR_FILE_NOT_FOUND ) bFail = 0 ;
                {
                if( bFail )
                bFail = ((tin9S&)tin0P).bosFail ;

                BOS( WHATsfw , BOSoK , RemoveDirectory( postShorter ) )
                BOSnOvALUE( WHATgbo , SetLastError( 0 ) )

            #elif defined( __NT__ )

                __1 //U:

            #ifdef __OS2__
        {
        do
        ZE( boolT , bFail ) ;
        ZE( countT , rc ) ;
        boolT bNoQuitEarly = !cTriesP ;
        boolT bNoQuit = cTriesP == - 1 ;

        postShorter[ costP - 1 ] = 0 ;
        c_memcpyIF( tin0P , postShorter , postP , costP - 1 ) ;
        newF( tin0P , LF , postShorter , costP ) ; ___( postShorter ) ;
        ZE( osTextT* , postShorter ) ;
    {
    _IO_

    }
        if( POOP ) return ;
        __( postP[ costP - 1 ] - '\\' ) ;
        if( POOP ) return ;
        __Z( postP ) ;
        if( POOP ) return ;
    {
    IFbEcAREFUL    
    SCOOP
    const countT costP = postP ? c_strlenIF( tin0P , postP ) : 0 ;
{
/**//*1*/voidT thirdC::dosDeleteDirF( tin0S& tin0P , const osTextT* const postP , countT cTriesP )/*1*/
*/
  if - 1 then will retry forever even if thPrimeIF( tin0P ) is impotent
  if not 0 then will try cTriesP times (even if thPrimeIF( tin0P ) is impotent)
  if 0 then will retry forever unless thPrimeIF( tin0P ) is impotent
  can be 0
 cTriesP
  example: "\\fooey\\"
 postP
arguments
if the directory does not exist, i will return immediately and silently
U: not coded for os/2
it is illegal to refer to this symbol in the definition of an adam
\<A HREF=\"5.1020092.1.0.html\"\>definition\</A\>
\<A HREF=\"6.$dosDeleteDirF.0.html\"\>instances\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

