
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    __Z( bDone ) ;

    }
        }
            }
                tinP.pEtScratch->traceF( tinP , T("!exception: could not zip using infozip zip.exe ; i give up") ) ;
                POOPRqUIET
            {
            else
            }
                bDone = 1 ;
                //tinP.pEtScratch->traceF( tinP , T("zipped aok using infozip zip.exe") ) ;
            {
            if( !POOP )
            __( idDeathType ) ;
            __( value ) ;
            ((thirdC&)*tinP.pEtScratch).dosExecPgmF( tinP , countTC() , countTC() , value , idDeathType , "\\ideafarm.home.1\\precious\\domains\\com\\ideafarm\\city\\workshop\\infozip\\zip.exe\\zip.exe"  , postArgsInfoZipP ) ;
            SCOOPS
        {
        IFsCRATCH

        idDeathType = value = 0 ;
    {
    if( !bDone )

    }
        }
            }
                tinP.pEtScratch->traceF( tinP , T("could not zip using pkzipc.exe " /*" ; will try the bundled infozip zip.exe"*/ ) ) ;

                delF( tinP , postDir ) ;
                tinP.pEtScratch->traceF( tinP , T("called pkzipc.exe [postArgs]:    ")+T(postArgsUse) ) ;
                tinP.pEtScratch->traceF( tinP , T("[postDir]:    ")+T(postDir) ) ;
                thirdC::dosGetCurrentDirF( tinP , postDir ) ; ___( postDir ) ;
                ZE( osTextT* , postDir ) ;
            {
            if( !bDone )

            else bDone = 1 ;
            else if( value || idDeathType ) tinP.pEtScratch->traceF( tinP , T("pczipc.exe failed [value,idDeathType]:    ")+TF2(value,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED)+T("    ")+TF2(idDeathType,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED) ) ;
            }
                tinP.pEtScratch->traceF( tinP , T("could not hire pczipc.exe [POOP]:    ")+TF2(idPoop,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED) ) ;
                POOPRqUIET
                countT idPoop = POOP ;
            {
            if( POOP )

            ((thirdC&)*tinP.pEtScratch).dosExecPgmF( tinP , countTC() , countTC() , value , idDeathType , "pkzipc.exe" , postArgsUse ) ;
            SCOOPS
        {
        IFsCRATCH

        const osTextT* postArgsUse = postArgsPkZipP ? postArgsPkZipP : ostoArgsPkZip ;

        }
            OStEXTA(  ostoArgsPkZip , postArgsInfoZipP ) ;
            OStEXTAK( ostoArgsPkZip , "-max -add " ) ;
        {
        if( !postArgsPkZipP )
        OStEXT( ostoArgsPkZip , TUCK << 3 ) ;
    {
    ZE( countT , idDeathType ) ;
    ZE( countT , value ) ;
    ZE( boolT , bDone ) ;

    }
        if( POOP ) return ;
        __Z( postArgsInfoZipP ) ;
        if( POOP ) return ;
    {
    IFbEcAREFUL
{
/*1*/voidT thirdC::diskZipOldF( const osTextT* const postArgsInfoZipP , tinNormalS& tinP , const osTextT* const postArgsPkZipP )/*1*/

/**/
*/
  if not 0 then will be used as the full argument string when i try pkzipc.exe
  can be 0
 postArgsPkZipP
  if postArgsPkZipP is 0 then default switches will be prepended when i try pkzipc.exe
  must not be 0
 postArgsInfoZipP
 tinP
parameters
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

