
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//

                            
REST

THREADmODE3rESTORE
}
    //listC::deleteIF( tinBaseP , count2S( LISTnAMEsYS_ROOTsYSTEM3 , 0 ) ) ;
    //listC::deleteIF( tinBaseP , count2S( LISTnAMEsYS_ROOTsYSTEM2 , 0 ) ) ;
    //listC::deleteIF( tinBaseP , count2S( LISTnAMEsYS_ROOTaPPLICATION , 0 ) ) ;
    
    // { recordC list( tinBaseP , count4S( LISTnAMEsYS_ROOTsYSTEM3     ) ) ; list.chatterF( tinBaseP ) ; }

    // }
    //     //{ recordC list( tinBaseP , count4S( LISTnAMEsYS_ROOTaPPLICATION ) ) ; list.chatterF( tinBaseP ) ; }
    // 
    //     selF36G2.walkF( tinBaseP , selectWalkCBF ) ;
    //     CONoUTrAW( "******************************** selF36G2 **************************\r\n" ) ;
    //     selectC selF36G2 = selF36 & selG2 ;
    // 
    //     //selG2.walkF( tinBaseP , selectWalkCBF ) ;
    //     //CONoUTrAW( "******************************** selG2 **************************\r\n" ) ;
    //     selectC selG2( tinBaseP , "goofynumbers" , 2 ) ;
    // 
    //     //selF36.walkF( tinBaseP , selectWalkCBF ) ;
    //     //CONoUTrAW( "******************************** selF36 **************************\r\n" ) ;
    // 
    //     
    //     selF36 = selF3 | selF6 ;
    // 
    //     //G:selF36 = selF6 ;
    //     selectC selF36 ;
    // 
    //     //G: selectC selF36 = selF6 ;
    // 
    //     //G:selectC selF36 = selF3 | selF6 ;
    // 
    //     selectC selF6( tinBaseP , "favoritenumbers" , 6 ) ;
    //     selectC selF3( tinBaseP , "favoritenumbers" , 3 ) ;
    // {

    }
        }
            DELlIST( datumS , pDatum ) ;
            }
                }
                    pCursor = pCursor->pNext ;
            
                    }
                        case ifcIDtYPEmIXINdATUM_countTstrz  : { CONoUTrAW( T("pczValue: [")+T(pCursor->pczValue)+T("]\r\n") ) ; break ; }
                        case ifcIDtYPEmIXINdATUM_blob : { CONoUTrAW( "postValue: \"" ) ; CONoUTrAW( pCursor->postValue ) ; CONoUTrAW( "\"\r\n" ) ; break ; }
                        case ifcIDtYPEmIXINdATUM_countT      : { CONoUTrAW3( "cValue: " , pCursor->cValue , "\r\n" )                                    ; break ; }
                    {
                    switch( pCursor->idType )
                {
                while( pCursor )
                datumS* pCursor = pDatum ;
            {
            
            listC::walkEnumerateIF( tinBaseP , pDatum , "goofynumbers" ) ; ___( pDatum ) ;
            ZE( datumS* , pDatum ) ;
        {
        CONoUTrAW( "goofynumbers:\r\n" ) ;
            
        }
            DELlIST( datumS , pDatum ) ;
            }
                }
                    pCursor = pCursor->pNext ;
            
                    }
                        case ifcIDtYPEmIXINdATUM_countTstrz  : { CONoUTrAW( T("pczValue: [")+T(pCursor->pczValue)+T("]\r\n") ) ; break ; }
                        case ifcIDtYPEmIXINdATUM_blob : { CONoUTrAW( "postValue: \"" ) ; CONoUTrAW( pCursor->postValue ) ; CONoUTrAW( "\"\r\n" ) ; break ; }
                        case ifcIDtYPEmIXINdATUM_countT      : { CONoUTrAW3( "cValue: " , pCursor->cValue , "\r\n" )                                    ; break ; }
                    {
                    switch( pCursor->idType )
                {
                while( pCursor )
                datumS* pCursor = pDatum ;
            {
            
            listC::walkEnumerateIF( tinBaseP , pDatum , "favoritenumbers" ) ; ___( pDatum ) ;
            ZE( datumS* , pDatum ) ;
        {
        CONoUTrAW( "favoritenumbers:\r\n" ) ;
        //puseC puseMaster( tinBaseP , ifcIDpOOL_ADAMtEMP ) ;
    {

    }
        listC::chatterIF( tinBaseP , count2S( LISTnAMEsYS_ROOTaPPLICATION ) ) ;
        //listC::chatterIF( tinBaseP , count2S( LISTnAMEsYS_ROOTsYSTEM3 ) ) ;
    {
        
    // }
    //     }
    //             person << _fe_deleteC() +  _fe_ok_equal_C( vv ) ;
    //         for( countT vv = 2 ; vv <= 2 ; vv ++ )
    //     {
    //     while( cToDo -- )
    //     countT cToDo = 2 ;
    // 
    //     person << "favoritenumbers" ;
    //     recordC person( tinBaseP , count4S( LISTnAMEsYS_ROOTaPPLICATION , (countT)"persons" , idSerialLath ) ) ;
    // {
    // for( ii = 1 ; ii <= 1 ; ii ++ )
    // 
    // CONoUTrAW( "================================================================================================\r\n" ) ;
    
    // { recordC list( tinBaseP , count4S( LISTnAMEsYS_ROOTaPPLICATION ) ) ; list.chatterF( tinBaseP ) ; }
    // { recordC list( tinBaseP , count4S( LISTnAMEsYS_ROOTsYSTEM3     ) ) ; list.chatterF( tinBaseP ) ; }
        
    }
        }
            // SAYfIELDoUT( "favoriteseries" ) ;
            // person >> pOut ;
            // person << _fe_modeAllC() +  _fe_queryC() ;
            // person << "favoriteseries" ;
            //     
            // SAYfIELDoUT( "favoritewords" ) ;
            // person >> pOut ;
            // person << _fe_modeAllC() +  _fe_queryC() ;
            // person << "favoritewords" ;
            //     
            // SAYfIELDoUT( "favoritenumbers" ) ;
            // person >> pOut ;
            // person << _fe_modeAllC() +  _fe_queryC() ;
            // person << "favoritenumbers" ;
            // 
            // ZE( fieldEditParamOutC* , pOut ) ;
            //     
            // }
            //     }
            //         PUSE( tinBaseP , *(byteT**)&pczv ) ;
            //         puseC puseat( tinBaseP , ifcIDpOOL_ADAMtEMP ) ;
            //     {
            // 
            //     person << _fe_pushC( pczv ) + _fe_modePushSinkC() ;
            //         
            //     pczv[ offo ] = 0 ;
            //     for( countT offo = 0 ; offo < vv ; offo ++ ) pczv[ offo ] = vv ;
            //         
            //     }
            //         pczv = (countT*)PUSE.newF( tinBaseP , LF , ( 1 + vv ) * sizeof( countT ) ) ; ___( pczv ) ;
            //         puseC puseat( tinBaseP , ifcIDpOOL_ADAMtEMP ) ;
            //     {
            //     ZE( countT* , pczv ) ;
            // {
            // for( vv = 1 ; vv <= 0x4 ; vv ++ )
            // // person << "favoriteseries" ;
            //         
            //     person << _fe_pushC( postv[ offv ] ) + _fe_modePushSinkC() ;
            // for( countT offv = 0 ; offv < sizeof postv / sizeof postv[ 0 ] ; offv ++ )
            // //person << "favoritewords" ;
            //         
            // } ;
            //     "dddd" ,
            //     "ccc" ,
            //     "bb" ,
            //     "a" ,
            // {
            // osTextT* postv[] =

            person << _fe_pushC( 1 + (idSerialLath & 0xff ) / 4 ) + _fe_modePushSinkC() ;

            person << "goofynumbers" ;

            person << _fe_pushC( idSerialLath & 0xff ) + _fe_modePushSinkC() ;

            //     person << _fe_pushC( vv ) + _fe_modePushSinkC() ;
            // for( countT vv = 1 + !( idSerialLath % 2 ) ; vv <= 8 ; vv += 2 )

            person << "favoritenumbers" ;
        {
        while( cToDo -- )
        countT cToDo = 1 ;

        recordC person( tinBaseP , count4S( LISTnAMEsYS_ROOTaPPLICATION , (countT)"persons" , ++ idSerialLath ) ) ;
    {
    for( countT ii = 1 ; ii <= 8 ; ii ++ )
    
    //puseC puseMaster( tinBaseP , ifcIDpOOL_HOMEtEMP ) ;
    //G: puseC puseMaster( tinBaseP , ifcIDpOOL_ADAMtEMP ) ;
{
THREADmODE3oN( flTHREADmODE3_UNLOCKpOOLiDENTITY )

countT idSerialLath = BM_HIGH + TUCK ;

grabitC grabitx( tinBaseP , TAG( TAGiDnULL ) ) ;

TODO

}
    return flSELECTwALKcALLbACKrc_null ;
    TOUCH( hRecordP )
    TOUCH( etThread )
    TOUCH( tinBaseP )

    CONoUTrAW( "================== **** CHATTERING SELECTED RECORD (END) ==============================\r\n" ) ;
    POPtINaRGS
    flagsT flagsRC = listC::walkIF( tinBaseP , hRecordP ) ;
    ((tin9S&)tinBaseP).ta.pushed.u.listWalk.walk.flagsWalkP = flLISTwALK_null ;
    ((tin9S&)tinBaseP).ta.pushed.u.listWalk.walk.pListWalkCBFP = listWalkChatterCBF ;
    PUSHtINaRGS
    CONoUTrAW( "================== **** CHATTERING SELECTED RECORD (BEGIN) ==============================\r\n" ) ;

    if( tinBaseP.idTypeTin - ifcIDtYPEtIN_FULL ) { BLAMMOiD( tinBaseP.idTypeTin - ifcIDtYPEtIN_FULL ) ; }
{
flagsT selectWalkCBF( tin0S& tinBaseP , etherC& etThread , handleC& hRecordP )

/*1*/WAKEsHOWtEXT( "example.simplest.snip.0030193.recordC" )/*1*/
/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

