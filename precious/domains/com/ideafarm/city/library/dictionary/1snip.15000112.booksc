
//
// Copyright (c) 1992-2025 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


;
}
    friend voidT baseGrabC::registerBegunF( tin0S& tin0P , const countT idLineP , const countT idiFileP , const flagsT flagsP ) ;
    friend class napkinC ; //SO bksTelemetrySys.grabBookNow CAN BE FORMATTED

    inline flagsT&        flagsCtRefF( voidT ) { return *(flagsT*)&flagsCt ; }         //INTENDED TO ALLOW CALLER TO MODIFY MY FLAGS TO, E.G., MODIFY BEHAVIOR DURING DT
    inline flagsT         flagsCtF(    voidT ) { return            flagsCt ; }

    inline voidT          unlockF( tin0S& tin0P ) { grabBookNow.ungrabF( tin0P ) ; }
    inline voidT          lockF(   tin0S& tin0P , const countT idLineP , const countT idiFileP , const byteT* const pbBitsP ) { grabBookNow.grabF( tin0P , idLineP , idiFileP , pbBitsP ) ; }

    inline countT         cKeepInactiveF( voidT ) const { return cKeepInactive ; }
    inline const osTextT* postPathF(      voidT ) const { return postPath      ; }
    inline const osTextT* postShortF(     voidT ) const { return postShort     ; }
    inline bookC&         bookNowF(       voidT ) const { return BOOKnOW       ; }
    inline const countT*  pcpIdBookF(     voidT ) const { return PCPiDbOOKnOW  ; }

    inline       countT     cbUsedBookF( voidT ) const { return BOOKnOW.cbUsedF() ; }
    inline       countT     cbBodyBookF( voidT ) const { return BOOKnOW.cbBodyF() ; }
    inline       countT&    cRefBookF(   voidT )       { return BOOKnOW.cRefF()   ; }
    inline const byteT*     pbBodyBookF( voidT ) const { return BOOKnOW.pbBodyF() ; }
    inline const bookHeadS& headBookF(   voidT ) const { return BOOKnOW.headF()   ; }

    inline flagsT&        fileFlagsRefF(  voidT )       { return BOOKnOW.fileFlagsRefF() ; }
    inline operator const poopC&(  voidT )       { return poop ; }

    voidT flushF( tin0S& tin0P ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.360fb011.booksc.setf!||
    voidT setF( tin0S& tin0P , const byteT bFillP = 0 ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.360fb00d.booksC.cbEachBookF!||
    voidT cbEachBookF( tin0S& tin0P , countT*& pcpIdBookSizePairsP ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.360fb00c.booksC.selectBookF!||
    voidT selectBookF( tin0S& tin0P , const flagsT flagsP = flBOOKScsELECT_null , const countT* const pcpIdBookWantP = 0 , const boolT* pbQuitP = 0 ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.360fb010.booksC.readF!||
    voidT readF( tin0S& tin0P , pageC& pageP , handle0011C& hJotP , const flagsT flagsP = flBOOKScrEAD_null , const boolT* pbQuitP = 0 , handleC* const phCursorP = 0 , const countT idCursorP = 1 ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.360fb00f.booksC.readF!||
    voidT readF( tin0S& tin0P , pageC& pageP , handle0111C& hJotP , const flagsT flagsP = flBOOKScrEAD_null , const boolT* pbQuitP = 0 , handleC* const phCursorP = 0 , const countT idCursorP = 1 ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.360fb00e.booksC.readF!||
    voidT readF( tin0S& tin0P , pageC& pageP , handleC& handleP , const flagsT flagsP = flBOOKScrEAD_null , const boolT* pbQuitP = 0 , handleC* const phCursorP = 0 , const countT idCursorP = 1 ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.360fb00a.booksC.readF!||
    boolT readF( tin0S& tin0P , const byteT*& pbP , countT& cbP , handle0011C& hJotP , const flagsT flagsP = flBOOKScrEAD_null , const boolT* pbQuitP = 0 , handleC* const phCursorP = 0 , const countT idCursorP = 1 ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.360fb009.booksC.writeF!||
    countT writeF( tin0S& tin0P , handle0011C& hJotP , const byteT* const pb1P = 0 , const countT cb1P = 0 , const byteT* const pb2P = 0 , const countT cb2P = 0 , const flagsT flagsP = flBOOKScwRITE_null ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.360fb008.booksC.readF!||
    boolT readF( tin0S& tin0P , const byteT*& pbP , countT& cbP , handle0111C& hJotP , const flagsT flagsP = flBOOKScrEAD_null , const boolT* pbQuitP = 0 , handleC* const phCursorP = 0 , const countT idCursorP = 1 ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.360fb007.booksC.writeF!||
    countT writeF( tin0S& tin0P , handle0111C& hJotP , const byteT* const pb1P = 0 , const countT cb1P = 0 , const byteT* const pb2P = 0 , const countT cb2P = 0 , const flagsT flagsP = flBOOKScwRITE_null ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34006.booksC.readF!||
    boolT readF( tin0S& tin0P , const byteT*& pbP , countT& cbP , handleC& handleP , const flagsT flagsP = flBOOKScrEAD_null , const boolT* pbQuitP = 0 , handleC* const phCursorP = 0 , const countT idCursorP = 1 ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34005.booksC.writeF!||
    countT writeF( tin0S& tin0P , const byteT* pb1P = 0 , countT cb1P = 0 , const byteT* pb2P = 0 , countT cb2P = 0 , const flagsT flagsP = flBOOKScwRITE_null , handleC* const phWroteP = 0 /*, countT** ppcpIdAptP = 0*/ ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34003.booksC.booksC!||
    booksC( tin0S& tin0P , const countT idLineCtP , const countT idiFileCtP , const byteT* const pbBitsCtP , const osTextT* const postShortOrLongP , const countT idStateSpaceP = ifcIDsTATEsPACE_MULTIPLEaDAMS , const flagsT flagsP = flBOOKSc_null , const countT cbP = 0 , const countT cKeepInactiveP = 0 , const byteT bFillP = 0 , byteT* const pbBooksNoPuseBackP = 0 , const countT cbBooksNoPuseBackP = 0 , const countT idMemorySpaceP = 0 , const boolT* pbQuitP = 0 ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34002.booksC.dt_booksC!||
    ~booksC( voidT ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34001.bookHeadS.NEWdELcLASSb!||
    NEWdELcLASSpROTOS

    public :

    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.360fb014.booksc.touchAllBooksF!||
    voidT touchAllBooksF( tin0S& tin0P , const boolT* pbQuitP ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.360fb013.booksc.setpcpidbookwantf!||
    voidT setPcpIdBookWantF( tin0S& tin0P , const flagsT flagsP , const countT* const pcpIdBookWantP , const boolT* pbQuitP ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.360fb00b.booksC.setPostBookNameF!||
    voidT setBookNameIdF( tin0S& tin0P , const flagsT flagsP = flBOOKScsELECT_null , const countT* const pcpIdBookWantP = 0 , const boolT* pbQuitP = 0 ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.360fb012.booksc.idbookminmaxf!||
    voidT idBookMinMaxF( tin0S& tin0P , countT*& pcpIdBookMinP , countT*& pcpIdBookMaxP , const flagsT flagsP = flBOOKScsELECT_null , const boolT* pbQuitP = 0 ) ;

    byteT           pbNapReadCursor[  sizeof( napkinC ) ] ;
    byteT           pbFileReadCursor[ sizeof( fileC   ) ] ;
    const byteT     bFill ;
    strokeS*        psttFindLike ;
    osTextT         postFindLike[ TUCK << 1 ] ;
    countT**        ppcpIdBook ;
    const countT    cKeepInactive ;
    grabC           grabBookNow ;
    const countT    idMemorySpace ;
    const countT    idStateSpace ;
    const countT    cbBodyNew ;
    osTextT*        postBookNameScratch ;
    osTextT         postPath[  TUCK << 0 ] ;
    osTextT         postShort[ TUCK >> 1 ] ;
    const flagsT    flagsCtBook ;
    const flagsT    flagsCt ;
    countT          offBookBackNow ;
    byteT*          pbFlagsiBookBackCt ;
    byteT*          pbBookBack ;
    countT* const   pcpIdBookScratchMax ;
    countT* const   pcpIdBookScratchMin ;
    countT* const   pcpIdBookScratch1 ;
    const countT    ccMaxIdBook ;
    poopC           poop ;
{
/*1*/class _export booksC/*1*/

/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2025 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

