
//
// Copyright (c) 1992-2025 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    return cDone ;

    //traceF( tin0P , T("strReplaceF / -") ) ; //U::TO FIND A BUG

    }
        }
            delF( tin0P , psttp ) ;
            soulP << psttp ;
            sAfter >> psttp ; ___( psttp ) ;
            ZE( strokeS* , psttp ) ;
            //traceF( tin0P , T("strReplaceF / - pulling [sAfter]:  ")+TF2((countT)sAfter,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED) ) ; //U::TO FIND A BUG
        {
        while( sAfter )
    {
    else
    }
        //traceF( tin0P , T("strReplaceF / - assigned") ) ; //U::TO FIND A BUG
        soulP = sAfter ;
        //traceF( tin0P , T("strReplaceF / - assigning") ) ; //U::TO FIND A BUG
    {
    if( !soulP.bUsesJotF() && !sAfter.bUsesJotF() )

    //traceF( tin0P , T("strReplaceF / 0 [sAfter]:  ")+TF2((countT)sAfter,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED) ) ; //U::TO FIND A BUG

    }
        delF( tin0P , psttp ) ;
        sAfter << psttp ;
        cDone += strReplaceF( tin0P , psttp , 0 , psttOldSmallP , psttNewSmallP , 0 , flagsP ) ; ___( psttp ) ;
        soulP >> psttp ; ___( psttp ) ;
        ZE( strokeS* , psttp ) ;
    {
    while( soulP )
    ZE( countT , cDone ) ;

    //traceF( tin0P , T("strReplaceF / 1 [soulP]:  ")+TF2((countT)soulP,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED) ) ; //U::TO FIND A BUG

    if( postJot ) ((tin1S&)tin0P).pEther->delF( tin0P , postJot ) ;
    soulC sAfter( tin0P , TAG( TAGiDnULL ) , flSOUL_null , postJot ) ;

    //traceF( tin0P , T("strReplaceF / 2") ) ; //U::TO FIND A BUG

    }
        ((tin1S&)tin0P).pEther->delF( tin0P , psttJot ) ;
        ((tin1S&)tin0P).pEther->strMakeF( tin0P , LF , postJot , psttJot ) ; ___( postJot ) ;
        ((tin1S&)tin0P).pEther->strUniqueF( tin0P , psttJot ) ; ___( psttJot ) ;
        ZE( strokeS* , psttJot ) ;
    {
    if( F(flagsP) & flSTRrEPLACE_USEjOT )
    ZE( osTextT* , postJot ) ;

    //traceF( tin0P , T("strReplaceF / +") ) ; //U::TO FIND A BUG

    }
        if( POOP ) return 0 ;
        FV(flSTRrEPLACE,flagsP) ;
        __Z( psttNewSmallP ) ;
        __Z( psttOldSmallP ) ;
        __Z( soulP ) ;
        if( POOP ) return 0 ;
    {
    IFbEcAREFUL
{
/*1*/countT etherC::strReplaceF( tin0S& tin0P , soulC& soulP , const strokeS* const psttOldSmallP , const strokeS* const psttNewSmallP , const flagsT flagsP )/*1*/

/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2025 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

