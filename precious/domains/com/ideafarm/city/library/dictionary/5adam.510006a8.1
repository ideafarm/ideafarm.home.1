
//
// Copyright (c) 1992-2025 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


REST

etherC::loafIF( tin0P ) ;
etThread.traceF( tin0P , T("loafing") ) ;

etThread.delF( tin0P , pstti ) ;

}
    etThread.delF( tin0P , psttWant ) ;
    etThread.diskMoveFileOrDirF( tin0P , tPath+T(psttWant) , tPath+T(psttc1) ) ;    

    etThread.traceF( tin0P , psttWant ) ;

    etThread.strSubstringF( tin0P , psttWant , idf , idl , psttc1 ) ; ___( psttWant ) ;
    countT idl = idEnd ? idEnd - 1 : 0 ;
    countT idf = 1 ;
    ZE( strokeS* , psttWant ) ;

    countT idEnd = etThread.strIdF( tin0P , countTC( 1 ) , sttDash , psttc1 , 3 ) ;

    // !ideafarm.6.20080618@1808.001.000b358b.1f363bec.ab10f1c3.gmail.!.2008_06_20080618-180839-ideafarmcity@gmail_com-my_plan_for_you-1.eml
{
FORsTRINGSiN1( pstt1l )
TN( tPath , "///d/ideafarm.home.101/IdeaFarm (tm)/SYSTEM/arc.eml/" ) ;
etThread.strWordsF( tin0P , pstt1l , pstti , sttq , T("\r\n") ) ; ___( pstt1l ) ;
strokeS sttDash( '-' ) ;
strokeS sttq( 0 , sc_IGNOREqUOTES ) ;
ZE( strokeS* , pstt1l ) ;

etThread.delF( tin0P , posti ) ;
etThread.strMakeFromOsTextF( tin0P , pstti , posti ) ; ___( pstti ) ;
ZE( strokeS* , pstti ) ;

etThread.boxGetShadowF( tin0P , posti , costi , T("///d/tmp/arc.eml.ttt") ) ; ___( posti ) ;
ZE( countT   , costi ) ;
ZE( osTextT* , posti ) ;

TODO

/*1*/WAKEsHOWtEXT( "tool.rename.eml.discard.subject.in.name" )/*1*/
/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2025 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

