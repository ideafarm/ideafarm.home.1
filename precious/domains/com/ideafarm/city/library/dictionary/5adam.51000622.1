
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


REST

sgnDone_tmWorkF.waitF( tinBaseP ) ;
etThread.osThreadF( TaRG3sGNdONEcBsTACK( tmWorkF , sgnDone_tmWorkF , TICK ) ) ;     //U::O: REPLACE "TICK" WITH MINIMUM cbStackP VALUE THAT WORKS RELIABLY
signC sgnDone_tmWorkF( tinBaseP , TAG( TAGiDnULL ) ) ;

TODO

DONE( tmWorkF )
}
    }
        etherC::loafIF( tinBaseP ) ;
        ether.strokeF( tinBaseP , T("Errors occured, so I am loafing.") ) ;
    {
    if( cErrors )

    }
        }
            }
                }
                    etThread.diskZipOldF( tinBaseP , tZip , tTo , flZIP_DELETE ) ;

                    if( POOP ) POOPR ;
                    ((tinFullS&)tinBaseP).pEtScratch->diskFileOrDirDeleteF( tinBaseP , tZip , flFILEoRdIRdELETE_null , 1 ) ;

                    TN( tZip , "" ) ; tZip = T("20990009@0001.")+tTime+T(".ideafarm.!confidential.")+T(bPrecious?"precious":"elves")+T(".zip") ;

                    textC tTime( ifcIDtEXTgEN_TIMEnOWfOREIGN , tinBaseP , TAG( TAGiDnULL ) ) ;

                    hoverC hoverRelease( tinBaseP , etThread , tRelease ) ;
                {

                }
                    etThread.diskWalkCopyF( tinBaseP , cDirs , cFiles , ether , tBigTo , tFrom , bPrecious ? preciousCBF : toolCBF ) ;
                    ZE( countT , cFiles ) ;
                    ZE( countT , cDirs ) ;

                    TN( tElves , "" ) ; tElves = tPrefix+T("ideafarm.home.1/precious/domains/com/ideafarm/city/workshop/elves/" ) ;
                {

                if( POOP ) POOPR ;
                ((tinFullS&)tinBaseP).pEtScratch->traceF( tinBaseP , T("zapped  ")+tBigTo ) ;
                ((tinFullS&)tinBaseP).pEtScratch->diskFileOrDirDeleteF( tinBaseP , tBigTo  , flFILEoRdIRdELETE_RECURSE , 1 ) ;
                ((tinFullS&)tinBaseP).pEtScratch->traceF( tinBaseP , T("zapping ")+tBigTo ) ;
                SCOOPS
            {
            IFbEcAREFUL

            TN( tBigTo , "" ) ; tBigTo = tRelease+tTo+sSlash ;
            strokeS sSlash( '/' ) ;
            TN( tTo      , "ideafarm.home.1" ) ;

            TN( tFrom    , "" ) ; tFrom    = tPrefix+T("ideafarm.home.1/" ) ;
            TN( tRelease , "" ) ; tRelease = tPrefix+T("tmp/ps/") ; // SHORT AS POSSIBLE.  THIS INCREMENT TO THE LENGTH OF THE FILE NAME CAN CAUSE A FILE COPY TO SILENTLY FAIL

            }
                etThread.delF( tinBaseP , psttHover ) ;
                etThread.delF( tinBaseP , psttPrefix ) ;
                tPrefix = T(psttPrefix) ;
                etThread.strSubstringF( tinBaseP , psttPrefix , countTC( 1 ) , countTC( 5 ) , psttHover ) ; ___( psttPrefix ) ;
                ZE( strokeS* , psttPrefix ) ;

                etThread.diskGetHoverF( tinBaseP , psttHover ) ; ___( psttHover ) ;
                ZE( strokeS* , psttHover ) ;
            {
            TN( tPrefix , "" ) ;

            const boolT bPrecious = !etThread.strCompareF( tinBaseP , psttc1 , tCmdPrecious ) ;
        {
        )
            !etThread.strCompareF( tinBaseP , psttc1 , tCmdTool )
            ||
            !etThread.strCompareF( tinBaseP , psttc1 , tCmdPrecious )
        (
        else if
        else if( !etThread.strCompareF( tinBaseP , psttc1 , tCmdMake ) ) bArmMake = 1 ;
        }
            }
                DEL( ps ) ;

                etThread.delF( tinBaseP , psttNote ) ;
                etThread.delF( tinBaseP , psttLine ) ;

                etThread.strokeF( tinBaseP , TF2(idLine,flFORMAT_UNSIGNED|flFORMAT_NObIGITvALUES)+T("(")+TF2(idCol,flFORMAT_UNSIGNED|flFORMAT_NObIGITvALUES)+T("): ")+T(psttLine)+tcri2+T(psttNote)+tcr ) ;
                *ps >> psttNote ; ___( psttNote ) ;
                ZE( strokeS* , psttNote ) ;

                *ps >> psttLine ; ___( psttLine ) ;
                ZE( strokeS* , psttLine ) ;

                *ps >> idCol ;
                ZE( countT , idCol ) ;    

                *ps >> idLine ;
                ZE( countT , idLine ) ;    

                stErrors >> ps ; ___( ps ) ;
                ZE( soulC* , ps ) ;

                cErrors ++ ;
            {
            while( stErrors )

            etThread.osMakeF( tinBaseP , stErrors , idAdam , flMAKE_DEBUG | flMAKE_ENABLEtHIRDpARTIES ) ; //U::ELIMINATE flMAKE_ENABLEtHIRDpARTIES
            stackC stErrors( tinBaseP , etThread , TAG( TAGiDnULL ) , flSTACKc_null , ifcSTACKtYPE_PTR_soulC ) ;

            CONoUTrAW3( "[idAdam]: " , idAdam , "\r\n" ) ;

            countT idAdam = etThread.strDigitsToSCountF( tinBaseP , psttc1 ) | 0x51000000 ;
            bArmMake = 0 ;
        {
        if( bArmMake )

        if( !psttc1->idAdam ) break ;
        if( cSkip && cSkip -- ) continue ;

        //CONoUTrAW( T("parameter: \"")+T(psttc1)+T("\"\r\n") ) ;
    {
    FORsTRINGSiN1( etThread.ether_pstt1_processParametersI_F( tinBaseP ) )
    strokeS sttExclaim('!') ;
    countT cSkip = 1 ;
    ZE( boolT , bArmMake ) ;
    TN( tCmdTool     , "!tool" ) ;
    TN( tCmdPrecious , "!precious" ) ;
    TN( tCmdMake , "!make" ) ;
    TN( tcri2 , "\r\n  " ) ;
    TN( tcr , "\r\n" ) ;
    ZE( countT , cErrors ) ;
{
if( pTaskP )
TASK( tmWorkF )

}
    return bDoIt ;

    if( ++ *post2 > 'z' ) *post2 = 'a' ;
    CONoUTrAW( post2 ) ;
    static osTextT post2[] = "a" ;

    //if( bDoIt ) { LOGrAW( T("preciousCBF [postName]: \"")+T(postName)+T("\"\r\n") ) ; }

    ;

        //!thirdC::c_strstrIF( tinBaseP , postNameP , "\\workshop\\release" )
        //&&
        //REDUNDANT SINCE release IS NOT IN precious

        !thirdC::c_strcmpIF( tinBaseP , postName , ":\\ideafarm.home.1\\readme.pdf" )
        ||
        postName == thirdC::c_strstrIF( tinBaseP , postName , ":\\ideafarm.home.1\\precious" )

    boolT  bDoIt =

    const osTextT* postName = postNameP + 1 ;
{
boolT preciousCBF( tinBaseS& tinBaseP , countT& cDirsP , countT& cFilesP , const boolT& bQuitP , const osTextT* const postNameP , countT* const pcArgP )

}
    return bDoIt ;

    //CONoUTrAW( "\r\n" ) ;
    //CONoUTrAW( postNameP ) ;
    //CONoUTrAW( bDoIt ? "ACCEPTED " : "rejected " ) ;

    }
        }
            }
                }
                    break ;

                    }
                        }
                            break ;

                            bDoIt = 1 ;
                        {
                        default :
                        }
                            break ;

                            if( !thirdC::c_strcmpIF( tinBaseP , postName , ":\\ideafarm.home.1\\precious\\domains\\com\\ideafarm\\city\\workshop\\microsoft\\Msi.Lib" ) ) bDoIt = 1 ;
                        {
                        case 7 :
                        }
                            break ;

                            bDoIt = 1 ;
                            )
                                !thirdC::c_strcmpIF( tinBaseP , postName , ":\\ideafarm.home.1\\precious\\domains\\com\\ideafarm\\city\\workshop\\infozip\\zip.exe\\zip.exe" )
                            (
                            if
                        {
                        case 5 :
                        }
                            break ;

                            bDoIt = 1 ;
                            )
                                || !thirdC::c_strcmpIF( tinBaseP , postName , ":\\ideafarm.home.1\\precious\\domains\\com\\ideafarm\\city\\library\\snip\\1snip.0050010.gen_CsOURCEfILES.h" )
                                   !thirdC::c_strcmpIF( tinBaseP , postName , ":\\ideafarm.home.1\\precious\\domains\\com\\ideafarm\\city\\library\\snip\\ipdos.h"                          )
                            (
                            if
                        {
                        case 4 :
                        }
                            break ;

                            if( postName == thirdC::c_strstrIF( tinBaseP , postName , ":\\ideafarm.home.1\\precious\\domains\\com\\ideafarm\\city\\library\\dictionary\\5adam.51001" ) ) bDoIt = 1 ;
                        {
                        case 2 :
                    {
                    switch( offi )
                {
                if( postName == thirdC::c_strstrIF( tinBaseP , postName , ppostDW[ offi ] ) )
            {
            for( countT offi = 0 ; offi < sizeof ppostDW / sizeof ppostDW[ 0 ] ; offi ++ )
        {
        )
            !thirdC::c_strstrIF( tinBaseP , postNameP , ".ClINESiNdEF" )
        (
        else if
        }
            bDoIt = 1 ;
        {
        )
            !thirdC::c_strcmpIF( tinBaseP , postName , ":\\ideafarm.home.1\\readme.pdf"                    )
        (
        else if
        }

            }
                }
                    break ;
                    bDoIt = 1 ;
                {
                if( ppostDW[ offi ] == thirdC::c_strstrIF( tinBaseP , ppostDW[ offi ] , postName ) )
            {
            for( countT offi = 0 ; offi < sizeof ppostDW / sizeof ppostDW[ 0 ] ; offi ++ )
        {
        if( bDir )

        boolT bDir = postName[ thirdC::c_strlenIF( tinBaseP , postName ) - 1 ] == '\\' ;

        } ;

            /*.7.*/ ":\\ideafarm.home.1\\precious\\domains\\com\\ideafarm\\city\\workshop\\microsoft\\"
            /*.6.*/ ":\\ideafarm.home.1\\precious\\domains\\com\\ideafarm\\city\\workshop\\openssl\\dll\\"                                          ,
            /*.5.*/ ":\\ideafarm.home.1\\precious\\domains\\com\\ideafarm\\city\\workshop\\infozip\\"                                               ,
            /*.4.*/ ":\\ideafarm.home.1\\precious\\domains\\com\\ideafarm\\city\\library\\snip\\"                                                   ,
            /*.3.*/ ":\\ideafarm.home.1\\precious\\domains\\com\\ideafarm\\city\\library\\documents\\ideafarm.city.constitution\\"                  ,
            /*.2.*/ ":\\ideafarm.home.1\\precious\\domains\\com\\ideafarm\\city\\library\\dictionary\\"                                             ,
            /*.1.*/ ":\\ideafarm.home.1\\ephemeral\\domains\\com\\ideafarm\\city\\workshop\\exe\\"                                                  ,
            /*.0.*/ ":\\ideafarm.home.1\\ephemeral\\domains\\com\\ideafarm\\city\\park\\exedll\\1\\master\\"                                        ,
        {
        osTextT* ppostDW[] =                            // "DW": "DirWanted"

        const osTextT* postName = postNameP + 1 ;
    {
    if( !POOP )
    ZE( boolT , bDoIt ) ;
{
boolT toolCBF( tinBaseS& tinBaseP , countT& cDirsP , countT& cFilesP , const boolT& bQuitP , const osTextT* const postNameP , countT* const pcArgP )

/*1*/WAKEsHOW( "ifcIDaDAM_ELF" )/*1*/
/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

