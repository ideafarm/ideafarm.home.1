
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


REST

etherC::loafIF( tinBaseP ) ;
ether.traceF( tinBaseP , T("ok") ) ;

}
    //}
    //    }
    //        etThread.delF( tinBaseP , psttw ) ;
    //        etThread.traceF( tinBaseP , psttw ) ;
    //        etThread.strDecodeF( tinBaseP , psttw , page ) ; ___( psttw ) ;
    //        ZE( strokeS* , psttw ) ;
    //    {
    //    else
    //    if( !page ) break ;
    //    pageC page = jotFoo ;
    //{
    //for(;;)

    }
        etThread.delF( tinBaseP , psttj ) ;
        /*if( !( cRem % TUCK ) )*/ etThread.traceF( tinBaseP , psttj ) ;
        if( pbEncoded ) { etThread.strDecodeF( tinBaseP , psttj , pbEncoded ) ; ___( psttj ) ; }
        const byteT* pbEncoded = page ;
        pageC page = jotFoo[ idJot ] ;
        ZE( strokeS* , psttj ) ;

        stHuge >> idJot ;
        ZE( countT , idJot ) ;

        if( !( cRem % ( TUCK << 4 ) ) ) etThread.traceF( tinBaseP , T("stHuge [cPlates]: ")+TF2(stHuge,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED) ) ;
        countT cRem = stHuge ;
    {
    while( stHuge && !ether )
    etThread.traceF( tinBaseP , T("stHuge [cPlates]: ")+TF2(stHuge,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED) ) ;

    jotC jotFoo( tinBaseP , "doodle.foo" ) ;
{

}
    }
        if( ii == - 1 ) break ;

        stHuge.sinkF( tinBaseP , countTC() , idJot , flSTACKsINK_UNIQUE , subtractStringsInJotF , (countT)&jotFoo ) ;

        etThread.delF( tinBaseP , pbEncoded ) ;
        countT idJot = jotFoo.writeF( tinBaseP , pbEncoded , cbEncoded ) ;
        countT cbEncoded = etThread.strEncodeF( tinBaseP , pbEncoded , tSay ) ; ___( pbEncoded ) ;
        ZE( byteT* , pbEncoded ) ;

        if( !( ii % ( TUCK << 4 ) ) ) etThread.traceF( tinBaseP , T("loading [ii]: ")+tSay ) ;
        TN( tSay , "" ) ; tSay = TF3(ii,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED|flFORMAT_FOREIGN|flFORMAT_FILLzE,8) ;
    {
    for( countT ii = 1 ; !ether ; ii ++ )

    jotC jotFoo( tinBaseP , "doodle.foo" , flJOTc_WRITE ) ;
{
stackC stHuge( tinBaseP , etThread , TAG( TAGiDnULL ) , flSTACKc_DOnOTsERIALIZE , ifcSTACKtYPE_countT ) ;

TODO

/*1*/WAKEsHOWtEXT( "doodle.stackC.huge.number.of.strokeS.strings" )/*1*/
/**/
*/
/*




//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

