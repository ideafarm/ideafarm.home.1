
//
// Copyright (c) 1992-2025 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//



DONE( tmWorkerSortaF )
}
    dec02AM( cPendingP ) ;

    if( F(flagsP) & flSORTAc_CHATTER ) etThread.traceF( tin0P , T("sorted  [remainderP]:    ")+TF2(remainderP,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED) ) ;
    sorta.sortF( tin0P ) ;
    if( F(flagsP) & flSORTAc_CHATTER ) etThread.traceF( tin0P , T("sorting [remainderP]:    ")+TF2(remainderP,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED) ) ;
    sortaC sorta( tin0P , etThread , bQuitP , pbArrayP , cbArrayP , cbSuffixP , cbPrefixP , cbKeyP , moduloP , remainderP , flagsP , idWorkerP ) ;

    countT  idWorkerP  =           pTaskP->cb ;
    flagsT  flagsP     =   (flagsT)pTaskP->ca ;
    countT  remainderP =           pTaskP->c9 ;
    countT  moduloP    =           pTaskP->c8 ;
    countT  cbKeyP     =           pTaskP->c7 ;
    countT  cbPrefixP  =           pTaskP->c6 ;
    countT  cbSuffixP  =           pTaskP->c5 ;
    countT  cbArrayP   =           pTaskP->c4 ;
    byteT*  pbArrayP   =   (byteT*)pTaskP->c3 ;
    boolT&  bQuitP     =  *(boolT*)pTaskP->c2 ;
    countT& cPendingP  = *(countT*)pTaskP->c1 ;
{
if( pTaskP && pTaskP->c1 && pTaskP->c2 && pTaskP->c3 && pTaskP->c4 && pTaskP->c7 && pTaskP->c8 && pTaskP->ca && pTaskP->cb )
/*1*/TASK( tmWorkerSortaF )/*1*/


/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2025 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

