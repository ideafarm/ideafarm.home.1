
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


REST

etherC::loafIF( tinBaseP ) ;
etThread.traceF( tinBaseP , T("ok") ) ;

}
    if( bChatter ) break ;

    }
        if( bChatter ) sorta.traceRangeF( pbArray , cbArray , T("after") ) ;
        sorta.sortF( tinBaseP ) ;
        if( bChatter ) sorta.traceRangeF( pbArray , cbArray , T("before") ) ;
        sortaC sorta( tinBaseP , etThread , bQuit , pbArray , cbArray , sizeof( countT ) , sizeof( countT ) , sizeof( countT ) , 1 , 0 , bChatter ? flSORTAc_CHATTER : flSORTAc_null ) ;
        if( bChatter ) etThread.traceF( tinBaseP , TPS("|",0x25+cCounts*0x9,'|') , flTRACE_NOpREFIX ) ;
    {

    //}
    //    if( bChatter ) sorta.traceRangeF( pbArray , cbArray , T("after") ) ;
    //    sorta.sortF( tinBaseP ) ;
    //    if( bChatter ) sorta.traceRangeF( pbArray , cbArray , T("before") ) ;
    //    sortaC sorta( tinBaseP , etThread , bQuit , pbArray , cbArray , sizeof( countT ) , sizeof( countT ) , sizeof( countT ) , modulo , remainder , bChatter ? flSORTAc_CHATTER : flSORTAc_null ) ;
    //    if( bChatter ) etThread.traceF( tinBaseP , TPS("|",0x25+cCounts*0x9,'|') , flTRACE_NOpREFIX ) ;
    //{
    //for( countT remainder = 0 ; remainder < modulo ; remainder ++ )
    //countT modulo = 4 ;
    ZE( boolT , bQuit ) ;

    }
        }
            case 2 : { pcArray[ offca ] = 0x33333333                                                      ; break ; }
            case 1 : { pcArray[ offca ] = ruChallenge /*; if( offca / 3 == 0xa ) pcArray[ offca ] = - 1*/ ; break ; }
            case 0 : { pcArray[ offca ] = 0x11111111                                                      ; break ; }
        {
        switch( offca % 3 )
    {
    for( countT offca = 0 ; offca < ccArray ; offca ++ )

    ranUniC ruChallenge( tinBaseP , (measure04T)MAXcOUNTT + 1 , cSeed ) ;
    //etThread.traceF( tinBaseP , T("[cSeed]:    ")+TF2(cSeed,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED) , flTRACE_NOpREFIX ) ;
    cSeedLath = cSeed ;
    countT cSeed = 0x78E86FC1 /*slab.trueRandom*/ ;

    if( !( ++ idPass % ( TOCK << 0 ) ) ) etThread.traceF( tinBaseP , T("[idPass]:    ")+TF2(idPass,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED) , flTRACE_NOpREFIX ) ; ;
{
while( !ether )
ZE( countT , idPass ) ;
countT  cCounts = ccArray ;
countT  ccArray = sizeof pbArray / sizeof( countT ) ;
countT* pcArray = (countT*)pbArray ;
slabS& slab = slabS::slabIF() ;

TODO

boolT bChatter = 0 ;

countT cSeedLath ; // TO FIND A BUG

countT cbArray = sizeof pbArray ;
byteT  pbArray[ sizeof( countT ) * 0x30 ] ;

/*1*/WAKEsHOW( "example.dut.1snip.1500019d.sortaC" )/*1*/
/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
