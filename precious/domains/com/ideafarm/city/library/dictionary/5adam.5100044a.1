
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


REST
BLAMMO ; //U::THIS PREVENTS ME FROM OVERWRITING THE POOLoLD REPORT

etThread.strokeF( tinBaseP , T("ok\r\n") ) ;

poolOldWork.walkF( tinBaseP , ifcIDtYPEpOOLoLDwALK_DESTRUCTION , countTC() , flPOOLoLDwALK_INCLUDEdROPSoTHERcLIENTS ) ;
p oolC& poolOldWork = etThread ;

//poolOldr.walkF( tinBaseP , ifcIDtYPEpOOLoLDwALK_DESTRUCTION , countTC() , flPOOLoLDwALK_INCLUDEdROPSoTHERcLIENTS /*| flPOOLoLDwALK_INCLUDEdELETEDdROPS*/ ) ;
//p oolC poolOldr( tinBaseP , TAG( TAGiDnULL ) , tp ) ;
//p oolC poolOldr( tinBaseP , TAG( TAGiDnULL ) ) ;

//etThread.strokeF( tinBaseP , T("reporting on: \"")+tp+T("\"\r\n") ) ;
//TN( tp , "" ) ; tp = T(pstta) ;

}
    }
        break ;
        pstta = psttc1 ;
    {
    else if( bArmed )
    if( !bArmed && !etThread.strCompareF( tinBaseP , T("!inspect") , psttc1 ) ) bArmed = 1 ;
{
FORsTRINGSiN1( etThread.ether_pstt1_processParametersI_F( tinBaseP ) )
ZE( boolT , bArmed ) ;
ZE( strokeS* , pstta ) ;

TODO

/*1*/WAKEhIDE( "ifcIDaDAMoLD_POOLoLDlEAKiNSPECTOR.tool.reporter.poolOld.drop.list" )/*1*/
/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

