
//
// Copyright (c) 1992-2025 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


//VISIBLE

REST
etThread.osProcessIdPhaseAdamF( tin0P , ifcIDpHASEhANDOFFoLD_SHUTTINGdOWN ) ;

etThread.osSleepF( tin0P , TOCK * 8 ) ;
etThread.strokeF( tin0P , T("ok\r\n") ) ;

if( pca ) etThread.strokeF( tin0P , T("the value of the fourth countT object is ")+TF2(pca[3],flFORMAT_UNSIGNED)+T("\r\n") ) ;
countT* pca = (countT*)pva ;
((thirdC&)etThread).c_memsetIF( tin0P , (byteT*)pva , CBaLLOC , 0xcd ) ;

pva = (voidT*)handle.cNoteF() ;
((thirdC&)etThread).dosOpenSharedMemIF(  tin0P , handle , countTC() , "bf00104.this.is.the.name.of.the.shared.memory.block" , CBaLLOC , ifcOPENsHAREDmEMORYhOW_nCeO ) ;

handleC handle( tin0P , TAG( TAGiDnULL ) , ifcIDtYPEhANDLE_SHAREDmEMORY ) ;
etThread.strokeF( tin0P , T("am about to request ")+TF1(CBaLLOC)+T(" (")+TF4(CBaLLOC,0,0,10)+T(") bytes of shared memory\r\n") ) ;
ZE( voidT* , pva ) ;

TODO

#define CBaLLOC 0x1000

/*1*/WAKEhIDE( "example.simplest" )/*1*/
/**/
*/
\<A HREF=\"5.cf00104.1.0.html\"\>definition\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2025 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

