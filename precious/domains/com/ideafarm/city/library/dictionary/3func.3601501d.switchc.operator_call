
//
// Copyright (c) 1992-2025 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    return pcLever ? *pcLever : *(countT*)pbnu ;
    if( !pcLever ) *(countT*)pbnu = 0 ;

    stackk.ungrabF( tin0P ) ;
    }
        while( !third && ~hDown ) ;
        }
            }
                break ;
                pcLever = (countT*)c_pbLB ;
            {
            if( c_pbLB && !thirdC::c_memcmpIF( tin0P , ( (byteT*)c_pbLB + sizeof( countT ) ) , (byteT*)&cP , cbData ) )
            countT c_pbLB = (countT)&stackk.downF( tin0P , hDown ) ;
        {
        do
        handleC hDown( tin0P , TAG( TAGiDnULL ) , ifcIDtYPEhANDLE_STACKwALK ) ;
    {
    if( stackk )
    stackk.grabF( tin0P , TAG( TAGiDnULL ) ) ;
    ZE( countT* , pcLever ) ;

    }
        if( third ) return *(countT*)pbnu ;
    {
    IFbEcAREFUL

    SCOOP
    TINSL
{
/*1*/countT& switchC::operator () ( const countT& cP )/*1*/

/**/
*/
   for cP, specify a reference to the beginning of the value to be searched for
  cP is a reference so that i can be used when cbData is not sizeof( countT )
  the value to be searched for
 cP
arguments
 in such applications, the caller must serialize access to *this
 if *this is accessed by multiple threads, that volatile storage might contain a nonze value
if the value cP is not found, i evaluate to a reference to volatile storage that i set to 0
i evaluate to a reference to the wo'th lever that is associated with value cP
\<A HREF=\"5.1200022.1.0.html\"\>definition\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2025 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

