
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    else if( ((tin1S&)tin0P).pag1->_etherC_.pSwEtThread && !*((tin1S&)tin0P).pag1->_etherC_.pSwEtThread ) *((tin1S&)tin0P).pag1->_etherC_.pSwEtThread = (countT)&ether ; // etThread MUST BE THE FIRST etherC OBJECT CREATED ON EACH THREAD, EXCEPT FOR etPrime AND THE etherC OBJECTS THAT ARE CT'D BY etPrime'S CT'OR
    }

        }                                                      
            }
                if( ((tin1S&)tin0P).pag1->pPoolHomePerm ) stPoolNames.sinkF( tin0P , countTC() , (countT)((tin1S&)tin0P).pag1->pPoolHomePerm->postNameF( tin0P ) ) ;
                if( ((tin1S&)tin0P).pag1->pPoolAdamPerm ) stPoolNames.sinkF( tin0P , countTC() , (countT)((tin1S&)tin0P).pag1->pPoolAdamPerm->postNameF( tin0P ) ) ;
                if( ((tin1S&)tin0P).pag1->pPoolScratch  ) stPoolNames.sinkF( tin0P , countTC() , (countT)((tin1S&)tin0P).pag1->pPoolScratch->postNameF(  tin0P ) ) ;
                if( ((tin1S&)tin0P).pag1->pPoolHomeTemp ) stPoolNames.sinkF( tin0P , countTC() , (countT)((tin1S&)tin0P).pag1->pPoolHomeTemp->postNameF( tin0P ) ) ;
                if( ((tin1S&)tin0P).pag1->pPoolAdamTemp ) stPoolNames.sinkF( tin0P , countTC() , (countT)((tin1S&)tin0P).pag1->pPoolAdamTemp->postNameF( tin0P ) ) ;

                stackC& stPoolNames = *((tin1S&)tin0P).pag1->_etherC_.pStkPoolNames ;
            {

              *((tin1S&)tin0P).pag1->_etherC_.pTxtDllEntry2 = T("$n(rn$tin123S$$rn$etherC$$uiuipnxuirn$sadamC$$)ui") ;                                   //2011.06.27
            //*((tin1S&)tin0P).pag1->_etherC_.pTxtDllEntry2 = T("$n(rn$tin123S$$rn$etherC$$uiuipnxuirn$sadamStateOldS$$)ui") ;
            //*((tin1S&)tin0P).pag1->_etherC_.pTxtDllEntry2 = T("$n(rn$tin123S$$rn$etherC$$xuixuixpnxuirn$s adamStateOldS$$)ui") ;

            // 5. COPY THE SUFFIX AFER "do CBF$:paperOldC" FROM THAT LINE ; THEN APPEND rn$s adamStateOldS$$ AS LATH PARAMETER
            //
            //2011.06.27:     W?doF$:sadamC$n(rn$tin123S$$rn$etherC$$uiuipnxui)ui
            //2011.04.11:     W?doCBF$:sadamStateOldS$n(rn$tin123S$$rn$etherC$$uiuipnxui)ui
            // 0001:000b3cee  W?doCBF$:paperOldC$n(rn$tin123S$$rn$etherC$$xuixuixpnxuirn$s adamStateOldS$$)ui
            // YOU WILL FIND A LINE SIMILAR TO:

            // 2011.04.11: THE MAP REPORT IS NOW IN \tmp\base.map
            //
            // 4. search for "do CBF"
            // 3. "g b" "cd w*" "cd o" "rw *.map"
            // 2. LINK (base l t)
            // 1. EDIT base21.lnk to add a line "op mangle" after the "op map" line
            // INSTRUCTIONS FOR GETTING THIS VALUE
            //CODEsYNCH: 1450003 0022025

            //2011.06.27:EDITED THIS FOR MIGRATON FROM sadamStateOldS::doCBF -> sadamC::doF

            *((tin1S&)tin0P).pag1->_etherC_.pTxtDllEntry1 = T("W?") ; ;

            ((tin1S&)tin0P).pag1->_etherC_.pTxtDllEntry2         = new( 0 , tin0P , LF ) textC(   tin0P , TAG( TAGiDnULL ) , flTEXTc_null , ""                                                                     ) ; ___( ((tin1S&)tin0P).pag1->_etherC_.pTxtDllEntry2      ) ;
            ((tin1S&)tin0P).pag1->_etherC_.pTxtDllEntry1         = new( 0 , tin0P , LF ) textC(   tin0P , TAG( TAGiDnULL ) , flTEXTc_null , ""                                                                     ) ; ___( ((tin1S&)tin0P).pag1->_etherC_.pTxtDllEntry1      ) ;
            ((tin1S&)tin0P).pag1->_etherC_.pBatFiringKids        = new( 0 , tin0P , LF ) batonC(  tin0P , TAG( TAGiDnULL )                                                                                         ) ; ___( ((tin1S&)tin0P).pag1->_etherC_.pBatFiringKids     ) ;
            ((tin1S&)tin0P).pag1->_etherC_.pSwEtThread           = new( 0 , tin0P , LF ) switchC( *((tin1S&)tin0P).pag1->_etherC_.pEtLongLasting , tin0P , TAG( TAGiDnULL )                                                   ) ; ___( ((tin1S&)tin0P).pag1->_etherC_.pSwEtThread        ) ;
            ((tin1S&)tin0P).pag1->_etherC_.pTxtWinTitle          = new( 0 , tin0P , LF ) textC(   tin0P , TAG( TAGiDnULL ) , flTEXTc_null , ""                                                                     ) ; ___( ((tin1S&)tin0P).pag1->_etherC_.pTxtWinTitle       ) ;
            ((tin1S&)tin0P).pag1->_etherC_.pBatWinTitle          = new( 0 , tin0P , LF ) batonC(  tin0P , TAG( TAGiDnULL ) , 0 , ifcIDgRABlAYER_7BASEmISC1 , flBATONc_NOTjEALOUS | flBATONc_SHARElAYER             ) ; ___( ((tin1S&)tin0P).pag1->_etherC_.pBatWinTitle       ) ;
            ((tin1S&)tin0P).pag1->_etherC_.pStkPoolNames         = new( 0 , tin0P , LF ) stackC(  tin0P , *((tin1S&)tin0P).pag1->_etherC_.pEtLongLasting , TAG( TAGiDnULL )                                                   ) ; ___( ((tin1S&)tin0P).pag1->_etherC_.pStkPoolNames      ) ;
            ((tin1S&)tin0P).pag1->_etherC_.pStkQuitters          = new( 0 , tin0P , LF ) stackC(  tin0P , *((tin1S&)tin0P).pag1->_etherC_.pEtLongLasting , TAG( TAGiDnULL )                                                   ) ; ___( ((tin1S&)tin0P).pag1->_etherC_.pStkQuitters       ) ;
            ((tin1S&)tin0P).pag1->_etherC_.pStkCatchers          = new( 0 , tin0P , LF ) stackC(  tin0P , *((tin1S&)tin0P).pag1->_etherC_.pEtLongLasting , TAG( TAGiDnULL )                                                   ) ; ___( ((tin1S&)tin0P).pag1->_etherC_.pStkCatchers       ) ;
            ((tin1S&)tin0P).pag1->_etherC_.pStkAcceptors         = new( 0 , tin0P , LF ) stackC(  tin0P , *((tin1S&)tin0P).pag1->_etherC_.pEtLongLasting , TAG( TAGiDnULL )                                                   ) ; ___( ((tin1S&)tin0P).pag1->_etherC_.pStkAcceptors      ) ;
            ((tin1S&)tin0P).pag1->_etherC_.pStkIdleTimeouters    = new( 0 , tin0P , LF ) stackC(  tin0P , *((tin1S&)tin0P).pag1->_etherC_.pEtLongLasting , TAG( TAGiDnULL )                                                   ) ; ___( ((tin1S&)tin0P).pag1->_etherC_.pStkIdleTimeouters ) ;
            ((tin1S&)tin0P).pag1->_etherC_.pSwDllReferences      = new( 0 , tin0P , LF ) switchC( tin0P , *((tin1S&)tin0P).pag1->_etherC_.pEtLongLasting , TAG( TAGiDnULL ) , flSTACKc_null , ((tin1S&)tin0P).pag1->_etherC_.oshDllLever ) ; ___( ((tin1S&)tin0P).pag1->_etherC_.pSwDllReferences   ) ;
            ((tin1S&)tin0P).pag1->_etherC_.pBatWindowDeletion    = new( 0 , tin0P , LF ) batonC(  tin0P , TAG( TAGiDnULL ) , 0 , ifcIDgRABlAYER_7BASEmISC1 , flBATONc_NOTjEALOUS | flBATONc_SHARElAYER             ) ; ___( ((tin1S&)tin0P).pag1->_etherC_.pBatWindowDeletion ) ;
        {
        if( ((tin1S&)tin0P).pag1->_etherC_.pEtLongLasting )

        if( ((tin1S&)tin0P).pag1->_etherC_.pEtRock ) { ((tin1S&)tin0P).pag1->_etherC_.pSwsRecycle = new( 0 , tin0P , LF ) switchStackC( tin0P , *((tin1S&)tin0P).pag1->_etherC_.pEtRock , TAG( TAGiDnULL ) , flSTACKc_null , ((tin1S&)tin0P).pag1->_etherC_.pczl_pSwsRecycle , flSTACKc_null , 0 , ifcIDgRABlAYER_7BASEmISC1 /*U::THIS IS A PROBLEM BECAUSE IT IS GRABBED WHILE WITHIN booksC::writeF. THIS CODE JUST MAKES EXPLICIT THE DEFAULT PARAMETERS*/ ) ; ___( ((tin1S&)tin0P).pag1->_etherC_.pSwsRecycle ) ; }
        //U:: 20200520@1428: BUG: THE NEXT LINE CT A switchStackC THAT IS GRABBED FROM CODE WITHIN booksC::writeF.  IT IS RARE.  IT WILL FAIL DUE TO NONMONOTONIC GRABBING.  bksTrace IS BEING WRITTEN.  CONJ: NEED TO EDIT CODE SO THAT booksC::writeF CANNOT CALL RECYCLER

        ((tin1S&)tin0P).pag1->_etherC_.pEtRock        = new( 0 , tin0P , LF ) etherC(   tin0P , TAG( TAGiDnULL ) , flTHIRDmODE_IMPOTENCEtObLAMMO ) ; ___( ((tin1S&)tin0P).pag1->_etherC_.pEtRock        ) ;
        ((tin1S&)tin0P).pag1->_etherC_.pEtPaint       = new( 0 , tin0P , LF ) etherC(   tin0P , TAG( TAGiDnULL )                                 ) ; ___( ((tin1S&)tin0P).pag1->_etherC_.pEtPaint       ) ;
        ((tin1S&)tin0P).pag1->_etherC_.pEtText        = new( 0 , tin0P , LF ) etherC(   tin0P , TAG( TAGiDnULL )                                 ) ; ___( ((tin1S&)tin0P).pag1->_etherC_.pEtText        ) ;
        ((tin1S&)tin0P).pag1->_etherC_.pEtLongLasting = new( 0 , tin0P , LF ) etherC(   tin0P , TAG( TAGiDnULL )                                 ) ; ___( ((tin1S&)tin0P).pag1->_etherC_.pEtLongLasting ) ;

        ((tin1S&)tin0P).pag1->_etherC_.pEtPrime = &ether ;
    {
    if( !((tin1S&)tin0P).pag1->_etherC_.pEtPrime )
{
ether( *(etherC*)c_pP ) //ASSUME: c_pP IS NEVER 0.  CAN HAVE ACCESS VIOLATION
/*1*/etherInitC::etherInitC( tin0S& tin0P , countT c_pP )/*1*/ :

/**/
*/
\<A HREF=\"5.1450003.1.0.html\"\>definition\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

