
//
// Copyright (c) 1992-2025 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//

REST

sgnDone_tmWorkF.waitF( tin0P ) ;
etThread.osThreadF( TaRG3sGNdONEcBsTACK( tmWorkF , sgnDone_tmWorkF , TICK ) ) ;
signC sgnDone_tmWorkF( tin0P , TAG( TAGiDnULL ) ) ;

TODO

DONE( tmWorkF )
}
    etherC::loafIF( tin0P ) ;
    //etThread.traceF( tin0P , T("ok") ) ;

    while( cDo -- ) etThread.osThreadF( TaRG2cBsTACK( tmGorillaF , CBsTACKmIN << 1 ) , (countT)&idStompLath ) ;
      countT cDo = 2 ;              //PRODUCTION
    //countT cDo = TUCK >> 3 ;      //TESTING
    ZE( countT , idStompLath ) ;

//    etThread.osThreadSwitchingDesireF( tin0P , ifcTHREADpRIORITY_PUSHY ) ;
//    thirdC::dosPriorityProcessIF(      tin0P , ifcTHREADpRIORITY_PUSHY ) ; // "PUSHY" SO THAT I WRITE GORILLA REQUESTS AND RECEIVE RESPONSES WITH CONSISTENT "NEAR REAL TIME" SPEED ; THIS CREATES AN ATTACK SURFACE ; CPU SPINNING *MUST* BE PREVENTED (IMPOTENCE CPU SPIN BUGS, DDOS HTTP FLOOD ATTACKS); NOT "RUDE" BECAUSE NEVER WANT TO STOP GLASS1 AND GLASS2

    etThread.osThreadSwitchingDesireF( tin0P , ifcTHREADpRIORITY_LAZIEST ) ;
    thirdC::dosPriorityProcessIF(      tin0P , ifcTHREADpRIORITY_RUDE    ) ;        // THIS IS SO PASSWORD (WEBHOOK SUFFIX) UPDATES ARE RECEIVED TIMELY

    _IO_
{
if( pTaskP )
TASK( tmWorkF )

DONE( tmGorillaF )
}
    etherC::loafIF( tin0P ) ;
    }
        ++ s ; ether.osSleepF( tin0P , TOCK >> 3 ) ;

        }
            idNewSuccessUse = 0 ;

            }
                }
                    }
                        break ;

                        }
                            }
                                break ;
                                }
                                    bRunningFailures = 1 ;

                                    }
                                        /**/etRock.traceF( tin0P , T(bOuter?"posted  an email notice (running failures detected due to 4 outer failures)":"posted  an email notice (running failures detected due to 4 inner failures)") ) ;
                                        etThread.boxPutF( tin0P , T("mail.smtp2go.com/dd9/smtp/factories@ideafarm.com/factoryreports@ideafarm.com") , tSay ) ;
                                    
                                        ) ;
                                            "\r\n"
                                            "    [idStomp]:         ")+TF2(idStomp        ,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED)+T("\r\n"
                                            "    [idNewSuccessUse]: ")+TF2(idNewSuccessUse,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED)+T("\r\n"
                                            "    [idNewFailUse]:    ")+TF2(idNewFailUse   ,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED)+T("\r\n"
                                            "    [timeE1]:          ")+TF2(timeE1         ,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED)+T("\r\n"
                                            "    [cFailUse]:        ")+TF2(cFailUse       ,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED)+T("\r\n"
                                            "\r\n"
                                            "running failures.  I will notify you when this run of failures ends.\r\n"
                                            "This domain (above) has not respond timely 4 times consecutively, so I have detected\r\n"
                                            "\r\n"
                                            "Subject: Notification from GORILLAwEBHOOKS / server exception / running failures detected / ")+tDomainUse+T("\r\n"
                                    
                                        TN( tSay , "" ) ; tSay = T(
                                        /**/etRock.traceF( tin0P , T(bOuter?"posting an email notice (running failures detected due to 4 outer failures)":"posting an email notice (running failures detected due to 4 inner failures)") ) ;
                                    {

                                    _IO_
                                {
                                if( !bRunningFailures )
                            {
                            case 2 :
                            }
                                break ;
                                }
                                    bRunningFailures = bSuppressNullRouting = 1 ;                                                                  //P:PERSONALITY: NULL ROUTING IS NOT DONE IF IT HAS ALREADY BEEN DONE FOR THE CURRENT RUN OF FAILURES

                                    /**/etRock.traceF( tin0P , T("ordered  the next ipv4 value for wh1") ) ;
                                    dropAndModifySettingsSoilFileImageF( tin0P , etThread , tModifiedSettingsSoilFileImageToUse , idStomp , idGorilla ) ;
                                    /**/etRock.traceF( tin0P , T("ordering the next ipv4 value for wh1") ) ;

                                    }
                                        /**/etRock.traceF( tin0P , T(bOuter?"posted an email notice (preemptive nullrouting due to 4 outer failures)":"posted an email notice (preemptive nullrouting due to 4 inner failures)") ) ;
                                        etThread.boxPutF( tin0P , T("mail.smtp2go.com/dd9/smtp/factories@ideafarm.com/factoryreports@ideafarm.com") , tSay ) ;
                                    
                                        ) ;
                                            "\r\n"
                                            "    [idStomp]:         ")+TF2(idStomp        ,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED)+T("\r\n"
                                            "    [idNewSuccessUse]: ")+TF2(idNewSuccessUse,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED)+T("\r\n"
                                            "    [idNewFailUse]:    ")+TF2(idNewFailUse   ,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED)+T("\r\n"
                                            "    [timeE1]:          ")+TF2(timeE1         ,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED)+T("\r\n"
                                            "    [cFailUse]:        ")+TF2(cFailUse       ,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED)+T("\r\n"
                                            "\r\n"
                                            "of fails ends.\r\n"
                                            "by changing its IPv4 address.  Further nullrouting will be disabled until the current run\r\n"
                                            "This domain (above) has not respond timely 4 times consecutively, so I am nullrouting wh1\r\n"
                                            "\r\n"
                                            "Subject: Notification from GORILLAwEBHOOKS / server exception / preemptive nullrouting / ")+tDomainUse+T("\r\n"
                                    
                                        TN( tSay , "" ) ; tSay = T(
                                        /**/etRock.traceF( tin0P , T(bOuter?"posting an email notice (preemptive nullrouting due to 4 outer failures)":"posting an email notice (preemptive nullrouting due to 4 inner failures)") ) ;
                                    {

                                    _IO_
                                {
                                if( !bRunningFailures )
                            {
                            case 1 :
                        {
                        switch( idWebHookCatcher )
                    {
                    case 4 :
                    }
                        break ;

                        /**/etRock.traceF( tin0P , T(bOuter?"posted  an email notice (wo'th fail of a run of outer fails)":"posted an email notice (wo'th fail of a run of inner fails)") ) ;
                        etThread.boxPutF( tin0P , T("mail.smtp2go.com/dd9/smtp/factories@ideafarm.com/factoryreports@ideafarm.com") , tSay ) ;
                    
                        ) ;
                            "\r\n"
                            "    [idStomp]:         ")+TF2(idStomp        ,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED)+T("\r\n"
                            "    [idNewSuccessUse]: ")+TF2(idNewSuccessUse,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED)+T("\r\n"
                            "    [idNewFailUse]:    ")+TF2(idNewFailUse   ,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED)+T("\r\n"
                            "    [timeE1]:          ")+TF2(timeE1         ,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED)+T("\r\n"
                            "    [cFailUse]:        ")+TF2(cFailUse       ,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED)+T("\r\n"
                            "\r\n"

                            )+T(

                                    "wo'th failure of a run of failures for a domain.\r\n"
                                    "This domain (above) did not respond timely.  An email like this will be sent only on the\r\n"
                                :
                                    "An email like this will be sent only on the wo'th failure of a run of failures for a domain.\r\n"
                                    "This domain (above) did not respond timely.  If it fails 3 more times, I will nullroute wh1.\r\n"
                                ?

                            "\r\n")+T( idGorilla == 1
                            "Subject: Notification from GORILLAwEBHOOKS / server exception / woth stomp fail / ")+tDomainUse+T("\r\n"
                    
                        TN( tSay , "" ) ; tSay = T(
                        /**/etRock.traceF( tin0P , T(bOuter?"posting an email notice (wo'th fail of a run of outer fails)":"posting an email notice (wo'th fail of a run of inner fails)") ) ;
                    {
                    case 1 :
                {
                switch( idNewFailUse )

                _IO_
            {
            if( cFailsEpochUse <= 4 )

            /**/etRock.traceF( tin0P , tSayStompEndFail+(cFailUse?tFail:tSlow)+T(" [idStomp,time,idNewFailUse(before),tInvoice,tUrl]:    ")+TfORsTRING(idStomp)+tb4+TTF(timeE1,timeE2)+tb4+TF3(idNewFailUse,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED,8)+tb4+tInvoicePrefix+tInvoice+tb4+tUrl ) ;

            }
                etRock.traceF( tin0P , tSayIncidentStarted+TF2(offEpoch,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED) ) ;
                offEpochIncidentWoth = offEpoch ;
            {
            if( !offEpochIncidentWoth )
            cFailsEpochUse ++ ;
            _IO_
        {
        else
        }
            }
                }
                    }
                        /**/etRock.traceF( tin0P , T("posted  an email notice (exposed server is now up) [idWebHookCatcher]:    ")+tId ) ;
                        etThread.boxPutF( tin0P , T("mail.smtp2go.com/dd9/smtp/factories@ideafarm.com/factoryreports@ideafarm.com") , tSay ) ;
                    
                        ) ;
                            "\r\n"
                            "    [idStomp]:         ")+TF2(idStomp        ,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED)+T("\r\n"
                            "    [cFailUse]:        ")+TF2(cFailUse       ,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED)+T("\r\n"
                            "\r\n"
                            "wh2 is now responding timely to both outer and inner.  The recent run of fails has ended.\r\n"
                            "\r\n"
                            "Subject: Notification from GORILLAwEBHOOKS / exposed server ")+tId+T(" is now up / ")+tDomainUse+T("\r\n"
                    
                        TN( tSay , "" ) ; tSay = T(
                        /**/etRock.traceF( tin0P , T("posting an email notice (exposed server is now up) [idWebHookCatcher]:    ")+tId ) ;

                        TN( tId , "" ) ; tId = TF2(idWebHookCatcher,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED) ;
                    {
                    if( cFailsEpochUse <= 4 )
                {
                else
                }
                    }
                        /**/etRock.traceF( tin0P , T("posted  an email notice (preemptive nullrouting succeeded)") ) ;
                        etThread.boxPutF( tin0P , T("mail.smtp2go.com/dd9/smtp/factories@ideafarm.com/factoryreports@ideafarm.com") , tSay ) ;
                    
                        ) ;
                            "\r\n"
                            "    [idStomp]:         ")+TF2(idStomp        ,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED)+T("\r\n"
                            "    [cFailUse]:        ")+TF2(cFailUse       ,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED)+T("\r\n"
                            "\r\n"
                            "of fails has ended.\r\n"
                            "by changing its IPv4 address.  Nullrouting is being re-enabled since the recent run\r\n"
                            "wh1 is now responding timely to both outer and inner after wh1 was preemptively nullrouted\r\n"
                            "\r\n"
                            "Subject: Notification from GORILLAwEBHOOKS / null routing SUCCESS! / ")+tDomainUse+T("\r\n"
                    
                        TN( tSay , "" ) ; tSay = T(
                        /**/etRock.traceF( tin0P , T("posting an email notice (preemptive nullrouting succeeded)") ) ;
                    {
                    if( cFailsEpochUse <= 4 )

                    bSuppressNullRouting = 0 ;
                {
                if( bSuppressNullRouting )

                bRunningFailures = 0 ;
            {
            if( bRunningFailures && !idNewFailOuter && !idNewFailInner && idNewSuccessOuter && idNewSuccessInner )

            /**/etRock.traceF( tin0P , tSayStompEndAok+TfORsTRING(idStomp)+tb4+TTF(timeE1,timeE2)+tb4+T(bSlowStrict?"FORGIVEN":"        "                        )+tb4+tInvoicePrefix+tInvoice+tb4+tUrl ) ;
            idNewSuccessUse ++ ;
            idNewFailUse = 0 ;
        {
        if( !cFailUse && !bSlowLenient )

        ;

            : timeE1 > ( TOCK * 4 )                                    //P:PERSONALITY: I AM STRICTER                    FOR INNER
            ? timeE1 > ( TOCK * 6 ) && idNewFailUse                    //P:PERSONALITY: I IGNORE ISOLATED SLOW INCIDENTS FOR OUTER

        const boolT bSlowLenient = bOuter

        ;

            : timeE1 > ( TOCK * 5 )
            ? timeE1 > ( TOCK * 5 )

        const boolT bSlowStrict = bOuter

        /*:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::*/ #endif
        /*:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::*/     /*if( posti && costi ) etThread.boxPutF( tin0P , T("///d/tmp/foo3.ttt") , posti , costi ) ;*/ etThread.delF( tin0P , posti ) ;
        /*:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::*/     }
        /*:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::*/         }
        /*:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::*/             //etRock.traceF( tin0P , T("!exception / boxGetShadowF failed") ) ;
        /*:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::*/             cFailUse ++ ;
        /*:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::*/             POOPRqUIET
        /*:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::*/         {
        /*:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::*/         if( POOP )
        /*:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::*/         ((tin1S&)tin0P).pEtScratch->boxGetShadowF( tin0P , posti , costi , tUrl , 1 , 0 , 0 , flOPENdETAILS_null , flBOXcgETf_HTTPdOnOTpREPENDhEADER , tRequestAll3 , tRequestAll3.csF( tin0P ) ) ; ___( posti ) ;
        /*:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::*/         SCOOPS
        /*:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::*/         _IO_
        /*:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::*/     {
        /*:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::*/     IFsCRATCHoK
        /*:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::*/ 
        /*:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::*/     /*if( posti && costi ) etThread.boxPutF( tin0P , T("///d/tmp/foo2.ttt") , posti , costi ) ;*/ etThread.delF( tin0P , posti ) ;
        /*:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::*/     }
        /*:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::*/         }
        /*:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::*/             //etRock.traceF( tin0P , T("!exception / boxGetShadowF failed") ) ;
        /*:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::*/             cFailUse ++ ;
        /*:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::*/             POOPRqUIET
        /*:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::*/         {
        /*:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::*/         if( POOP )
        /*:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::*/         ((tin1S&)tin0P).pEtScratch->boxGetShadowF( tin0P , posti , costi , tUrl , 1 , 0 , 0 , flOPENdETAILS_null , flBOXcgETf_HTTPdOnOTpREPENDhEADER , tRequestAll2 , tRequestAll2.csF( tin0P ) ) ; ___( posti ) ;
        /*:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::*/         SCOOPS
        /*:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::*/         _IO_
        /*:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::*/     {
        /*:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::*/     IFsCRATCHoK
        /*:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::*/ #if defined( NEVERdEFINED )

        }
            cFailsEpochOuter = cFailsEpochInner = 0 ;
            offEpochLath     = offEpoch             ;

            }
                offEpochIncidentWoth = 0 ;
                etRock.traceF( tin0P , tSayIncidentEnded+TF2(offEpoch,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED)+tb4+TF2(offEpochIncidentWoth,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED) ) ;
            {
            if( offEpochIncidentWoth && !cFailsEpochOuter && !cFailsEpochInner )
        {
        if( offEpochLath != offEpoch )

        }
            etThread.delF( tin0P , posti ) ;
            etThread.osTimeSubtractF( tin0P , timeE1 , timeE2 , timeN1 , timeN2 ) ;
            etThread.osTimeNowF( tin0P , timeE1 , timeE2 ) ;
            
            }
                }
                    cFailUse ++ ;
                    POOPRqUIET
                {
                if( POOP )
                ((tin1S&)tin0P).pEtScratch->boxGetShadowF( tin0P , posti , costi , tUrl , 1 , 0 , 0 , flOPENdETAILS_null , flBOXcgETf_HTTPdOnOTpREPENDhEADER , tRequestAll1 , tRequestAll1.csF( tin0P ) ) ; ___( posti ) ;
                //etRock.traceF( tin0P , tSayStompBegin ) ;
                SCOOPS
                _IO_
            {
            IFsCRATCHoK

            offEpoch = timeN1 >> 0x18 ;
            etThread.osTimeNowF( tin0P , timeN1 , timeN2 ) ;
            ZE( sCountT , timeN2 ) ;
            ZE( countT  , timeN1 ) ;

            //etRock.traceF( tin0P , T(bOuter?"     OUTER    ":"INNER         ")+tDomainUse+tb4+tUrl ) ;

            tUrl = tDomainUse+T("//http/nu") ;        // THE "nu" PORTION IS NOT USED, BECAUSE HTTP HEADER IS NOT PREPENDED

            }
                tDomainUse                     = bOuter ? tDomainOuterBefore+tSuffix+tDomainOuterAfter : tDomainInner      ;
                bOuterLag = bOuter ;
            {
            if( bOuterLag != bOuter ) ;

            }
                ++ s ; thirdC::dosSleepWinkIF( tin0P , 4 ) ;                        // NAP FOR A WINK TO GIVE DNS TIME TO CATCH THE DATAGRAM
                sleepC s( tin0P , TAG( TAGiDnULL ) ) ;

                }
                    sThrow.writeF( tin0P , idpCatch , nnHe , tSuffix , tSuffix.csF( tin0P ) ) ;
                    //etRock.traceF( tin0P , tSayThrowing+tSuffix ) ;
                    countT idpCatch = *(countT*)pbi ;
                {
                if( pbi && cbi == sizeof( countT ) )
                etThread.boxGetShadowF( tin0P , pbi , cbi , tLongThrowToPort ) ; ___( pbi ) ;
                ZE( countT , cbi ) ;
                ZE( byteT* , pbi ) ;

                socketC sThrow( tin0P , etThread , TAG( TAGiDnULL ) , ifcSOCKETtYPE_DATAgRAM ) ;

                tSuffix = tPasswordPrefix+TF4((countT)ruPassword,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED|flFORMAT_NObASE|flFORMAT_FILLzE,0,0x24) ;
            {
            if( bOuter )
            TN( tSuffix , "" ) ;
        {
        TN( tUrl , "" ) ;
        ZE( countT  , offEpoch ) ;
        ZE( sCountT , timeE2   ) ;
        ZE( countT  , timeE1   ) ;

        countT& cFailsEpochUse             = bOuter ? cFailsEpochOuter                                      : cFailsEpochInner  ;

        countT& idNewFailUse               = bOuter ? idNewFailOuter                                        : idNewFailInner    ;
        countT& idNewSuccessUse            = bOuter ? idNewSuccessOuter                                     : idNewSuccessInner ;
        countT& cFailUse                   = bOuter ? cFailOuter                                            : cFailInner        ;

        ZE( countT , cFailInner ) ;
        ZE( countT , cFailOuter ) ;

        const boolT bOuter = idGorilla <= 2 && !( idStomp % ( TUCK >> 6 ) ) ;                           // ONLY GORILLAS 1 AND 2 DO OUTER STOMPS ; THIS SIMPLIFIES THE COMMUNICATION OF PASSWORD SUFFIXES TO DNS ; 1 STOMPS WH1 ; 2 STOMPS WH2
        countT idStomp = 1 + incv02AM( idStompLathP ) ;

        ZE( countT   , costi ) ;
        ZE( osTextT* , posti ) ;

        TN( tRequestAll3 , "" ) ; tRequestAll3 = tHead+tContentLength3+tRaw3Part1+tInvoice+tRaw3Part2 ;
        TN( tRequestAll2 , "" ) ; tRequestAll2 = tHead+tContentLength2+tRaw2Part1+tInvoice+tRaw2Part2 ;
        TN( tRequestAll1 , "" ) ; tRequestAll1 = tHead+tContentLength1+tRaw1Part1+tInvoice+tRaw1Part2 ;     //U::O: THIS COULD BE DONE FASTER BY PATCHING THE INVOICE STRING INTO A FIXED osTextT STRING AND BY AVOIDING THE USE OF strokeS AND textC

        if( tInvoice.csF( tin0P ) - costInvoiceRequired ) { BLAMMOiD( 0x12344321 ) ; }
        tInvoice = TF3(1+incv02AM(idInvoiceLath),flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED|flFORMAT_FOREIGN|flFORMAT_FILLzE,8) ;
        _IO_
    {
    while( !ether )
    ZE( countT , offEpochIncidentWoth ) ;
    ZE( countT , cFailsEpochInner ) ;
    ZE( countT , cFailsEpochOuter ) ;
    ZE( countT , offEpochLath ) ;
    TN( tSayThrowing , "throwing [tSuffix]:    " ) ;
    TN( tLongThrowToPort , "" ) ; tLongThrowToPort = T("////dns1/d/ideafarm.home.101/ephemeral/shared/")+TfORsTRING(ifcIDaDAM_DNS)+T("/idpCatchSuffix") ;
    ZE( boolT , bRunningFailures ) ;
    ZE( boolT , bSuppressNullRouting ) ;
    ranUniC ruPassword( tin0P , (measure04T)MAXcOUNTT + 1 , processGlobal1S::_processGlobal1I_IF().trueRandom ) ;
    sleepC s( tin0P , TAG( TAGiDnULL ) ) ;
    boolT bOuterLag = - 1 ; //A:ASSUME: operator ! RETURNS 0 OR 1
    nicNameC nnHe = etThread.sockNicNameF( tin0P , T("10.0.2.1") ) ;
    nicNameC nnMe = etThread.sockNicNameF( tin0P , T("10.0.3.1") ) ;
    TN( tSayIncidentEnded   , "incident ended [offEpoch,offEpochIncidentWoth]:    "                          ) ;
    TN( tSayIncidentStarted , "incident started [offEpoch]:    "                                             ) ;
    TN( tSayStompEndFail    , "stomp! (end)  "                                                               ) ;
    TN( tSayStompEndAok     , "stomp! (end)    aok   [idStomp,time,bSlowStrict         ,tInvoice,tUrl]:    " ) ;
    TN( tSayStompBegin      , "stomp! (begin)"                                                               ) ;
    TN( tPasswordPrefix     , "wh"                                                                           ) ; tPasswordPrefix += TF2(idWebHookCatcher,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED) ;
    TN( tSlow               , "S L O W"                                                                      ) ;
    TN( tFail               , "F A I L"                                                                      ) ;
    TN( tDomainUse          , (strokeS*)tDomainInner                                                         ) ;
    TN( tDomainInner        , idWebHookCatcher == 1 ? "10.0.1.1" : "10.0.1.2"                                ) ;
    TN( tDomainOuterAfter   , ".hidden.ideafarm.com"                                                         ) ;
    TN( tDomainOuterBefore  , "AbgMdwMYbvFJ3YuB5R-"                                                          ) ;         //U:: MOVE THIS HARDCODED VALUE INTO A SETTING
    ZE( countT , idNewFailInner    ) ;
    ZE( countT , idNewFailOuter    ) ;
    ZE( countT , idNewSuccessInner ) ;
    ZE( countT , idNewSuccessOuter ) ;

    }
        tContentLength3 = T("Content-Length: ")+TF4(costRaw3Part1+costInvoiceRequired+costRaw3Part2,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED|flFORMAT_FOREIGN|flFORMAT_NObASE,0,0xa)+T("\r\n\r\n") ;
        tContentLength2 = T("Content-Length: ")+TF4(costRaw2Part1+costInvoiceRequired+costRaw2Part2,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED|flFORMAT_FOREIGN|flFORMAT_NObASE,0,0xa)+T("\r\n\r\n") ;
        tContentLength1 = T("Content-Length: ")+TF4(costRaw1Part1+costInvoiceRequired+costRaw1Part2,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED|flFORMAT_FOREIGN|flFORMAT_NObASE,0,0xa)+T("\r\n\r\n") ;
        //"Content-Length: 5718\r\n"

        const countT costRaw3Part2 = sizeof postRaw3Part2 - 1 ;
        const countT costRaw3Part1 = sizeof postRaw3Part1 - 1 ;
        const countT costRaw2Part2 = sizeof postRaw2Part2 - 1 ;
        const countT costRaw2Part1 = sizeof postRaw2Part1 - 1 ;
        const countT costRaw1Part2 = sizeof postRaw1Part2 - 1 ;
        const countT costRaw1Part1 = sizeof postRaw1Part1 - 1 ;
        _IO_
    {
    TN( tContentLength3 , "" ) ; 
    TN( tContentLength2 , "" ) ; 
    TN( tContentLength1 , "" ) ; 

    TN( tRaw3Part2 , postRaw3Part2 ) ;
    TN( tRaw3Part1 , postRaw3Part1 ) ;
    TN( tRaw2Part2 , postRaw2Part2 ) ;
    TN( tRaw2Part1 , postRaw2Part1 ) ;
    TN( tRaw1Part2 , postRaw1Part2 ) ;
    TN( tRaw1Part1 , postRaw1Part1 ) ;

    TN( tHead , postHead ) ;

    const countT costInvoiceRequired = tInvoice.csF( tin0P ) ;
    TN( tInvoice , "" ) ; tInvoice = TF3(0,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED|flFORMAT_FOREIGN|flFORMAT_FILLzE,8) ;   //A:ASSUME: UPDATES TO tInvoice DO NOT CHANGE ITS LENGTH

    if( idGorilla == 1 ) dropAndModifySettingsSoilFileImageF( tin0P , etThread , tModifiedSettingsSoilFileImageToUse , 0 , idGorilla ) ;

    }
        etThread.delF( tin0P , posti ) ;
        tModifiedSettingsSoilFileImageToUse = T(posti) ;
        etThread.boxGetShadowF( tin0P , posti , costi , T("///d/ideafarm.work/txt/soil/settings/production/settings.production.dns1.no.gorilla.no.administrator.no.welcomer.yes.dns.soil") ) ; ___( posti ) ;
        ZE( countT   , costi ) ;
        ZE( osTextT* , posti ) ;                        //P:PERSONALITY: MY COMPUTER MUST HAVE THE CURRENT COPY OF THE SETTINGS FILE FOR THE DNS COMPUTER
        _IO_
    {
    TN( tModifiedSettingsSoilFileImageToUse , "" ) ;
    TN( tb4 , "    " ) ;
    TN( tInvoicePrefix , "inv_gorilla_" ) ;

    etherC& etRock = etherC::etRockIF( tin0P ) ;

    const countT idWebHookCatcher = idGorilla <= 2 ? idGorilla : 0 ;

    const countT idGorilla = 1 + incv02AM( idGorillaLath ) ;
    static countT idGorillaLath ;

    countT& idStompLathP = *(countT*)pTaskP->c1 ;

    _IO_
{
if( pTaskP && pTaskP->c1 )
TASK( tmGorillaF )

}
    etherP.delF( tin0P , psttLong ) ;
    /**/etherP.traceF( tin0P , T("the image that i will use next time is in [tLong]:    ")+T(psttLong) ) ;
    etherP.boxPutGenerationF( tin0P , psttLong , T("///ideafarm/tmp/debug.next.new.settings.from.gorilla.soil") , 0 , tP , tP.csF( tin0P ) ) ; ___( psttLong ) ;
    ZE( strokeS* , psttLong ) ;

    }
        }
            }
                tP = T(psttIn) ;

                }
                    case '4' : { sttTarget.idAdam = '1' ; break ; }
                    case '3' : { sttTarget.idAdam = '4' ; break ; }
                    case '2' : { sttTarget.idAdam = '3' ; break ; }
                    case '1' : { sttTarget.idAdam = '2' ; break ; }
                {
                switch( sttTarget.idAdam )

                strokeS& sttTarget = psttIn[ CSpREFIX - 1 + idTargetBigit ] ;
                strokeS* psttIn = tP ;
                countT idTargetBigit = idHit2 + tFind2.csF( tin0P ) ;

                etherP.delF( tin0P , psttKV ) ;
                /**/etherP.traceF( tin0P , T("i just dropped a settings soil file image that contained [kv]:    ")+T(psttKV) ) ;
                etherP.strSubstringF( tin0P , psttKV , countTC( idHit1 ) , countTC( idHit3 ) , tP ) ; ___( psttKV ) ;
                ZE( strokeS* , psttKV ) ;
                _IO_
            {
            if( idHit3 > idHit2 + tFind2.csF( tin0P ) + 1 )

            countT idHit3 = etherP.strIdF( tin0P , 0 , flSTRmATCH_null , idf3 , sttq , tFind3 , tP , 0 , 1 ) ;
            countT idf3 = idHit1 ;
            _IO_
        {
        if( idHit2 > idHit1 + tFind1.csF( tin0P ) )

        countT idHit2 = etherP.strIdF( tin0P , 0 , flSTRmATCH_null , idf2 , sttq , tFind2 , tP , 0 , 1 ) ;
        strokeS sttq( (countT)0 , sc_IGNOREqUOTES ) ;
        countT idf2 = idHit1 ;
        _IO_
    {
    if( idHit1 )
    countT idHit1 = etherP.strIdF( tin0P , tFind1 , tP ) ;

    TN( tFind3 , "}" ) ;
    TN( tFind2 , " \"dns.wh1.netsh.command.ipv4." ) ;
    TN( tFind1 , "{kv: dns.wh1.netsh.command.ipv4.settingkey" ) ;                                                       //P:PERSONALITY: MUST APPEAR EXACTLY LIKE THIS IN THE SETTINGS SOIL FILE (E.G. NO EXTRA SPACES)

    // {kv: dns.wh1.netsh.command.ipv4.settingkey "dns.wh1.netsh.command.ipv4.1" }
    //
    // NOW EDIT THE FOLLOWING VALUE IN THE SETTINGS IMAGE TO INCREMENT MODULO 4:

    /**/etherP.traceF( tin0P , T("i just dropped a settings soil file image on ////dns1/ [tShort]:    ")+tShort ) ;
    etherP.boxPutF( tin0P , T("////dns1/d/ideafarm.home.101/IdeaFarm (tm)/")+tUser+T("/1.1. Drop a Copy of SOIL (tm) Text Files Here/")+tShort , tP , tP.csF( tin0P ) ) ;
  //etherP.boxPutF( tin0P , T("///ideafarm/"               "IdeaFarm (tm)/")+tUser+T("/1.1. Drop a Copy of SOIL (tm) Text Files Here/")+tShort , tP , tP.csF( tin0P ) ) ;
    TN( tShort , "" ) ; tShort = T("new.settings.from.gorilla.")+TfORsTRING(idGorillaP)+T(".")+TfORsTRING(idStompP)+T(".soil") ;
    TN( tUser , thirdC::postUserNameIF() ) ;
    _IO_
{
voidT dropAndModifySettingsSoilFileImageF( tin0S& tin0P , etherC& etherP , textC& tP , countT idStompP , countT idGorillaP )

countT idInvoiceLath ;

} ;

    "}\r\n"
    "  \"type\": \"customer.subscription.updated\"\r\n"
    "  },\r\n"
    "    \"idempotency_key\": \"2d7c956f-c3e4-4388-b65d-f9f621d7e1ac\"\r\n"
    "    \"id\": \"req_tReGXKykL98JHC\",\r\n"
    "  \"request\": {\r\n"
    "  \"pending_webhooks\": 2,\r\n"
    "  \"livemode\": false,\r\n"
    "  },\r\n"
    "    }\r\n"
    "      \"status\": \"incomplete\"\r\n"
    "      \"default_payment_method\": null,\r\n"
    "    \"previous_attributes\": {\r\n"
    "    },\r\n"
    "      \"trial_start\": null\r\n"
    "      },\r\n"
    "        }\r\n"
    "          \"missing_payment_method\": \"create_invoice\"\r\n"
    "        \"end_behavior\": {\r\n"
    "      \"trial_settings\": {\r\n"
    "      \"trial_end\": null,\r\n"
    "      \"transfer_data\": null,\r\n"
    "      \"test_clock\": null,\r\n"
    "      \"status\": \"active\",\r\n"
    "      \"start_date\": 1736792973,\r\n"
    "      \"schedule\": null,\r\n"
    "      \"quantity\": 1,\r\n"
    "      },\r\n"
    "        \"usage_type\": \"licensed\"\r\n"
    "        \"trial_period_days\": null,\r\n"
    "        \"transform_usage\": null,\r\n"
    "        \"tiers_mode\": null,\r\n"
    "        \"product\": \"prod_GORILLA01\",\r\n"
    "        \"nickname\": null,\r\n"
    "        \"meter\": null,\r\n"
    "        },\r\n"
    "        \"metadata\": {\r\n"
    "        \"livemode\": false,\r\n"
    "        \"interval_count\": 1,\r\n"
    "        \"interval\": \"day\",\r\n"
    "        \"currency\": \"usd\",\r\n"
    "        \"created\": 1735329717,\r\n"
    "        \"billing_scheme\": \"per_unit\",\r\n"
    "        \"amount_decimal\": \"100\",\r\n"
    "        \"amount\": 100,\r\n"
    "        \"aggregate_usage\": null,\r\n"
    "        \"active\": true,\r\n"
    "        \"object\": \"plan\",\r\n"
    "        \"id\": \"price_1QajjNLzWCJsgIUVCCnH6iGl\",\r\n"
    "      \"plan\": {\r\n"
    "      \"pending_update\": null,\r\n"
    "      \"pending_setup_intent\": null,\r\n"
    "      \"pending_invoice_item_interval\": null,\r\n"
    "      },\r\n"
    "        \"save_default_payment_method\": \"off\"\r\n"
    "        \"payment_method_types\": null,\r\n"
    "        },\r\n"
    "          \"us_bank_account\": null\r\n"
    "          \"sepa_debit\": null,\r\n"
    "          \"konbini\": null,\r\n"
    "          \"customer_balance\": null,\r\n"
    "          },\r\n"
    "            \"request_three_d_secure\": \"automatic\"\r\n"
    "            \"network\": null,\r\n"
    "          \"card\": {\r\n"
    "          \"bancontact\": null,\r\n"
    "          \"acss_debit\": null,\r\n"
    "        \"payment_method_options\": {\r\n"
    "      \"payment_settings\": {\r\n"
    "      \"pause_collection\": null,\r\n"
    "      \"on_behalf_of\": null,\r\n"
    "      \"next_pending_invoice_item_invoice\": null,\r\n"
    "      },\r\n"
    "      \"metadata\": {\r\n"
    "      \"livemode\": false,\r\n"
    "\",\r\n"

osTextT postRaw3Part2[] = {

} ;

    "      \"latest_invoice\": \"inv_gorilla_"
    "      },\r\n"
    "        \"url\": \"/v1/subscription_items?subscription=sub_1QgsOHLzWCJsgIUVuFK2KFO7\"\r\n"
    "        \"total_count\": 1,\r\n"
    "        \"has_more\": false,\r\n"
    "        ],\r\n"
    "          }\r\n"
    "            ]\r\n"
    "\r\n"
    "            \"tax_rates\": [\r\n"
    "            \"subscription\": \"sub_1QgsOHLzWCJsgIUVuFK2KFO7\",\r\n"
    "            \"quantity\": 1,\r\n"
    "            },\r\n"
    "              \"unit_amount_decimal\": \"100\"\r\n"
    "              \"unit_amount\": 100,\r\n"
    "              \"type\": \"recurring\",\r\n"
    "              \"transform_quantity\": null,\r\n"
    "              \"tiers_mode\": null,\r\n"
    "              \"tax_behavior\": \"unspecified\",\r\n"
    "              },\r\n"
    "                \"usage_type\": \"licensed\"\r\n"
    "                \"trial_period_days\": null,\r\n"
    "                \"meter\": null,\r\n"
    "                \"interval_count\": 1,\r\n"
    "                \"interval\": \"day\",\r\n"
    "                \"aggregate_usage\": null,\r\n"
    "              \"recurring\": {\r\n"
    "              \"product\": \"prod_GORILLA01\",\r\n"
    "              \"nickname\": null,\r\n"
    "              },\r\n"
    "              \"metadata\": {\r\n"
    "              \"lookup_key\": null,\r\n"
    "              \"livemode\": false,\r\n"
    "              \"custom_unit_amount\": null,\r\n"
    "              \"currency\": \"usd\",\r\n"
    "              \"created\": 1735329717,\r\n"
    "              \"billing_scheme\": \"per_unit\",\r\n"
    "              \"active\": true,\r\n"
    "              \"object\": \"price\",\r\n"
    "              \"id\": \"price_1QajjNLzWCJsgIUVCCnH6iGl\",\r\n"
    "            \"price\": {\r\n"
    "            },\r\n"
    "              \"usage_type\": \"licensed\"\r\n"
    "              \"trial_period_days\": null,\r\n"
    "              \"transform_usage\": null,\r\n"
    "              \"tiers_mode\": null,\r\n"
    "              \"product\": \"prod_GORILLA01\",\r\n"
    "              \"nickname\": null,\r\n"
    "              \"meter\": null,\r\n"
    "              },\r\n"
    "              \"metadata\": {\r\n"
    "              \"livemode\": false,\r\n"
    "              \"interval_count\": 1,\r\n"
    "              \"interval\": \"day\",\r\n"
    "              \"currency\": \"usd\",\r\n"
    "              \"created\": 1735329717,\r\n"
    "              \"billing_scheme\": \"per_unit\",\r\n"
    "              \"amount_decimal\": \"100\",\r\n"
    "              \"amount\": 100,\r\n"
    "              \"aggregate_usage\": null,\r\n"
    "              \"active\": true,\r\n"
    "              \"object\": \"plan\",\r\n"
    "              \"id\": \"price_1QajjNLzWCJsgIUVCCnH6iGl\",\r\n"
    "            \"plan\": {\r\n"
    "            },\r\n"
    "            \"metadata\": {\r\n"
    "            ],\r\n"
    "\r\n"
    "            \"discounts\": [\r\n"
    "            \"created\": 1736792974,\r\n"
    "            \"billing_thresholds\": null,\r\n"
    "            \"object\": \"subscription_item\",\r\n"
    "            \"id\": \"si_Ra2TbAepRvcHFE\",\r\n"
    "          {\r\n"
    "        \"data\": [\r\n"
    "        \"object\": \"list\",\r\n"
    "      \"items\": {\r\n"
    "      },\r\n"
    "        }\r\n"
    "          \"type\": \"self\"\r\n"
    "        \"issuer\": {\r\n"
    "        \"account_tax_ids\": null,\r\n"
    "      \"invoice_settings\": {\r\n"
    "      \"ended_at\": null,\r\n"
    "      ],\r\n"
    "\r\n"
    "      \"discounts\": [\r\n"
    "      \"discount\": null,\r\n"
    "      \"description\": null,\r\n"
    "      ],\r\n"
    "\r\n"
    "      \"default_tax_rates\": [\r\n"
    "      \"default_source\": null,\r\n"
    "      \"default_payment_method\": \"pm_1QgsOGLzWCJsgIUVET4VvXOR\",\r\n"
    "      \"days_until_due\": null,\r\n"
    "      \"customer\": \"cus_Ra2TEpM4kjoSGY\",\r\n"
    "      \"current_period_start\": 1736792973,\r\n"
    "      \"current_period_end\": 1736879373,\r\n"
    "      \"currency\": \"usd\",\r\n"
    "      \"created\": 1736792973,\r\n"
    "      \"collection_method\": \"charge_automatically\",\r\n"
    "      },\r\n"
    "        \"reason\": null\r\n"
    "        \"feedback\": null,\r\n"
    "        \"comment\": null,\r\n"
    "      \"cancellation_details\": {\r\n"
    "      \"canceled_at\": null,\r\n"
    "      \"cancel_at_period_end\": false,\r\n"
    "      \"cancel_at\": null,\r\n"
    "      \"billing_thresholds\": null,\r\n"
    "      \"billing_cycle_anchor_config\": null,\r\n"
    "      \"billing_cycle_anchor\": 1736792973,\r\n"
    "      },\r\n"
    "        \"liability\": null\r\n"
    "        \"enabled\": false,\r\n"
    "        \"disabled_reason\": null,\r\n"
    "      \"automatic_tax\": {\r\n"
    "      \"application_fee_percent\": null,\r\n"
    "      \"application\": null,\r\n"
    "      \"object\": \"subscription\",\r\n"
    "      \"id\": \"sub_1QgsOHLzWCJsgIUVuFK2KFO7\",\r\n"
    "    \"object\": {\r\n"
    "  \"data\": {\r\n"
    "  \"created\": 1736792976,\r\n"
    "  \"api_version\": \"2023-10-16\",\r\n"
    "  \"object\": \"event\",\r\n"
    "  \"id\": \"evt_1QgsOKLzWCJsgIUVwXZEqo6h\",\r\n"
    "{\r\n"

osTextT postRaw3Part1[] = {

} ;

    "}\r\n"
    "  \"type\": \"customer.subscription.created\"\r\n"
    "  },\r\n"
    "    \"idempotency_key\": \"2d7c956f-c3e4-4388-b65d-f9f621d7e1ac\"\r\n"
    "    \"id\": \"req_tReGXKykL98JHC\",\r\n"
    "  \"request\": {\r\n"
    "  \"pending_webhooks\": 2,\r\n"
    "  \"livemode\": false,\r\n"
    "  },\r\n"
    "    }\r\n"
    "      \"trial_start\": null\r\n"
    "      },\r\n"
    "        }\r\n"
    "          \"missing_payment_method\": \"create_invoice\"\r\n"
    "        \"end_behavior\": {\r\n"
    "      \"trial_settings\": {\r\n"
    "      \"trial_end\": null,\r\n"
    "      \"transfer_data\": null,\r\n"
    "      \"test_clock\": null,\r\n"
    "      \"status\": \"incomplete\",\r\n"
    "      \"start_date\": 1736792973,\r\n"
    "      \"schedule\": null,\r\n"
    "      \"quantity\": 1,\r\n"
    "      },\r\n"
    "        \"usage_type\": \"licensed\"\r\n"
    "        \"trial_period_days\": null,\r\n"
    "        \"transform_usage\": null,\r\n"
    "        \"tiers_mode\": null,\r\n"
    "        \"product\": \"prod_GORILLA01\",\r\n"
    "        \"nickname\": null,\r\n"
    "        \"meter\": null,\r\n"
    "        },\r\n"
    "        \"metadata\": {\r\n"
    "        \"livemode\": false,\r\n"
    "        \"interval_count\": 1,\r\n"
    "        \"interval\": \"day\",\r\n"
    "        \"currency\": \"usd\",\r\n"
    "        \"created\": 1735329717,\r\n"
    "        \"billing_scheme\": \"per_unit\",\r\n"
    "        \"amount_decimal\": \"100\",\r\n"
    "        \"amount\": 100,\r\n"
    "        \"aggregate_usage\": null,\r\n"
    "        \"active\": true,\r\n"
    "        \"object\": \"plan\",\r\n"
    "        \"id\": \"price_1QajjNLzWCJsgIUVCCnH6iGl\",\r\n"
    "      \"plan\": {\r\n"
    "      \"pending_update\": null,\r\n"
    "      \"pending_setup_intent\": null,\r\n"
    "      \"pending_invoice_item_interval\": null,\r\n"
    "      },\r\n"
    "        \"save_default_payment_method\": \"off\"\r\n"
    "        \"payment_method_types\": null,\r\n"
    "        },\r\n"
    "          \"us_bank_account\": null\r\n"
    "          \"sepa_debit\": null,\r\n"
    "          \"konbini\": null,\r\n"
    "          \"customer_balance\": null,\r\n"
    "          },\r\n"
    "            \"request_three_d_secure\": \"automatic\"\r\n"
    "            \"network\": null,\r\n"
    "          \"card\": {\r\n"
    "          \"bancontact\": null,\r\n"
    "          \"acss_debit\": null,\r\n"
    "        \"payment_method_options\": {\r\n"
    "      \"payment_settings\": {\r\n"
    "      \"pause_collection\": null,\r\n"
    "      \"on_behalf_of\": null,\r\n"
    "      \"next_pending_invoice_item_invoice\": null,\r\n"
    "      },\r\n"
    "      \"metadata\": {\r\n"
    "      \"livemode\": false,\r\n"
    "\",\r\n"

osTextT postRaw2Part2[] = {

} ;

    "      \"latest_invoice\": \"inv_gorilla_"
    "      },\r\n"
    "        \"url\": \"/v1/subscription_items?subscription=sub_1QgsOHLzWCJsgIUVuFK2KFO7\"\r\n"
    "        \"total_count\": 1,\r\n"
    "        \"has_more\": false,\r\n"
    "        ],\r\n"
    "          }\r\n"
    "            ]\r\n"
    "\r\n"
    "            \"tax_rates\": [\r\n"
    "            \"subscription\": \"sub_1QgsOHLzWCJsgIUVuFK2KFO7\",\r\n"
    "            \"quantity\": 1,\r\n"
    "            },\r\n"
    "              \"unit_amount_decimal\": \"100\"\r\n"
    "              \"unit_amount\": 100,\r\n"
    "              \"type\": \"recurring\",\r\n"
    "              \"transform_quantity\": null,\r\n"
    "              \"tiers_mode\": null,\r\n"
    "              \"tax_behavior\": \"unspecified\",\r\n"
    "              },\r\n"
    "                \"usage_type\": \"licensed\"\r\n"
    "                \"trial_period_days\": null,\r\n"
    "                \"meter\": null,\r\n"
    "                \"interval_count\": 1,\r\n"
    "                \"interval\": \"day\",\r\n"
    "                \"aggregate_usage\": null,\r\n"
    "              \"recurring\": {\r\n"
    "              \"product\": \"prod_GORILLA01\",\r\n"
    "              \"nickname\": null,\r\n"
    "              },\r\n"
    "              \"metadata\": {\r\n"
    "              \"lookup_key\": null,\r\n"
    "              \"livemode\": false,\r\n"
    "              \"custom_unit_amount\": null,\r\n"
    "              \"currency\": \"usd\",\r\n"
    "              \"created\": 1735329717,\r\n"
    "              \"billing_scheme\": \"per_unit\",\r\n"
    "              \"active\": true,\r\n"
    "              \"object\": \"price\",\r\n"
    "              \"id\": \"price_1QajjNLzWCJsgIUVCCnH6iGl\",\r\n"
    "            \"price\": {\r\n"
    "            },\r\n"
    "              \"usage_type\": \"licensed\"\r\n"
    "              \"trial_period_days\": null,\r\n"
    "              \"transform_usage\": null,\r\n"
    "              \"tiers_mode\": null,\r\n"
    "              \"product\": \"prod_GORILLA01\",\r\n"
    "              \"nickname\": null,\r\n"
    "              \"meter\": null,\r\n"
    "              },\r\n"
    "              \"metadata\": {\r\n"
    "              \"livemode\": false,\r\n"
    "              \"interval_count\": 1,\r\n"
    "              \"interval\": \"day\",\r\n"
    "              \"currency\": \"usd\",\r\n"
    "              \"created\": 1735329717,\r\n"
    "              \"billing_scheme\": \"per_unit\",\r\n"
    "              \"amount_decimal\": \"100\",\r\n"
    "              \"amount\": 100,\r\n"
    "              \"aggregate_usage\": null,\r\n"
    "              \"active\": true,\r\n"
    "              \"object\": \"plan\",\r\n"
    "              \"id\": \"price_1QajjNLzWCJsgIUVCCnH6iGl\",\r\n"
    "            \"plan\": {\r\n"
    "            },\r\n"
    "            \"metadata\": {\r\n"
    "            ],\r\n"
    "\r\n"
    "            \"discounts\": [\r\n"
    "            \"created\": 1736792974,\r\n"
    "            \"billing_thresholds\": null,\r\n"
    "            \"object\": \"subscription_item\",\r\n"
    "            \"id\": \"si_Ra2TbAepRvcHFE\",\r\n"
    "          {\r\n"
    "        \"data\": [\r\n"
    "        \"object\": \"list\",\r\n"
    "      \"items\": {\r\n"
    "      },\r\n"
    "        }\r\n"
    "          \"type\": \"self\"\r\n"
    "        \"issuer\": {\r\n"
    "        \"account_tax_ids\": null,\r\n"
    "      \"invoice_settings\": {\r\n"
    "      \"ended_at\": null,\r\n"
    "      ],\r\n"
    "\r\n"
    "      \"discounts\": [\r\n"
    "      \"discount\": null,\r\n"
    "      \"description\": null,\r\n"
    "      ],\r\n"
    "\r\n"
    "      \"default_tax_rates\": [\r\n"
    "      \"default_source\": null,\r\n"
    "      \"default_payment_method\": null,\r\n"
    "      \"days_until_due\": null,\r\n"
    "      \"customer\": \"cus_Ra2TEpM4kjoSGY\",\r\n"
    "      \"current_period_start\": 1736792973,\r\n"
    "      \"current_period_end\": 1736879373,\r\n"
    "      \"currency\": \"usd\",\r\n"
    "      \"created\": 1736792973,\r\n"
    "      \"collection_method\": \"charge_automatically\",\r\n"
    "      },\r\n"
    "        \"reason\": null\r\n"
    "        \"feedback\": null,\r\n"
    "        \"comment\": null,\r\n"
    "      \"cancellation_details\": {\r\n"
    "      \"canceled_at\": null,\r\n"
    "      \"cancel_at_period_end\": false,\r\n"
    "      \"cancel_at\": null,\r\n"
    "      \"billing_thresholds\": null,\r\n"
    "      \"billing_cycle_anchor_config\": null,\r\n"
    "      \"billing_cycle_anchor\": 1736792973,\r\n"
    "      },\r\n"
    "        \"liability\": null\r\n"
    "        \"enabled\": false,\r\n"
    "        \"disabled_reason\": null,\r\n"
    "      \"automatic_tax\": {\r\n"
    "      \"application_fee_percent\": null,\r\n"
    "      \"application\": null,\r\n"
    "      \"object\": \"subscription\",\r\n"
    "      \"id\": \"sub_1QgsOHLzWCJsgIUVuFK2KFO7\",\r\n"
    "    \"object\": {\r\n"
    "  \"data\": {\r\n"
    "  \"created\": 1736792974,\r\n"
    "  \"api_version\": \"2023-10-16\",\r\n"
    "  \"object\": \"event\",\r\n"
    "  \"id\": \"evt_1QgsOKLzWCJsgIUVwoZuqouc\",\r\n"
    "{\r\n"

osTextT postRaw2Part1[] = {

} ;

    "}\r\n"
    "  \"type\": \"checkout.session.completed\"\r\n"
    "  },\r\n"
    "    \"idempotency_key\": null\r\n"
    "    \"id\": null,\r\n"
    "  \"request\": {\r\n"
    "  \"pending_webhooks\": 1,\r\n"
    "  \"livemode\": false,\r\n"
    "  },\r\n"
    "    }\r\n"
    "      \"url\": null\r\n"
    "      \"ui_mode\": \"hosted\",\r\n"
    "      },\r\n"
    "        \"amount_tax\": 0\r\n"
    "        \"amount_shipping\": 0,\r\n"
    "        \"amount_discount\": 0,\r\n"
    "      \"total_details\": {\r\n"
    "      \"success_url\": \"https://stripe.com\",\r\n"
    "      \"subscription\": \"sub_1QgsOHLzWCJsgIUVuFK2KFO7\",\r\n"
    "      \"submit_type\": \"auto\",\r\n"
    "      \"status\": \"complete\",\r\n"
    "      ],\r\n"
    "\r\n"
    "      \"shipping_options\": [\r\n"
    "      \"shipping_details\": null,\r\n"
    "      \"shipping_cost\": null,\r\n"
    "      \"shipping_address_collection\": null,\r\n"
    "      \"setup_intent\": null,\r\n"
    "      },\r\n"
    "        \"payment_method_save\": null\r\n"
    "        \"payment_method_remove\": null,\r\n"
    "        ],\r\n"
    "          \"always\"\r\n"
    "        \"allow_redisplay_filters\": [\r\n"
    "      \"saved_payment_method_options\": {\r\n"
    "      \"recovered_from\": null,\r\n"
    "      },\r\n"
    "        \"enabled\": false\r\n"
    "      \"phone_number_collection\": {\r\n"
    "      \"payment_status\": \"paid\",\r\n"
    "      ],\r\n"
    "        \"amazon_pay\"\r\n"
    "        \"cashapp\",\r\n"
    "        \"card\",\r\n"
    "      \"payment_method_types\": [\r\n"
    "      },\r\n"
    "        }\r\n"
    "          \"request_three_d_secure\": \"automatic\"\r\n"
    "        \"card\": {\r\n"
    "      \"payment_method_options\": {\r\n"
    "      },\r\n"
    "        \"parent\": null\r\n"
    "        \"id\": \"pmc_1N4qKkLzWCJsgIUVCIjwyfeH\",\r\n"
    "      \"payment_method_configuration_details\": {\r\n"
    "      \"payment_method_collection\": \"always\",\r\n"
    "      \"payment_link\": \"plink_1QajkzLzWCJsgIUVspKEAHAP\",\r\n"
    "      \"payment_intent\": null,\r\n"
    "      \"mode\": \"subscription\",\r\n"
    "      },\r\n"
    "      \"metadata\": {\r\n"
    "      \"locale\": \"en\",\r\n"
    "      \"livemode\": false,\r\n"
    "      \"invoice_creation\": null,\r\n"
    "\",\r\n"

osTextT postRaw1Part2[] = {

} ;

    "      \"invoice\": \"inv_gorilla_"
    "      \"expires_at\": 1736879341,\r\n"
    "      \"customer_email\": null,\r\n"
    "      },\r\n"
    "        ]\r\n"
    "\r\n"
    "        \"tax_ids\": [\r\n"
    "        \"tax_exempt\": \"none\",\r\n"
    "        \"phone\": null,\r\n"
    "        \"name\": \"joe blow\",\r\n"
    "        \"email\": \"test.20250113.1029@ideafarm.com\",\r\n"
    "        },\r\n"
    "          \"state\": null\r\n"
    "          \"postal_code\": \"11111\",\r\n"
    "          \"line2\": null,\r\n"
    "          \"line1\": null,\r\n"
    "          \"country\": \"US\",\r\n"
    "          \"city\": null,\r\n"
    "        \"address\": {\r\n"
    "      \"customer_details\": {\r\n"
    "      \"customer_creation\": \"if_required\",\r\n"
    "      \"customer\": \"cus_Ra2TEpM4kjoSGY\",\r\n"
    "      },\r\n"
    "        \"terms_of_service_acceptance\": null\r\n"
    "        \"submit\": null,\r\n"
    "        \"shipping_address\": null,\r\n"
    "        \"after_submit\": null,\r\n"
    "      \"custom_text\": {\r\n"
    "      ],\r\n"
    "        }\r\n"
    "          \"type\": \"text\"\r\n"
    "          },\r\n"
    "            \"value\": \"1029\"\r\n"
    "            \"minimum_length\": null,\r\n"
    "            \"maximum_length\": 4,\r\n"
    "            \"default_value\": null,\r\n"
    "          \"text\": {\r\n"
    "          \"optional\": true,\r\n"
    "          },\r\n"
    "            \"type\": \"custom\"\r\n"
    "            \"custom\": \"Hawker's ID (Case sensitive: 'a' and 'A' differ.)\",\r\n"
    "          \"label\": {\r\n"
    "          \"key\": \"hawkersid\",\r\n"
    "        {\r\n"
    "        },\r\n"
    "          \"type\": \"numeric\"\r\n"
    "          \"optional\": false,\r\n"
    "          },\r\n"
    "            \"value\": \"29\"\r\n"
    "            \"minimum_length\": null,\r\n"
    "            \"maximum_length\": 3,\r\n"
    "            \"default_value\": null,\r\n"
    "          \"numeric\": {\r\n"
    "          },\r\n"
    "            \"type\": \"custom\"\r\n"
    "            \"custom\": \"Your True Age in Years\",\r\n"
    "          \"label\": {\r\n"
    "          \"key\": \"age\",\r\n"
    "        {\r\n"
    "      \"custom_fields\": [\r\n"
    "      \"currency_conversion\": null,\r\n"
    "      \"currency\": \"usd\",\r\n"
    "      \"created\": 1736792941,\r\n"
    "      },\r\n"
    "        \"terms_of_service\": \"none\"\r\n"
    "        \"promotions\": \"none\",\r\n"
    "        \"payment_method_reuse_agreement\": null,\r\n"
    "      \"consent_collection\": {\r\n"
    "      \"consent\": null,\r\n"
    "      \"client_secret\": null,\r\n"
    "      \"client_reference_id\": null,\r\n"
    "      \"cancel_url\": \"https://stripe.com\",\r\n"
    "      \"billing_address_collection\": \"auto\",\r\n"
    "      },\r\n"
    "        \"status\": null\r\n"
    "        \"liability\": null,\r\n"
    "        \"enabled\": false,\r\n"
    "      \"automatic_tax\": {\r\n"
    "      \"amount_total\": 100,\r\n"
    "      \"amount_subtotal\": 100,\r\n"
    "      \"allow_promotion_codes\": true,\r\n"
    "      \"after_expiration\": null,\r\n"
    "      \"adaptive_pricing\": null,\r\n"
    "      \"object\": \"checkout.session\",\r\n"
    "      \"id\": \"cs_test_b1ylMJ3ho4xCRd8UY5J87F6zFRQXHSV7k0HNW4drhSBFxmQcYObMpvlAZk\",\r\n"
    "    \"object\": {\r\n"
    "  \"data\": {\r\n"
    "  \"created\": 1736792976,\r\n"
    "  \"api_version\": \"2023-10-16\",\r\n"
    "  \"object\": \"event\",\r\n"
    "  \"id\": \"evt_1QgsOKLzWCJsgIUVWOHctTbJ\",\r\n"
    "{\r\n"

osTextT postRaw1Part1[] = {

} ;

    "Host: webhooks.hidden.ideafarm.com\r\n"
    "Connection: close\r\n"
    "Stripe-Signature: t=1736809627,v1=b15a66f137ec949edca5d0abd4f3e750358eefa30ee6c5d119523f8caf81413e,v0=a43eaea4e1eb354ecc6b64a3620ffc75e3c57b49240fc0d7dfbb4be480c1cf7d\r\n"
    "Accept: */*; q=0.5, application/xml\r\n"
    "User-Agent: Stripe/1.0 (+https://stripe.com/docs/webhooks)\r\n"
    "Cache-Control: no-cache\r\n"
    "Content-Type: application/json; charset=utf-8\r\n"
    "POST /nobot/notify/stripe.20240206@1123 HTTP/1.1\r\n"

osTextT postHead[] = {

/*1*/WAKEhIDE( "ifcIDaDAM_GORILLAwEBHOOKS" )/*1*/
/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2025 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
