
//
// Copyright (c) 1992-2025 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    }
        //traceF( tin0P , T("diskMapFileNameHoverF / mapped to  [psttP]:    ")+T(psttP) ) ; //U::
        }
            }
                delF( tin0P , psttw3 ) ;
                delF( tin0P , psttw1 ) ;

                strFuseF( tin0P , psttP , T(psttw1)+TF3(idCopy,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED|flFORMAT_FILLzE|flFORMAT_FOREIGN,8)+T(psttw3) ) ; ___( psttP ) ;

                strSubstringF( tin0P , psttw3 , idf , idl , psttRawP ) ; ___( psttw3 ) ;
                idl = idlPart3 ;
                idf = idfPart3 ;
                strSubstringF( tin0P , psttw1 , idf , idl , psttRawP ) ; ___( psttw1 ) ;
                ZE( strokeS* , psttw3 ) ;
                ZE( strokeS* , psttw1 ) ;
                //sttq = ze ;
                countT idl = idlPart1 ;
                idf = 1 ;
            {
            if( !POOP )

            __Z( idCopy ) ;
            }
                else __1
                }
                    //traceF( tin0P , T("diskMapFileNameHoverF / called  ifcIdCopyF [cName,idCopy]:    ")+TF2(cName,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED)+T("    ")+TF2(idCopy,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED) ) ; //U::
                    idCopy = ifcIdCopyF( tin0P , cName , cTriesP ) ;
                    //traceF( tin0P , T("diskMapFileNameHoverF / calling ifcIdCopyF [cName]:    ")+TF2(cName,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED) ) ; //U::
                {
                if( cName )

                delF( tin0P , psttn ) ;
                countT cName = strDigitsToSCountF( tin0P , psttn , 0 , 1 ) ;
                strSubstringF( tin0P , psttn , idf , idl , psttRawP ) ; ___( psttn ) ;
                ZE( strokeS* , psttn ) ;
                countT idl = idf + 7 ;
            {
            ZE( countT , idCopy ) ;

            const countT idlPart3 = idfPart3 + 8 ;
            const countT idfPart3 = idf + 8 ;
            const countT idlPart1 = idf - 1 ;
            //A:ASSUME: FILE NAME IS OF THIS FORM (EXAMPLE): ideafarm.51000fff.ipdos-wm
        {                                                  //123456789abcdef0123456789a
        else                                               //0              1
        if( !idh ) { strMakeF( tin0P , LF , psttP , psttRawP ) ; ___( psttP ) ; }
        countT idh = strIdF( tin0P , countTC( 1 ) , 0 , flSTRmATCH_null , idf , sttq , T("/hover/ideafarm.") , psttRawP ) ;     // idf -> 01000020.ipdos-wm
        countT idf = 1 ;
        strokeS sttq( (countT)0 , sc_IGNOREqUOTES ) ;
        //traceF( tin0P , T("diskMapFileNameHoverF / mapping [psttRawP]:    ")+T(psttRawP) ) ; //U::
    {
    _IO_

    }
        if( POOP ) return ;
        __( psttRawP->idCaste != sc_PREFIXlENGTH ) ;
        if( POOP ) return ;
        __Z( psttRawP ) ;
        __NZ( psttP ) ;
        if( POOP ) return ;
    {
    IFbEcAREFUL
    SCOOP
{
/*1*/voidT etherC::diskMapFileNameHoverF( tin0S& tin0P , strokeS*& psttP , const strokeS* const psttRawP , const countT cTriesP )/*1*/

/**/
*/
\<A HREF=\"5.103014b.1.0.html\"\>definition\</A\>
\<A HREF=\"6.$diskMapFileNameHoverF.0.html\"\>instances\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2025 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

