
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


REST
etThread.osProcessIdPhaseAdamF( tinBaseP , ifcIDpHASEhANDOFFoLD_SHUTTINGdOWN ) ;

}
    }
        etThread = 0 ;

        }
            else                    { ZE( countT , tnu ) ; etThread.osThreadF( tinBaseP , tnu , tmServeTimeF , 0 , 0  , flTHREADlAUNCH_null , 0 , 0 , (countT)pso ) ; }
            if( ether || etThread ) { DEL( pso ) ; }
            socket.acceptF( tinBaseP , pso , idPortPeer , nnPeer , countTC() ) ; ___( pso ) ;
            ZE( countT , idPortPeer ) ;
            nicNameC nnPeer ;
            ZE( socketC* , pso ) ;
        {
        while( !ether && !etThread )
        etThread.etherCryF( tinBaseP ) ;

        socket.listenF( tinBaseP ) ;
        countT idPort = socket.bindF( tinBaseP , ifcPORToLD1tIMEaUTHORITY ) ;
        socketC socket( tinBaseP , etThread , TAG( TAGiDnULL ) ) ;
    {
    while( !ether && !etThread )

    etThread.strokeF( tinBaseP , T("IdeaFarm " "(tm) City Time Authority\r\ni state the city reference time on request\r\n") ) ;
{
else
}
    etThread.strokeF( tinBaseP , T("Another ")+textIdFileC( tinBaseP , DDNAME )+T(" appears to be alive on this computer.  Only one is allowed.") ) ;
    etThread = 0  ;
{
if( etThread )
U:: USE napkinC OBJECT TO TEST FOR ALONENESS
batonC baton( tinBaseP , TAG( TAGiDnULL ) , T("3e30104") ) ;

TODO

DONE( tmServeTimeF )

}
    DEL( pso ) ;
    pso->readF( tinBaseP , &bnu , 1 , flSOCKETcrEAD_STILLhUNGRYiSoK ) ;
    ZE( byteT , bnu ) ;
    pso->writeF( tinBaseP , (byteT*)pc2 , sizeof pc2 ) ;
    countT pc2[] = { time1 , time2 } ;
    etThread.osTimeNowF( tinBaseP , time1 , time2 , 1 ) ;
    ZE( sCountT , time2 ) ;
    ZE( countT , time1 ) ;
    pso->etherF( tinBaseP , etThread ) ;
{
if( pso )
__Z( pso ) ;
socketC* pso = pTaskP ? (socketC*)pTaskP->c1 : 0 ;

TASK( tmServeTimeF )

/*1*/WAKEhIDE( "city.time.authority" )/*1*/
/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

