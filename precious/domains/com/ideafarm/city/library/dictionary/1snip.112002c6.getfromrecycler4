
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


    }
        ___BITS( pObjectP , 0x1235 , idLineP , idiFileP , pbBitsP ) ;                                                                                                                                                                                              \
                                                                                                                                                                                                                                                                   \
        }                                                                                                                                                                                                                                                          \
            pObjectP = classP::newRecyclableIF( tinBaseP , recycleLever1P , recycleLever2P , recycleLever3P , recycleLever4P ) ;                                                                                                                                       \
            /*LOGrAWtID( "GETfROMrECYCLER4: NEW" ) ;                                                                                                                                                                                                                */ \
        {                                                                                                                                                                                                                                                          \
        if( !pObjectP )                                                                                                                                                                                                                                            \
                                                                                                                                                                                                                                                                   \
        }                                                                                                                                                                                                                                                          \
            ((tin9S&)tinBaseP).pag1->_etherC_.pSwsRecycle->ungrabF( tinBaseP ) ;                                                                                                                                                                                                                         \
            if( *((tin9S&)tinBaseP).pag1->_etherC_.pSwsRecycle ) *((tin9S&)tinBaseP).pag1->_etherC_.pSwsRecycle >> *(countT*)&pObjectP ;                                                                                                                                                                                               \
            ((tin9S&)tinBaseP).pag1->_etherC_.pczl_pSwsRecycle = c6Lever ;                                                                                                                                                                                                                           \
            ((tin9S&)tinBaseP).pag1->_etherC_.pSwsRecycle->grabF( tinBaseP , TAG( TAGiDnULL ) ) ;                                                                                                                                                                                                        \
            /*LOGrAWtID( "GETfROMrECYCLER4: using process recycler" ) ;                                                                                                                                                                                             */ \
        {                                                                                                                                                                                                                                                          \
        else                                                                                                                                                                                                                                                       \
        }                                                                                                                                                                                                                                                          \
            if( *((tin9S&)tinBaseP).pSwsRecycle ) *((tin9S&)tinBaseP).pSwsRecycle >> *(countT*)&pObjectP ;                                                                                                                                                                                     \
            ((tin9S&)tinBaseP).pczl_pSwsRecycle = c6Lever ;                                                                                                                                                                                                                      \
            /*LOGrAWtID( "GETfROMrECYCLER4: using thread recycler" ) ;                                                                                                                                                                                              */ \
        {                                                                                                                                                                                                                                                          \
        if( bOwn && ((tin9S&)tinBaseP).pSwsRecycle )                                                                                                                                                                                                                             \
                                                                                                                                                                                                                                                                   \
        if( bOwn && !((tin9S&)tinBaseP).pSwsRecycle ) { ((tin9S&)tinBaseP).pSwsRecycle = new( 0 , tinBaseP , LF ) switchStackC( tinBaseP , *((tin9S&)tinBaseP).pag1->_etherC_.pEtRock , TAG( TAGiDnULL ) , flSTACKc_DOnOTsERIALIZE , ((tin9S&)tinBaseP).pczl_pSwsRecycle , flSTACKc_DOnOTsERIALIZE | flSTACKc_XRAY ) ; ___( ((tin9S&)tinBaseP).pSwsRecycle ) ; }  \
        boolT bOwn = F(((tin9S&)tinBaseP).flagsThreadMode3) & flTHREADmODE3_MYoWNrECYCLER ;                                                                                                                                                                                      \
                                                                                                                                                                                                                                                                   \
        if( !c6Lever.c2 ) c6Lever.c2 = - 1 ;                                                                                                                                                                                                                       \
        if( !c6Lever.c3 ) c6Lever.c3 = - 1 ;                                                                                                                                                                                                                       \
        if( !c6Lever.c4 ) c6Lever.c4 = - 1 ;                                                                                                                                                                                                                       \
        count6S c6Lever( ifcIDtYPErECYCLE_##classP , recycleLever1P , recycleLever2P , recycleLever3P , recycleLever4P ) ;                                                                                                                                         \
                                                                                                                                                                                                                                                                   \
        _IO_                                                                                                                                                                                                                                                       \
                                                                                                                                                                                                                                                                   \
        }                                                                                                                                                                                                                                                          \
            if( POOP ) return ;                                                                                                                                                                                                                                    \
            __NZ( pObjectP ) ;                                                                                                                                                                                                                                     \
            if( POOP ) return ;                                                                                                                                                                                                                                    \
        {                                                                                                                                                                                                                                                          \
        IFbEcAREFUL                                                                                                                                                                                                                                                \
        SCOOP                                                                                                                                                                                                                                                      \
    {                                                                                                                                                                                                                                                              \
    voidT etherC::operator ()( tin0S& tinBaseP , classP*& pObjectP , const countT idLineP , const countT idiFileP , const byteT* const pbBitsP , const countT recycleLever1P , const countT recycleLever2P , const countT recycleLever3P , const countT recycleLever4P ) \
                                                                                                                                                                                                                                                                   \
#define GETfROMrECYCLER4(classP)                                                                                                                                                                                                                                   \

/*1*//*GETfROMrECYCLER4*//*1*/

/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

