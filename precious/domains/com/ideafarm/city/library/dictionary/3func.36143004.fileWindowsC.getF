
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    }
        if( off04WantP == - 1 ) off04NextDefault += cbWindow ;

        cbP = cbWindow ;
        pbP = *pfw ;

        fileWindowC* pfw = new( 0 , tinBaseP , pbfw , sizeof pbfw ) fileWindowC( tinBaseP , ether , fi , off04Use , cbWindow , flagsCt ) ;

        }
            }
                __( idImpotence ) ;
                }
                    }
                        ether.traceF( tinBaseP , T("could not destroy a fileWindowC instance") ) ;
                        POOPR
                        idImpotence = POOP ;
                    {
                    if( POOP )
                    DELzOMBIE( pfw ) ;
                    SCOOPS
                {
                IFsCRATCH
                ZE( countT , idImpotence ) ;
            {
            else
            if( &ether != ((tin9S&)tinBaseP).pEtScratch ) { DELzOMBIE( pfw ) ; }
            fileWindowC* pfw = (fileWindowC*)pbfw ;
        {
        if( getNegAM( *(countT*)pbfw ) != FINGERnEG_fileWindowsC )

        // THIS IS BECAUSE IT WOULD BE BAD FORM FOR AN APPLICATION TO CALL getF MULTIPLE TIMES FOR THE SAME BYTES, SO IS NOT LIKELY
        // FOR SIMPLICITY, I ALWAYS REPLACE THE fileWindowC INSTANCE, EVEN THOUGH THE INSTANCE MIGHT CONTAIN THE REQUESTED RANGE OF BYTES

        ;
                : (countT)( cb04File - off04Use )
                ? cbWantP
            : cbWantP < cb04File - off04Use
            ? cbWantP
        countT cbWindow = F(flagsCt) & flFILEwINDOW_WRITE
    {
    if( off04Use < cb04File || F(flagsCt) & flFILEwINDOW_WRITE )

    ;
        : off04NextDefault
        ? off04WantP
    count04T off04Use = off04WantP != - 1

    if( !cbWantP ) cbWantP = CBfILEwINDOWdEFAULT ;

    }
        if( POOP ) return ;
        __( cbP ) ;
        __( pbP ) ;
        if( POOP ) return ;
    {
    IFbEcAREFUL
{
/*1*/voidT fileWindowsC::getF( tin0S& tinBaseP , byteT*& pbP , countT& cbP , countT cbWantP , const count04T off04WantP )/*1*/

/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

