
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//

}
    idgWightP = jotWightIdg.writeF( tin0P , (byteT*)&wightIdg , sizeof wightIdg , 0 , 0 , flJOTcwRITE_null , 0 ) ;

    jotC jotWightIdg( tin0P , tPathOs + T("wight.idg") , flJOTc_WRITE , 0 , TICK ) ;

    wightIdgC wightIdg( idjKey1 ) ;

    }
        if( cbjKey1 > sizeof( countT ) ) *(countT*)pbjKey1 = idjKey2 & ~NM_HIGH ;
        countT cbjKey1 =                       page1 ;
        byteT* pbjKey1 = (byteT*)(const byteT*)page1 ;
        pageC  page1   = jotWightKeys.readF( tin0P , idjKey1 ) ;
    {

    }
        delF( tin0P , pbjKey2 ) ;
        idjKey2 = jotWightKeys.writeF( tin0P , pbjKey2 , cbjKey2 , 0 , 0 , flJOTcwRITE_null , 0 ) ;
        }
            delF( tin0P , pbPrivateKey2 ) ;
            memCopyF( tin0P , pbjKey2 + sizeof( countT ) , pbPrivateKey2 , cbPrivateKey2 ) ;
            *(countT*)pbjKey2 = 0 ;
        {
        if( pbjKey2 )
        newF( tin0P , LF , pbjKey2 , cbjKey2 ) ; ___( pbjKey2 ) ;
        countT cbjKey2 = sizeof( countT ) + cbPrivateKey2 ;
        ZE( byteT* , pbjKey2 ) ;
    {
    ZE( countT , idjKey2 ) ;

    }
        delF( tin0P , pbjKey1 ) ;
        idjKey1 = jotWightKeys.writeF( tin0P , pbjKey1 , cbjKey1 , 0 , 0 , flJOTcwRITE_null , 0 ) ;
        }
            delF( tin0P , pbPrivateKey1 ) ;
            memCopyF( tin0P , pbjKey1 + sizeof( countT ) , pbPrivateKey1 , cbPrivateKey1 ) ;
            *(countT*)pbjKey1 = 0 ;
        {
        if( pbjKey1 )
        newF( tin0P , LF , pbjKey1 , cbjKey1 ) ; ___( pbjKey1 ) ;
        countT cbjKey1 = sizeof( countT ) + cbPrivateKey1 ;
        ZE( byteT* , pbjKey1 ) ;
    {
    ZE( countT , idjKey1 ) ;

    jotC jotWightKeys( tin0P , tPathOs + T("wight.keys") , flJOTc_WRITE , 0 , TICK ) ;

    TN( tPathOs , "" ) ; tPathOs = T( osFileNameC( tin0P , *this , ifcPATHgLOBALdATABASEhOMESaNDwIGHTS ) ) ;

    }
        THREADmODE4rESTORE
        }
            hushGetPrivateKeyF( tin0P , pbPrivateKey2 , cbPrivateKey2 , hKeyPair2         ) ;
            hushGetPublicKeyF(  tin0P , pbPublicKey2P , cbPublicKey2P , hKeyPair2         ) ;
            hushMakeKeyPairF(   tin0P                                 , hKeyPair2 , 0x400 ) ;
            handleC hKeyPair2(  tin0P , TAG( TAGiDnULL ) , ifcIDtYPEhANDLE_OPENSSLkEYpAIR ) ;
        {
        }
            hushGetPrivateKeyF( tin0P , pbPrivateKey1 , cbPrivateKey1 , hKeyPair1         ) ;
            hushGetPublicKeyF(  tin0P , pbPublicKey1P , cbPublicKey1P , hKeyPair1         ) ;
            hushMakeKeyPairF(   tin0P                                 , hKeyPair1 , 0x400 ) ;
            handleC hKeyPair1(  tin0P , TAG( TAGiDnULL ) , ifcIDtYPEhANDLE_OPENSSLkEYpAIR ) ;
        {
        THREADmODE4oN( flTHREADmODE4_ARMoPENsSL )
    {
    ZE( countT , cbPrivateKey2 ) ;
    ZE( byteT* , pbPrivateKey2 ) ;
    ZE( countT , cbPrivateKey1 ) ;
    ZE( byteT* , pbPrivateKey1 ) ;
{
/*1*/voidT etherC::ifcCreateNewWightF( tin0S& tin0P , countT& idgWightP , byteT*& pbPublicKey1P , countT& cbPublicKey1P , byteT*& pbPublicKey2P , countT& cbPublicKey2P )/*1*/

/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
