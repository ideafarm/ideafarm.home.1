
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


REST

}
    etThread.delF( tinBaseP , pbr ) ;
    spk.shiftRightF( tinBaseP , pbr , cbr , ifcIDtYPEsOULiTEM_byteTptr ) ; ___( pbr ) ;
    ZE( countT , cbr ) ;
    ZE( byteT* , pbr ) ;

    etThread.delF( tinBaseP , postFoo ) ;
    etThread.delF( tinBaseP , psttFoo ) ;
    etThread.strMakeF( tinBaseP , LF , postFoo , psttFoo ) ; ___( postFoo ) ;
    ZE( osTextT* , postFoo ) ;

    spk >> psttFoo ;
    ZE( strokeS* , psttFoo ) ;

    spk >> cFoo ;
    cFoo = 0 ;
    spk >> cFoo ;
    cFoo = 0 ;
    spk >> cFoo ;
    cFoo = 0 ;
    spk >> cFoo ;
    ZE( countT , cFoo ) ;

    etThread.boxGetShadowF( tinBaseP , spkv , T("///d/ideafarm.key") ) ;
    soulC spkv( tinBaseP , TAG( TAGiDnULL ) ) ;
{
//TEST THE KEY FILE

etThread.boxPutF( tinBaseP , T("///d/ideafarm.key") , spk ) ;

}
    etThread.delF( tinBaseP , pbRandom ) ;

    spk.shiftLeftF( tinBaseP , ifcIDtYPEsOULiTEM_byteTptr , pbRandom , TOCK ) ;

    }
        }
            if( br ) pbRandom[ off ++ ] = br ;

            byteT br = (byteT)cr ;
            countT cr = mr ;
            measure04T mr = ru ;
        {
        while( off < TOCK )
        countT off = 0 ;
        ranUniC ru( TUCK , idDisk ) ;
    {

    etThread.newF( tinBaseP , LF , pbRandom , TOCK ) ; ___( pbRandom ) ;
    ZE( byteT* , pbRandom ) ;
{

etThread.delF( tinBaseP , psttName ) ;
spk << psttName ;
etThread.strMakeF( tinBaseP , LF , psttName , T("Neal Basu") ) ; ___( psttName ) ;
ZE( strokeS* , psttName ) ;

spk << idDisk ;
spk << (countT)0x83c95e47 ; // VALIDATION VALUE CHANGE THIS QUARTERLY TO KILL OLD KEY DISKS
spk << (countT)1 ; // idFormat
spk << (countT)DDNUMB ;
soulC spk( tinBaseP , TAG( TAGiDnULL ) ) ; // "PHYSICAL KEY"

etThread.strokeF( tinBaseP , T("serial number: ")+TF2(idDisk,flFORMAT_NObIGITvALUES)+T("\r\n") ) ;
countT idDisk = etThread.diskIdF( tinBaseP , T("///d/") ) ;

TODO

/*1*/WAKEsHOW( "tool.physical.key.file.maker" )/*1*/
/**/
*/
creates a physical key file that can be burned onto a cdrom that is currently in the cdrom drive and is already formatted
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

