
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    }
        }
            break ;
            }
                ((tinFullS&)tinBaseP).pEther->delF( tinBaseP , psttw ) ;
                }
                    slP << *(strokeS**)&(countT&)*this ;
                    slP >> psttLever ;
                    psttLever = 0 ;
                    strokeS*& psttLever = *(strokeS**)pbLever ;                    
                {
                else if( !((tinFullS&)tinBaseP).pEther->strCompareF( tinBaseP , psttw , T("map") ) )
                }
                    slP >> psttw ;
                    third.delF( tinBaseP , psttw ) ;
                    strokeS*& psttw = *(strokeS**)&(countT&)*this ;
                    slP >> psttLever ;
                    psttLever = 0 ;
                    strokeS*& psttLever = *(strokeS**)pbLever ;                    
                {
                else if( !((tinFullS&)tinBaseP).pEther->strCompareF( tinBaseP , psttw , T("set") ) )
                }
                    else       { POPUPsOIXLoLD( T("The word \"")+T(psttw)+T("\" is unknown to switchC object \"")+T(postName)+T("\".") ) ; }
                    if( pApi ) (*pApi)( tinBaseP , *((tinFullS&)tinBaseP).pEther , slP , T(postName) ) ;
    
                    }
                        _pSwSoixlOldApi->ungrabF( tinBaseP ) ;
                        pApi = (ifcSoixlOldApiFT)(countT)*_pSwSoixlOldApi ;
                        _psttLeverSoixlOldApi = psttw ;
                        _pSwSoixlOldApi->grabF( tinBaseP , TAG( TAGiDnULL ) ) ;
                    {
                    ZE( ifcSoixlOldApiFT , pApi ) ;
                {
                else if( _pSwSoixlOldApi->idSlotOfLeverF( tinBaseP , (countT)psttw ) )
                }
                    ((tinFullS&)tinBaseP).pEther->delF( tinBaseP , psttQueryWord ) ;
                    }
                        POPUPsOIXLoLD( T("I, \"")+T(postName)+T("\", have placed \"")+tNameShort+T("\" onto your desk.  Read that document and then edit it to indicate what additional information you want.  Then drop it into the Depository to obtain the additional information.") ) ;
                        ((tinFullS&)tinBaseP).pEther->boxPutF( tinBaseP , tName , tBody , tBody.csF(  tinBaseP ) ) ;
                        TN( tName , "" ) ; tName = T("///desk/")+tNameShort ;
                        TN( tNameShort , "") ; tNameShort = T("soixlOld.help.")+T(postName)+T(".")+T(psttQueryWord)+T(".txt") ;
        
                        ((tinFullS&)tinBaseP).pEther->delF( tinBaseP , pstth ) ;
                        TN( tBody , "" ) ; tBody = T(pstth) ;
                        ((tinFullS&)tinBaseP).pEther->strReverseF( tinBaseP , pstth , T(psttzDoc) , T("\r\n") ) ; ___CT( pstth ) ;
                        ZE( strokeS* , pstth ) ;
                    {
                    else
                    if( !psttzDoc ) { POPUPsOIXLoLD( T("The word \"")+T(psttQueryWord)+T("\" is unknown to switchC object \"")+T(postName)+T("\".") ) ; }

                    }
                        }
                            _pSwSoixlOldApi->ungrabF( tinBaseP ) ;
                            psttzDoc = (strokeS*)(countT)*_pSwSoixlOldApiDoc ;
                            _psttLeverSoixlOldApi = psttQueryWord ;
                            _pSwSoixlOldApi->grabF( tinBaseP , TAG( TAGiDnULL ) ) ;
                        {
                    {
                    if( _pSwSoixlOldApiDoc && _pSwSoixlOldApiDoc->idSlotOfLeverF( tinBaseP , (countT)psttQueryWord ) )
                    ZE( strokeS* , psttzDoc ) ;

                    slP >> psttQueryWord ; ___CT( psttQueryWord ) ;
                    //U::TEST FOR EMPTY HERE
                    ZE( strokeS* , psttQueryWord ) ;

                    }
//U::                        if( _pSwSoixlOldApiDoc ) genSoixlOldWordHelpsF( tinBaseP ) ;
                        _pSwSoixlOldApiDoc = new( 0 , tinBaseP , LF ) switchC( tinBaseP , third , TAGoR( TAGiDnULL , idLineCt , idiFileCt , pbBitsCt ) , flSTACKc_null , _psttLeverSoixlOldApi ) ; ___CT( _pSwSoixlOldApiDoc ) ;
                    {
                    if( !_pSwSoixlOldApiDoc )
                {
                else if( !((tinFullS&)tinBaseP).pEther->strCompareF( tinBaseP , psttw , T("??") ) )
                }
                    POPUPsOIXLoLD( T("I, \"")+T(postName)+T("\", have placed \"")+tNameShort+T("\" onto your desk.  Read that document and then edit it to indicate what additional information you want.  Then drop it into the Depository to obtain the additional information.") ) ;
                    ((tinFullS&)tinBaseP).pEther->boxPutF( tinBaseP , tName , tBody , tBody.csF(  tinBaseP ) ) ;
                    TN( tName , "" ) ; tName = T("///desk/")+tNameShort ;
                    TN( tNameShort , "") ; tNameShort = T("soixlOld.help.")+T(postName)+T(".txt") ;
    
                    ((tinFullS&)tinBaseP).pEther->delF( tinBaseP , pstth ) ;
                    tBody = T(pstth) ;
                    ((tinFullS&)tinBaseP).pEther->strReverseF( tinBaseP , pstth , tBody , T("\r\n") ) ; ___CT( pstth ) ;
                    ZE( strokeS* , pstth ) ;
    
                    ) ;
    
                        "by dropping this document into the Depository.\r\n"
                        "You can obtain information about each of these command words\r\n"
                        "\r\n"
//U::                        #include "\ideafarm.home.1\precious\domains\com\ideafarm\city\library\snip\1snip.005001c.genSoixlOldWordMenus_switchC_1.h"
                        "    . off space\r\n"
                        "    . on space\r\n"
                        "\r\n"
                        "changes and drop this document into the depository:\r\n"
                        "and \"off\" lines so that the words of interest are bracketed.  Then save your\r\n"
                        "some or all of the following command words by editing this list to move the \"on\"\r\n"
                        "service and is waiting to be given tasks to do.  You can obtain information about\r\n"
                        "Object synopsis: The author of this document, \"")+T(postName)+T("\", is at your\r\n"
                        "\r\n"
                        "strings.\r\n"
                        "Class synopsis: Objects of the switchC class map strokeS strings to strokeS*\r\n"
                        "\r\n"
                        "Author: ")+T(postName)+T("\r\n"
                        "Class: switchC")+T("\r\n"
                        "\r\n"
                        "IdeaFarm " "(tm) SOIL (tm) - Sentient Object Interface Language\r\n"
                        USCORE79 "\r\n"
                        ". off space\r\n"
                        ". ")+T(postName)+T(" . switchC . n space\r\n"
                        POSTpROLOG "\r\n"
    
                    tBody = T(
                    TN( tBody , "" ) ;
                {
                if( !((tinFullS&)tinBaseP).pEther->strCompareF( tinBaseP , psttw , T("?") ) )
                slP >> psttw ; ___CT( psttw ) ;
                //U::TEST FOR EMPTY HERE
                ZE( strokeS* , psttw ) ;
            {
            if( _pSwSoixlOldApi )

            }
//U::                if( _pSwSoixlOldApi ) genSoixlOldWordLoadsF( tinBaseP ) ;
                _pSwSoixlOldApi = new( 0 , tinBaseP , LF ) switchC( tinBaseP , third , TAGoR( TAGiDnULL , idLineCt , idiFileCt , pbBitsCt ) , flSTACKc_null , _psttLeverSoixlOldApi ) ; ___CT( _pSwSoixlOldApi ) ;
            {
            if( !_pSwSoixlOldApi )
        {
        case ifcIDcMDbASE_CMDdEFAULT :
        }
            break ;
            slP.flags = save ;
            slP << (baseSoilXxxxC*)this ;
            slP.flags &= ~( F(flSOUL_LIVE) ) ;
            flagsT save = slP.flags ;
        {
        case ifcIDcMDbASE_REFERENCE :
        }
            break ;
        {
        case ifcIDcMDbASE_TOCK :
        }
            break ;
        {
        case ifcIDcMDbASE_TICK :
        }
            break ;
            slP << (strokeS*)T(postName) ;
        {
        case ifcIDcMDbASE_INSTANCEnAME :
        }
            break ;
            slP << (strokeS*)T(((tinFullS&)tinBaseP).pag1->_switchC_.postOldClassName) ;
        {
        case ifcIDcMDbASE_CLASSnAME :
    {
    switch( idCmdBase )
    slP >> idCmdBase ;
    ZE( countT , idCmdBase ) ;

    }
        if( pMeI != (baseSoilXxxxC*)this ) { BLAMMO ; }
        slP >> pMeI ;
        ZE( baseSoilXxxxC* , pMeI ) ;
    {
    SCOOP
{
/*1*/voidT switchC::operator ()( tinBaseS& tinBaseP , soulC& slP )/*1*/

/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

