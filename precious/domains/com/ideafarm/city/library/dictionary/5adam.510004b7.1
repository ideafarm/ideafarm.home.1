
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


REST

}
    while( cGorillas ) { ++ s ; etThread.osSleepF( tinBaseP , TUCK * 0x40 ) ; }
    sleepC s( tinBaseP , TAG( TAGiDnULL ) ) ;
{

}
    etThread.osThreadF( tinBaseP , countTC() , tmGorillaF , 0 , 0  , flTHREADlAUNCH_null , 0 , 0 , (countT)&cGorillas , (countT)&cLever , (countT)&b_cLever , (countT)&swsg ) ;
    cGorillas ++ ;
{
while( cTries -- )
countT cTries = 0x10 ;

switchStackC swsg( tinBaseP , etThread , TAG( TAGiDnULL ) , flSTACKc_null , cLever ) ;
batonC b_cLever( tinBaseP , TAG( TAGiDnULL ) ) ;
ZE( countT , cLever ) ;
ZE( countT , cGorillas ) ;

TODO

DONE( tmGorillaF )
}                           
    cGorillas -- ;
    }
        }
            b_cLever.ungrabF( tinBaseP ) ;
            }
                serial ++ ;
                }
                    if( !swsg ) swsg.freeF( tinBaseP ) ;
                    }
                        swsg.extractF( 0 , tinBaseP ) ;
                        CONoUT( postPull )
                    {
                    if( swsg( jj ) )
                {
                for( countT jj = 0x10000 ; jj <= 0x40000 ; jj += 0x10000 )
            {
            else
            }
                }
                    __Z( ids ) ;
                    swsg.sinkF( tinBaseP , ids , jj , flSTACKsINK_UNIQUE ) ;
                    ZE( countT , ids ) ;
                    CONoUT( postPush )
                {
                for( countT jj = 0x10000 ; jj <= 0x40000 ; jj += 0x10000 )
            {
            if( !swsg )
            cLever = serial ;
            b_cLever.grabF( tinBaseP , TAG( TAGiDnULL ) ) ;
        {
        for( countT ii = 1 ; ii <= 0x1 ; ii ++ )

        //}
        //    ++ s ; etThread.osSleepF( tinBaseP ) ;
        //    sleepC s( tinBaseP , TAG( TAGiDnULL ) ) ;
        //{
        //U::WITHOUT THIS SLEEP, ONLY WO GORILLA EVER TRACES TO CONSOLE
    {
    while( !etThread && !ether && !swsg.third )
    const osTextT postPull[] = { 'a' + ((tin9S&)tinBaseP).monitor.idThread % 26 , 0 } ;
    const osTextT postPush[] = { 'A' + ((tin9S&)tinBaseP).monitor.idThread % 26 , 0 } ;
    countT serial = ((tin9S&)tinBaseP).monitor.idThread * TICK ;

    }
        ++ s ; ether.osSleepF( tinBaseP , TOCK ) ;
        sleepC s( tinBaseP , TAG( TAGiDnULL ) ) ;
    {

    switchStackC& swsg      = *(switchStackC*)pTaskP->c4 ;
    batonC&       b_cLever  =       *(batonC*)pTaskP->c3 ;
    countT&       cLever    =       *(countT*)pTaskP->c2 ;
    countT&       cGorillas =       *(countT*)pTaskP->c1 ;
{
if( pTaskP && pTaskP->c1 && pTaskP->c2 && pTaskP->c3 && pTaskP->c4 )
TASK( tmGorillaF )

/*1*/WAKEhIDE( "gorilla.switchStackC" )/*1*/
/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

