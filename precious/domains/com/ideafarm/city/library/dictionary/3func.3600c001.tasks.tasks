
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    _IO_
{
c02( c02P )
cf1( cf1P ) ,
ce1( ce1P ) ,
cd1( cd1P ) ,
cc1( cc1P ) ,
cb1( cb1P ) ,
ca1( ca1P ) ,
c91( c91P ) ,
c81( c81P ) ,
c71( c71P ) ,
c61( c61P ) ,
c51( c51P ) ,
c41( c41P ) ,
c31( c31P ) ,
c21( c21P ) ,
c11( c11P ) ,
c01( c01P ) ,
cf(  cfP  ) ,
ce(  ceP  ) ,
cd(  cdP  ) ,
cc(  ccP  ) ,
cb(  cbP  ) ,
ca(  caP  ) ,
c9(  c9P  ) ,
c8(  c8P  ) ,
c7(  c7P  ) ,
c6(  c6P  ) ,
c5(  c5P  ) ,
c4(  c4P  ) ,
c3(  c3P  ) ,
c2(  c2P  ) ,
c1(  c1P  ) ,
flagsThreadMode2Dad( tinP.flagsThreadMode2 ) ,
flagsThreadMode1Dad( tinP.monitor.flagsThreadMode1 ) ,
pTinDad( F(flagsP) & flTHREADlAUNCH_ORPHAN ? 0 : &tinP ) ,                                                                                                                                                                           
flags( flagsP ) ,                                                                                                                                                                                                                    
cbTlsInPool( cbTlsInPoolP ) ,
pbTlsInPool( pbTlsInPoolP ) ,
pSgnDone( pSgnDoneP ) ,                                                                                                                                                                                                              
tmF( tmFP ) ,                                                                                                                                                                                                                        
third( thirdC::thPrimeIF( tinP ) ) ,                                                                                                                                                                                                 
idThread( 1 + incv02AM( processGlobal2I._taskS_idThreadLath ) ) ,                                                                                                                                                                    
/*1*/taskS::taskS( tinS& tinP , voidT* const tmFP , signC* pSgnDoneP , byteT* const pbTlsInPoolP , const countT cbTlsInPoolP , const flagsT flagsP , countT c1P , countT c2P , countT c3P , countT c4P , countT c5P , countT c6P , countT c7P , countT c8P , countT c9P , countT caP , countT cbP , countT ccP , countT cdP , countT ceP , countT cfP , countT c01P , countT c11P , countT c21P , countT c31P , countT c41P , countT c51P , countT c61P , countT c71P , countT c81P , countT c91P , countT ca1P , countT cb1P , countT cc1P , countT cd1P , countT ce1P , countT cf1P , countT c02P )/*1*/ :

/**/
*/
 c01P
 cfP
 ceP
 cdP
 ccP
 cbP
 caP
 c9P
 c8P
 c7P
 c6P
 c5P
 c4P
 c3P
 c2P
 c1P
 flagsP
 pSgnDoneP
 tmFP
  this implies that a thread cannot end until all of its kid threads have ended
  tinP must exist until the kid thread has ended
  a reference to this will be visible to the kid thread
  must be not 0
 tinP
arguments
 they can be ze
 normally, these are values specified during the launch of a "thread" (task)
c1P ... c8P: arbitrary values
 can be ze
pSgnDoneP: a sign that should be given when this object is destroyed
it is illegal to refer to this symbol in the definition of an adam
\<A HREF=\"5.10e0001.1.0.html\"\>definition\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

