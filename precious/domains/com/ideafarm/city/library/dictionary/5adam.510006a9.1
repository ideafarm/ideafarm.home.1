
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


REST

etherC::loafIF( tin0P ) ;
etThread.traceF( tin0P , T("ok") ) ;

etThread.diskWalkF( tin0P , cDirs , cFiles , tPath , bQuit , diskWalkRenameCBF , pcArg ) ;
ZE( countT , bQuit ) ;
ZE( countT , cFiles ) ;
ZE( countT , cDirs ) ;
TN( tPath , "///a/ideafarm.home.101/IdeaFarm (tm)/2.1. Drop Files Here To Archive Them/" ) ;

countT pcArg[] = { (countT)&cDone , (countT)&tIdeafarm6Dot , (countT)&tDots , (countT)&tDot } ;

TN( tDot , "." ) ;
;
    +S2(sa_SSSaNDeND,sc_ccSSS)
        +T(".")
        +S3(1,sc_ccSSSrEPEAT,-1)
    +S2(sa_SSSaND,sc_ccSSS)
    T("")
TN( tDots , "" ) ; tDots =
TN( tIdeafarm6Dot , "!ideafarm.6." ) ;
ZE( countT        , cDone ) ;

TODO

}
    return 0 ;

    ((tin123S&)tin0P).pEther->delF( tin0P , psttShort ) ;
    ((tin123S&)tin0P).pEther->delF( tin0P , psttPath ) ;

    }
        ((tin123S&)tin0P).pEther->diskMoveFileOrDirF( tin0P , T(psttPath)+T(psttShort) , tNameOld , 1 ) ;
        etherC::etRockIF( tin0P ).traceF( tin0P , (strokeS*)tNameOld ) ;
    {
    if( bHit )
    boolT bHit = ((tin123S&)tin0P).pEther->strReplaceF( tin0P , psttShort , 0 , tDotsP , tDotP ) ; ___( psttShort ) ;

    ___( psttShort ) ;
    ___( psttPath ) ;
    ((tin123S&)tin0P).pEther->strBisectF( tin0P , psttPath , psttShort , tNameOld , 0 , - 1 , flSTRbISECT_APPENDdELIMITER ) ;
    ZE( strokeS* , psttShort ) ;
    ZE( strokeS* , psttPath ) ;

    TN( tNameOld , ifFileNameC( tin0P , *((tin123S&)tin0P).pEther , postNameP ) ) ;

    if( !( cDoneP % TUCK ) ) etherC::etRockIF( tin0P ).traceF( tin0P , T("[cDoneP]: ")+TF2(cDoneP,flFORMAT_UNSIGNED|flFORMAT_NObIGITvALUES) ) ;
    cDoneP ++ ;

    textC&        tDotP          =         *(textC*)pcArgP[ 3 ] ;
    textC&        tDotsP         =         *(textC*)pcArgP[ 2 ] ;
    textC&        tIdeafarm6DotP =         *(textC*)pcArgP[ 1 ] ;
    countT&       cDoneP         =        *(countT*)pcArgP[ 0 ] ; 
{
boolT diskWalkRenameCBF( tin0S& tin0P , countT& cDirsP , countT& cFilesP , boolT& bQuitP , const osTextT* const postNameP , countT* const pcArgP , const countT* const pModuloDirsP , const countT* const pModuloFilesP )

/*1*/WAKEsHOWtEXT( "tool.rename.archive.format.6.nix.redundant.dots" )/*1*/
/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

