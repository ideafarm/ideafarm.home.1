
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


DONE( tmTimeNowF )
//((tinNormalS&)tinBaseP).pc Utility[ 0 ] -- ; //U::TO FIND A BUG

}
    TELL( "tmTimeNowF: cleaning up" )
    
    //}
    //    ++ s ; etThread.osSleepF( tinBaseP , TOCK * 2 ) ;
    //    sleepC s( tinBaseP , TAG( TAGiDnULL ) ) ;
    //{
    //TELL( "U::sleeping to avoid deadlock trying to grab the buoyTinC ahead of me at the anchor" )
    //THIS IS A KLUGE.  IF THERE IS A DEADLOCK, LETS DEBUG IT
    
    }
        }
            ++ s ; etThread.osSleepF( tinBaseP , TOCK ) ;
            sleepC s( tinBaseP , TAG( TAGiDnULL ) ) ;
        {
        TELL( "sleeping for a tock" )
        etThread.osTimeNowF( tinBaseP , ((tinNormalS&)tinBaseP).pag1->_thirdC_.timeNow.time1 , ((tinNormalS&)tinBaseP).pag1->_thirdC_.timeNow.time2 ) ;
        ((tinNormalS&)tinBaseP).pag1->_thirdC_.timeNow.time2 = ((tinNormalS&)tinBaseP).pag1->_thirdC_.timeNow.time1 = 0 ;
        TELL( "working" )
    {
    while( !ether && !etThread )
    //CONJ: idThread MUST BE ENFORCED BECAUSE THE LOW THREADS ARE MONITORED AND THE idThread VALUES ARE USED TO INDEX INTO AN ARRAY
    __( ((tinNormalS&)tinBaseP).monitor.idThread - ifcIDtHREADlOW_tmTimeNowF ) ; //COMMENT THIS OUT WHEN USING etherWhereF EARLY IN adamMainF
{
if( !( cInstancesI ++ ) )
static countT cInstancesI ;
TELL( "setting up" )
//((tinNormalS&)tinBaseP).pc Utility[ 0 ] ++ ; //U::TO FIND A BUG

/*1*/TASK( tmTimeNowF )/*1*/
/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

