
//
// Copyright (c) 1992-2025 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


REST

etherC::loafIF( tin0P ) ;
etThread.traceF( tin0P , T("ok") ) ;

etRock.traceF( tin0P , T("[mac]:    ")+tMac ) ;
}
    etThread.delF( tin0P , psttMac ) ;
    tMac = T(psttMac) ;
    etThread.openSslHmacF( tin0P , psttMac , tSecret , tSecret.csF( tin0P ) , postRaw , costRaw ) ; ___( psttMac ) ;
    ZE( strokeS* , psttMac ) ;

    countT costRaw = postc - postRaw ;

    thirdC::c_strcpyIF( tin0P , postc , posti ) ; postc += costi     ;
    costi = tNote.csF( tin0P ) ;
    posti = tNote ;

    thirdC::c_strcpyIF( tin0P , postc , posti ) ; postc += costi + 1 ;
    costi = tPass.csF( tin0P ) ;
    posti = tPass ;

    thirdC::c_strcpyIF( tin0P , postc , posti ) ; postc += costi + 1 ;
    costi = tName.csF( tin0P ) ;
    posti = tName ;

    thirdC::c_strcpyIF( tin0P , postc , posti ) ; postc += costi + 1 ;
    countT   costi = tNonce.csF( tin0P ) ;
    osTextT* posti = tNonce ;

    osTextT* postc = postRaw ;
    thirdC::c_memsetIF( tin0P , postRaw , sizeof postRaw , 0 ) ;
    osTextT postRaw[ TUCK ] ;
    _IO_
{
TN( tMac , "" ) ;

TN( tNote   , "admin" ) ;
TN( tPass   , "d" ) ;
TN( tName   , "c" ) ;
TN( tNonce  , "b" ) ;
TN( tSecret , "a" ) ;

TODO

/*1*/WAKEsHOWtEXT( "scratch" )/*1*/
/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2025 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
