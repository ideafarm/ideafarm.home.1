
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


;
}

 FRIENDS_backOldC

    /**/

 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34010.backOldC.selectPaperF!||
 paperOldC& selectPaperF( tinBaseS& tinBaseP , const countT idCmdP , countT idPaperP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3400f.backOldC.wrapRenderOverrideF!||
 voidT wrapRenderOverrideF( tinBaseS& tinBaseP , const strokeS* const psttP , const handleC* const phCloneP , const countT* pczIdAdamSnapP , const flagsT flagsModeOnP , const flagsT flagsModeOffP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3400e.backOldC.wrapRenderF!||
 countT wrapRenderF( tinBaseS& tinBaseP , const strokeS* const psttP , const handleC* const phCloneP , const countT* pczIdAdamSnapP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34011.backOldC.filterKeepNormalKeysF!||
 voidT filterKeepNormalKeysF( tinBaseS& tinBaseP , const countT idAdamP , const boolT bFilterP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3400a.backOldC.filterGrabMouseF!||
 voidT filterGrabMouseF( tinBaseS& tinBaseP , const countT idAdamP , const boolT bFilterP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34009.backOldC.bToolFilterAllowsF!||
 boolT bToolFilterAllowsF( tinBaseS& tinBaseP , const countT idToolP , const countT idActionP , const countT idAdamP , const countT idListP = 0 ) ;
 virtual voidT renderF( tinBaseS& tinBaseP , pulpOldC& pulpP , const strokeS* const psttP , const handleC* const phCloneP ) = 0 ;
 virtual voidT backScratchBitmapPopF( tinBaseS& tinBaseP , pulpOldC& pulpP , const boolT bAllP = 0 ) = 0 ;
 virtual voidT backScratchBitmapMonochromePushF( tinBaseS& tinBaseP , pulpOldC& pulpP , const countT cColsP , const countT cRowsP ) = 0 ;
 virtual voidT backScratchBitmapPushF( tinBaseS& tinBaseP , pulpOldC& pulpP , const countT cColsP , const countT cRowsP ) = 0 ;
 virtual voidT backDrawOnNullDeviceF( tinBaseS& tinBaseP , pulpOldC& pulpP ) = 0 ;
 virtual voidT backDrawOnScratchDeviceF( tinBaseS& tinBaseP , pulpOldC& pulpP ) = 0 ;
 virtual voidT backDrawOnNormalDeviceF( tinBaseS& tinBaseP , pulpOldC& pulpP ) = 0 ;
 virtual voidT popPaperDrawOverrideF( tinBaseS& tinBaseP , pulpOldC& pulpP , const flagsT flagsP ) = 0 ;
 virtual voidT pushPaperDrawOverrideF( tinBaseS& tinBaseP , pulpOldC& pulpP , const countT idPaperP , const flagsT flagsP ) = 0 ;
 virtual voidT backNotifyBeforeSadamF( tinBaseS& tinBaseP , pulpOldC& pulpP , const strokeS& sttP , const flagsT flagsP ) = 0 ;
 virtual boolT   backSuppressRefreshF( tinBaseS& tinBaseP , const paperOldC& paperP ) = 0 ;
 virtual voidT backSadamHighlightF( tinBaseS& tinBaseP , pulpOldC& pulpP , paperOldC& paperP , const countT rgbP , measureT mColFromP , measureT mRowFromP , measureT mColToP , measureT mRowToP , const measureT mShrinkP , const countT cSidesP ) = 0 ;
 virtual voidT backResetF( tinBaseS& tinBaseP , pulpOldC& pulpP ) = 0 ;
 //virtual voidT b ackFlushAsyncF( tinBaseS& tinBaseP , const measureT mIdColMinP = 1.0f , const measureT mIdRowMinP = 1.0f , const measureT mIdColMaxP = 0.0f , const measureT mIdRowMaxP = 0.0f ) = 0 ;
 virtual voidT backFlushF( tinBaseS& tinBaseP , pulpOldC& pulpP , const measureT mIdColP = 0 , const measureT mIdRowP = 0 , const measureT mColsP = 0 , const measureT mRowsP = 0 ) = 0 ;
 virtual voidT backPositionF( tinBaseS& tinBaseP , pulpOldC& pulpP , const measureT mIdColP , const measureT mIdRowP ) = 0 ;
 virtual voidT backOldCtPaperF( tinBaseS& tinBaseP , pulpOldC& pulpP , paperOldC& paperP ) = 0 ;
 virtual voidT backDtPaperF( tinBaseS& tinBaseP , pulpOldC& pulpP ) = 0 ;
 virtual countT backIdTypeF( voidT ) const = 0 ;
 virtual boolT backAbsentF( voidT ) const = 0 ;

 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34016.backOldC.resetToolMousePositionFlagsF!||
 voidT resetToolMousePositionFlagsF( tinBaseS& tinBaseP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34015.backOldC.resetAllF!||
 voidT resetAllF( tinBaseS& tinBaseP ) ;

 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34014.backOldC.setToolFlagsF!||
 voidT setToolFlagsF( tinBaseS& tinBaseP , const countT idToolP , const flagsT flagsOnP , const flagsT flagsOffP = flTOOL_null ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3400d.backOldC.setModeFlagsF!||
 voidT setModeFlagsF( tinBaseS& tinBaseP , const flagsT flagsOnP , const flagsT flagsOffP = flPAPERbACKmODE_null ) ;

 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34012.backOldC.setModeFlagsIF!||
 static voidT setModeFlagsIF( tinBaseS& tinBaseP , const flagsT flagsOnP , const flagsT flagsOffP = flPAPERbACKmODE_null ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34008.backOldC.freshToolsMouseButtonsNotPresentF!||
 voidT freshToolsMouseButtonsNotPresentF( tinBaseS& tinBaseP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34006.backOldC.freshToolsMousePositionF!||
 voidT freshToolsMousePositionF( tinBaseS& tinBaseP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34005.backOldC.freshToolsAllFlagOnDownF!||
 voidT freshToolsAllFlagOnDownF( tinBaseS& tinBaseP ) ;

 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34013.backOldC.mColsRowsF!||
 voidT mColsRowsF( tinBaseS& tinBaseP , const measureT mColsP , const measureT mRowsP ) ;

 inline measureT mRowsF( voidT ) const { return mRows ; }
 inline measureT mColsF( voidT ) const { return mCols ; }
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34003.backOldC.strokeAllPapersF!||
 voidT strokeAllPapersF( tinBaseS& tinBaseP , const strokeS* const psttP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34004.backOldC.freshJoyIfIF!||
 static voidT freshJoyIfIF( tinBaseS& tinBaseP , etherC& etherP ) ;
 inline voidT backPopOriginF( voidT ) { if( stqr_mIdColOriginUnder ) { mIdRowOrigin = mIdColOrigin = 0.0f ; stqr_mIdColOriginUnder >> mIdColOrigin ; stqr_mIdRowOriginUnder >> mIdRowOrigin ; } }
 }
     }
         }
             mIdRowOrigin = *(measureT*)&stqr_mIdRowOriginUnder[ idP ] ;
             mIdColOrigin = *(measureT*)&stqr_mIdColOriginUnder[ idP ] ;
         {
         if( idP > 1 )
         stqr_mIdRowOriginUnder << mIdRowOrigin ;
         stqr_mIdColOriginUnder << mIdColOrigin ;
     {
     if( idP && idP <= 1 + stqr_mIdColOriginUnder )
 {
 inline voidT backDupOriginF( const countT idP )
 inline voidT backPushOriginF( const measureT mIdColP , const measureT mIdRowP ) { stqr_mIdColOriginUnder << mIdColOrigin ; stqr_mIdRowOriginUnder << mIdRowOrigin ; mIdColOrigin = mIdColP ; mIdRowOrigin = mIdRowP ; }

 rowPaperBackU rowBack ;
 boolT   bDebug ;
 countT  cTraceOn ;

 public :

 switchStackC   swsSadamToolFilter ; //PLATES MUST BE sinkF'D SO THAT THE MOST GENERAL WILL BE APPLIED WOTH, THE MOST SPECIFIC, LATH; NEVER PURGED UNTIL I AM DESTROYED; IT IS LEGAL (OK) FOR APPS TO EXPLOIT THIS
 const byteT*   pbLeverToolFilter ;
 count2S        c2leverToolFilter ;

 private :

 measureT      mIdRowOrigin ;
 measureT      mIdColOrigin ;
 staqC         stqPelsBack ; //CAN BE MIGRATED TO A DYNAMICALLY ALLOCATED POINTER IF DEFINE A DERIVED CLASS THAT DOES NOT NEED THIS MEMBER
 measureT      mRows ;
 measureT      mCols ;
 measureT      pmRowsLathRender[ 0x10 ] ; //U::ALLOCATE DYNAMICALLY TO papers.cPapers ELEMENTS
 measureT      pmColsLathRender[ 0x10 ] ; //U::ALLOCATE DYNAMICALLY TO papers.cPapers ELEMENTS

 papersOldC       papers ;

 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3400c.backOldC.popPaperDrawOverrideProtectedF!||
 voidT popPaperDrawOverrideProtectedF( tinBaseS& tinBaseP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3400b.backOldC.pushPaperDrawOverrideProtectedF!||
 voidT pushPaperDrawOverrideProtectedF( tinBaseS& tinBaseP , const countT idPaperP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34007.backOldC.dtPrefixF!||
 voidT dtPrefixF( tinBaseS& tinBaseP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34002.backOldC.ctSuffixF!||
 voidT ctSuffixF( tinBaseS& tinBaseP , const countT cArgP , paperToBackCBFT pPaperToBackCBFP , countT cPaperToBackArgP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34004.backOldC.backOldC!||
 backOldC( tinBaseS& tinBaseP , etherC& etherP , const countT cPapersP = 2 , const measureT mColsP = 0.0 , const measureT mRowsP = 0.0 , const countT cArgP = 0 , paperToBackCBFT pPaperToBackCBFP = 0 , countT cPaperToBackArgP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34002.backOldC.dt_backOldC!||
 virtual ~backOldC( voidT ) ;

 const poopC&  poop ;
 etherC&       ether ;

 protected :

 staqC         stqr_mIdRowOriginUnder ;
 staqC         stqr_mIdColOriginUnder ;
{
/*1*/class _export backOldC/*1*/

/**/

*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

