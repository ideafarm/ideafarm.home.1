
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//

}
    return idjSoil ;
    //((tin123S&)tin0P).pEther->traceF( tin0P , T("writeToNameF [idjSoil]:    ")+TF2(idjSoil,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED) ) ;

    }
        if( idjToWrite ) idjSoil = writeF( tin0P , pb1P , cb1P , pb2P , cb2P , idjToWrite , flagsP , pcWroteP , time1P , time2P ) & ~NM_HIGH ;

        }
            }
                *(countT*)&jfnr.idjNext = idjNew ;
                if( pagec != sizeof( jotFileNameC ) ) { BLAMMO ; }
                const jotFileNameC& jfnr = *(jotFileNameC*)(const byteT*)pagec ;
                pageC pagec = readF( tin0P , countTC() , countTC() , idjnToWalkSave , flJOTfILEScrEAD_FROMcANcHANGE ) ;
            {
            if( idjNew )

            }
                idjnToWalk = 0 ;
                idjNew       = writeF( tin0P , (byteT*)&jfn , sizeof jfn , 0    , 0    , 0 , flJOTfILEScwRITE_TOcANcHANGE                             ) & ~NM_HIGH ;
                jotFileNameC jfn( idjnv , idjSoil ) ;
                countT idjnv = writeF( tin0P , pbNameP      , cbNameP    , 0    , 0    , 0                                                            ) & ~NM_HIGH ;
                idjSoil      = writeF( tin0P , pb1P         , cb1P       , pb2P , cb2P , 0 , flJOTfILEScwRITE_ALLoRsOME   , pcWroteP , time1P , time2P ) & ~NM_HIGH ;
                //CS:CODEsYNC: PSEUDOdUPLICATE CODE 36153004 36153004
            {
            else
            if( idjNext ) idjnToWalk = idjNext ;

            }
                }
                    break ;
                    idjnToWalk = 0 ;
                    idjToWrite = idjSoil ;
                {
                if( cbName == cbNameP && !thirdC::c_memcmpIF( tin0P , pbName , pbNameP , cbName ) )                  // IF THE NAME MATCHES THEN SET idjToWrite AND QUIT WALKING

                const byteT* pbName = (const byteT*)pagev ;
                countT       cbName =               pagev ;

                pageC pagev = readF( tin0P , countTC() , countTC() , idjNameValue ) ;
            {
            ZE( countT , idjNew ) ;

            }
                idjNameValue = jfnr.idjNameValue ;
                idjSoil      = jfnr.idjSoil      ;
                idjNext      = jfnr.idjNext      ;
                if( pagec != sizeof( jotFileNameC ) ) { BLAMMO ; }
                const jotFileNameC& jfnr = *(jotFileNameC*)(const byteT*)pagec ;
                pageC pagec = readF( tin0P , countTC() , countTC() , idjnToWalk , flJOTfILEScrEAD_FROMcANcHANGE ) ;
            {
            ZE( countT , idjNext      ) ;
            ZE( countT , idjNameValue ) ;
            countT idjnToWalkSave = idjnToWalk ;
        {
        while( idjnToWalk )                                                                                     // THERE IS A NAME LISTED SO INSPECT IT
        ZE( countT , idjToWrite ) ;

        }
            }
                else              idjnInArray = idjnToArray ;
                if( idjnInArray ) { BLAMMOiD( idjnInArray ) ; }
                countT& idjnInArray = pcHashArray[ hash01 ] ;
            {
            if( idjnToArray )

            }
                idjnToArray  = writeF( tin0P , (byteT*)&jfn , sizeof jfn , 0    , 0    , 0 , flJOTfILEScwRITE_TOcANcHANGE                             ) & ~NM_HIGH ;
                jotFileNameC jfn( idjnv , idjSoil ) ;
                countT idjnv = writeF( tin0P , pbNameP      , cbNameP    , 0    , 0    , 0                                                            ) & ~NM_HIGH ;
                idjSoil      = writeF( tin0P , pb1P         , cb1P       , pb2P , cb2P , 0 , flJOTfILEScwRITE_ALLoRsOME   , pcWroteP , time1P , time2P ) & ~NM_HIGH ;
                //CS:CODEsYNC: PSEUDOdUPLICATE CODE 36153004 36153004
            {
            if( !idjnToWalk )                                                                                                // HASH SLOT IS EMPTY SO WRITE THE DATA, CREATE THE NAME, AND WRITE THE NAME
            ZE( countT , idjnToArray ) ;

            }
                if( idjnInArray ) idjnToWalk = idjnInArray ;
                countT& idjnInArray = pcHashArray[ hash01 ] ;
            {
        {
        ZE( countT , idjnToWalk ) ;
    {
    ZE( countT , idjSoil ) ;

    //((tin123S&)tin0P).pEther->traceF( tin0P , T("writeToNameF [hash01]:    ")+TF2(hash01,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED) ) ;
    count01T hash01 = (count01T)hash02 ;
    countT   hash02 = hashF( pbNameP , cbNameP , 0 ) ;

    if( !cbNameP ) cbNameP = 1 + thirdC::c_strlenIF( tin0P , pbNameP ) ;
{
/*1*/countT jotFilesNamedC::writeToNameF( tin0S& tin0P , byteT* pbNameP , countT cbNameP , const byteT* const pb1P , countT cb1P , const byteT* const pb2P , countT cb2P , const flagsT flagsP , countT* pcWroteP , countT time1P , sCountT time2P )/*1*/

/**/

*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
