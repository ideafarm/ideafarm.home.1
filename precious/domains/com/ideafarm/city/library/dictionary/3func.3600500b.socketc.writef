
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    dec02AM( cFunctionsPending ) ;
    }
    
        ((tin9S&)tinBaseP).pag3->_socketC_.grab.ungrabF( tinBaseP ) ;
        pOdometer->cbWrite += ((tin9S&)tinBaseP).odoSockCbWrite - _odoSockCbWriteOpen ;
        pOdometer->cbRead  += ((tin9S&)tinBaseP).odoSockCbRead  - _odoSockCbReadOpen  ;
        pOdometer = (sockOdometerS*)&(countT&)*((tin9S&)tinBaseP).pag3->_socketC_.pSwOdometer ;
        ((tin9S&)tinBaseP).pag3->_socketC_.nnLever = nnPeer ;
        ((tin9S&)tinBaseP).pag3->_socketC_.grab.grabF( tinBaseP , TAG( TAGiDnULL ) ) ;
    
        bWrite.ungrabF( tinBaseP ) ;
    
        if( idleTimeAllowedWrite ) FRESHtIMEaTOMIC( *pEther , timeLathWrite.time1 , timeLathWrite.time2 )
    
        THREADmODE2rESTORE

        }
            pEther->sockWriteF( tinBaseP , handle , pbP , cbP , F(flagsMode) & flSOCKETcmODE_CRYPTfOREIGNsSL ? ifcIDmODEsOCKETS_ENCRYPTED : ifcIDmODEsOCKETS_NOTeNCRYPTED ) ;
            //etherC::etRockIF( tinBaseP ).traceF( tinBaseP , T("flSOCKETc_CRYPTfOREIGNsSL is not set") ) ;
        {
        else
        }
            pEther->sockWriteF( tinBaseP , handle , pbP , cbP , F(flagsMode) & flSOCKETcmODE_CRYPTfOREIGNsSL ? ifcIDmODEsOCKETS_ENCRYPTED : ifcIDmODEsOCKETS_NOTeNCRYPTED ) ;
            armSslC armMe( tinBaseP , flagsOpenSslFails ) ;
            //etherC::etRockIF( tinBaseP ).traceF( tinBaseP , T("flSOCKETc_CRYPTfOREIGNsSL is     set") ) ;
        {
        if( F(flags) & flSOCKETc_CRYPTfOREIGNsSL ) 

        //}
        //else pEther->sockWriteF(     tinBaseP , handle      , pbP , cbP ) ;
        //    etherC::etRockIF( tinBaseP ).traceF( tinBaseP , T("flSOCKETc_CRYPTfOREIGNsSL is not set") ) ;
        //{
        //else
        //}
        //    pEther->openSslTls_writeF( tinBaseP , handle , pbP , cbP ) ;
        //    armSslC armMe( tinBaseP , flagsOpenSslFails ) ;
        //    etherC::etRockIF( tinBaseP ).traceF( tinBaseP , T("flSOCKETc_CRYPTfOREIGNsSL is     set") ) ;
        //{
        //if( F(flags) & flSOCKETc_CRYPTfOREIGNsSL ) 
        //U:: REMOVE THIS OLD CODE

        THREADmODE2oN( flTHREADmODE2_ALLOWsTOPwHILEgRABBING )
        bWrite.grabF( tinBaseP , TAG( TAGiDnULL ) ) ;
    
        const countT _odoSockCbWriteOpen = ((tin9S&)tinBaseP).odoSockCbWrite ;
        const countT _odoSockCbReadOpen  = ((tin9S&)tinBaseP).odoSockCbRead  ;
    
        _IO_
    
        }
            }
                return ;
                dec02AM( cFunctionsPending ) ;
            {
            if( *pEther )

            __Z( pbP ) ;

            }
                return ;
                dec02AM( cFunctionsPending ) ;
            {
            if( *pEther )
        {
        IFbEcAREFUL    
        SCOOPP
    {
    inc02AM( cFunctionsPending ) ;
{
/*1*/voidT socketC::writeF( tin0S& tinBaseP , const byteT* const pbP , const countT cbP )/*1*/

/**/
*/
  the terminating null (0) will -not- be written
  if 0 then pbP must be a null terminated string of bytes, which will be written
 cbP
  must not be 0
 pbP
arguments
writes specified bytes to the peer
  \<A HREF=\"5.a420104.1.1.0.html\"\>a420104:  WAKEsHOW( "example.simplest.func.107000c.socketC.writeF" )\</A\>
 simplest
examples
\<A HREF=\"5.107000c.1.0.html\"\>definition\</A\>
\<A HREF=\"6.$writeF.0.html\"\>instances\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

