
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


REST
}
    }
        }
            }
                }
                    else                                etThread.strokeF( tinBaseP , TF3(off+1,flFORMAT_UNSIGNED,3)+TF3(chb,flFORMAT_UNSIGNED,9)+TF3(pfa[off].cHeartBeats,flFORMAT_UNSIGNED,9)+T("\r\n") ) ;
                    if( chb == pfa[ off ].cHeartBeats ) break ;
                    etThread.osSleepF( tinBaseP , TOCK * 4 ) ;
                    pfa[ off ].bFire ++ ;
                    countT chb = pfa[ off ].cHeartBeats ;
                {
                while( !etThread )
                //POPUP( T("firing group ")+TF1(off+1) ) ; //U::
                etThread.strokeF( tinBaseP , T("firing group ")+TF1(off+1)+T("\r\n") ) ;
            {
            if( pfa[ off ].cHeartBeats )
        {
        for( countT off = 0 ; off < CfIREaLLrANKS - 1 ; off ++ )
        fireAllS* pfa = (fireAllS*)( pcn + 2 ) ;
    {
    //CODE SYNC: ec40104 f040104

    }
        etThread = 0 ;
        POPUP( "SERVICE IS IMPOTENT" ) ; //U::
    {
    if( etThread )
    
    }
        }
            etThread.delF( tinBaseP , psttDriverName ) ;
            ((thirdC&)etThread).osDriverUnregisterF( tinBaseP , T(psttDriverName) ) ;
            etThread.osDriverNameFromMasterF( tinBaseP , psttDriverName , DDNUMB ) ; ___( psttDriverName ) ;
            ZE( strokeS* , psttDriverName ) ;
        {
        if( !bKeep )
    
        }
            etThread.delF( tinBaseP , psttSetting ) ;
            bKeep = !!psttSetting ;
            etThread.boxGetShadow::20141115@1937::MIGRATE:TO:USE:SETTINGS.BIT.TREE::SettingF( tinBaseP , psttSetting , T("///d/ideafarm.")+TF1(etherC::ifc_idHomeI_IF())+T(".setting.keyValue.keep") ) ; ___( psttSetting ) ;
            ZE( strokeS* , psttSetting ) ;
        {
        ZE( boolT , bKeep ) ;
    {
    
    }
        bFirst = 0 ;
    
        else ether.osSleepF( tinBaseP , TOCK , TOCK ) ;
        }
            ether.osSleepF( tinBaseP , TOCK * 8 , TOCK ) ;
            }
                }
                    etThread.osMessageBoxF( tinBaseP , T(POSTcONCLUSION) ) ;
                    if( !bSockOk     ) etThread.osMessageBoxF( tinBaseP , T(POSTnEEDsOCKETS) ) ;
                    if( !bEnufMemory ) etThread.osMessageBoxF( tinBaseP , T(POSTnEEDmOREmEMORY) ) ;
                    bPopup = 0 ;
                {
                else if( bPopup )
                }
                    ether.osSleepF( tinBaseP , TOCK * 0x10 , TOCK ) ; // PLENTY OF TIME FOR THE LAUNCHED PROCESS TO GET STARTED
                    bPopup = 1 ;
                    if( bPopup == 0 ) etThread.osMessageBoxF( tinBaseP , T(POSTnOWlAUNCHED) ) ;
                    etThread.osProcessF( tinBaseP , countTC() , countTC() , ifcIDaDAM_2GLASS2 , T("!quitAtShutdown !ignoreFireByOperator !poolOldRootNoClientRights") ) ;
                    OStEXTAK( napHomeJot  , "driver: hiring cell monitor" ) ;
                {
                if( bEnufMemory && bSockOk && bEnableLaunch )
                
                }
                    if( bEnableLaunch && !bSockOk ) bEnableLaunch = 0 ; //THIS IS NEEDED SO THAT I REMAIN DISABLED BETWEEN THE TIME THAT NETWORKING IS INSTALLED AND THE SUBSEQUENT REBOOT (WINDOWS NT 4.0)
                    bSockOk = !*((tinNormalS&)tinBaseP).zEtScratch ;
                    socketC sTest( tinBaseP , *((tinNormalS&)tinBaseP).zEtScratch , TAG( TAGiDnULL ) ) ;
                {
                ZE( boolT , bSockOk ) ;
                
                }
                    bEnufMemory = 1 ; //U: THIS CONSERVATIVE TEST IS DISABLED SO CAN RUN ifc11 WITHOUT VIRTUAL MEMORY
                    //bEnufMemory = !poolOldTest.ecF( tinBaseP ) ;
                    //p oolC poolOldTest( tinBaseP , TAG( TAGiDnULL ) , "driver.testAlloc" , CBdROPmEANdEFAULT * 0x8 , 1 , flPOOLoLDc_IMPOTENCEeXPECTED , 1 ) ; // "* 8" IS ENOUGH TO RUN THE DRIVER/DRIVEN SUBSYSTEM (e040104,f040104,6a40104,1140104)
                {
                ZE( boolT , bEnufMemory ) ;
            {
            if( !ether )
            if( !bFirst ) ether.osSleepF( tinBaseP , TOCK * 8 , TOCK ) ; // GIVE MYSELF TIME TO BE FIRED (DURING SHUTDOWN, 314 MIGHT HAVE BEEN NOTIFIED BEFORE ME)
        {
        if( bFirst || !thirdC::ifcCellIsAliveIF( tinBaseP , ifcIDaDAM_2GLASS2 ) )
    {
    while( !ether && !etThread )
    boolT bFirst = 1 ;
    boolT bEnableLaunch = 1 ;
    boolT bPopup = 1 ;
    TN( tSignal , "ifcLayer1" ) ;

    etThread.osDriverRemoveOldF( tinBaseP , DDNUMB ) ;
    
    //etThread.osThreadSwitchingDesireF( tinBaseP , ifcTHREADpRIORITY_LAZIEST ) ; //U:
    OStEXTAK( napHomeJot  , "driver: watching" ) ;

    stateS state( tinBaseP , etThread ) ;

    OStEXTAK( napHomeJot  , "driver: inheriting state" ) ;
    }
        napHomeJot.formattingIsDoneF( tinBaseP ) ;
        if( !etThread ) *napHomeJot = 0 ;
    {
    if( !( F(napHomeJot.flagsSharedMemory) & flOPENsHAREDmEMORYrESULT_ALREADYeXISTED ) )
    __( !(byteT*)napHomeJot ) ;
    __( (countT)napHomeJot - CBnAPjOT ) ;
    napkinC napHomeJot( tinBaseP , LF , (byteT*)bits , "napHomeJot" , 0 , CBnAPjOT ) ; 
    bitsC bits( tinBaseP , CbITSlIFI , 0 , 1 ) ;
    thirdC::third_flagsModeProcess1I_IF() |= flMODEpROCESS1_NOsYNCHRONOUStELLS ;
    
    CTnAPfIREaLL
{
TODO

STATE0

    "The required resources are now available, so the IdeaFarm " "(tm) City driver is becoming fully operational."
                                                                                                                            \
#define POSTnOWlAUNCHED                                                                                                     \

    "  It will not need to be reinstalled."
    " and the IdeaFarm " "(tm) City driver should become fully operational."                                                   \
    "After you have made the requested changes, these diagnostic messages should no longer appear,"                         \
                                                                                                                            \
#define POSTcONCLUSION                                                                                                      \

    "  Please install networking."
    "  (An Internet Protocol test socket could not be constructed.)"                                                        \
    " networking does not appear to be installed."                                                                          \
    "The IdeaFarm " "(tm) City driver is installed and running ok, but it cannot become fully operational because"             \
                                                                                                                            \
#define POSTnEEDsOCKETS                                                                                                     \

    "  This will ensure adequate memory for IdeaFarm " "(tm) City applications."
    " System / Performance and increasing the Virtual Memory setting to about 600 MB."                                      \
    "  Please increase the amount of virtual memory available by opening Start / Settings / Control Panel /"                \
    " there is not enough memory."                                                                                          \
    "The IdeaFarm " "(tm) City driver is installed and running ok, but it cannot become fully operational because"             \
                                                                                                                            \
#define POSTnEEDmOREmEMORY                                                                                                  \

/*1*/WAKEhIDE( "city.driver" )/*1*/
/**/
*/
obsoleted by 2e40104
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

