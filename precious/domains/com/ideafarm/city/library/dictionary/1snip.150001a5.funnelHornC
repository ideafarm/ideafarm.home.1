
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//

;
}
    }
        }
            if( flags == 1 ) flags -- ;                     // RESET THE "NOT YET READ" FLAG
            //((tinNormalS&)tinP).pEther->traceF( tinP , T("readDoneF / resetting \"not yet read\" flag") ) ;
            countT& flags = ((countT*)pbP)[ - 1 ] ;
        {
        if( pbBuffer <= pbP + sizeof( countT ) && pbP <= pbBuffer + cbBuffer - cbItemNet )
        //TINSL
    {
    inline voidT readDoneF( const byteT* pbP )

    const byteT* readF( tinBaseS& tinP , const flagsT flagsP = flFUNNELhORNcrEAD_null ) ;
    countT writeF( tinBaseS& tinP , const byteT* pbP ) ;

    funnelHornC( tinBaseS& tinP , etherC& etherP , const boolT& bQuitP , countT cbItemP , countT cCapacityP ) ;
    ~funnelHornC( voidT ) ;
    NEWdELcLASSpROTOS

    public :

    byteT*        pbBuffer    ;
    const countT  cbBuffer    ;
    const countT  cCapacity   ;
    const countT  cbItemGross ;
    const countT  cbItemNet   ;
    countT        cRead       ;
    countT        cWriteEnd   ;
    countT        cWriteBegin ;
    const boolT&  bQuit       ;
    etherC&       ether       ;
{
/*1*/class _export funnelHornC/*1*/

/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
