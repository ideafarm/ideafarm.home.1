
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


REST

etThread.delF( tinBaseP , postm ) ;
etThread.boxPutF( tinBaseP , T("///d/tmp/tmp/list.map") , postm , costm ) ;
etThread.delF( tinBaseP , psttMap ) ;
countT costm = etThread.strMakeF( tinBaseP , LF , postm , psttMap ) ; ___( postm ) ;
ZE( osTextT* , postm ) ;

etThread.delF( tinBaseP , pstt1New ) ;
etThread.delF( tinBaseP , pstt1Old ) ;

}
    NEXTsTRING( psttcOld ) ;

    etThread.delF( tinBaseP , psttwNew ) ;
    etThread.delF( tinBaseP , psttwOld ) ;

    etThread.strFuseF( tinBaseP , psttMap , tcr ) ;
    etThread.strFuseF( tinBaseP , psttMap , psttwNew ) ;
    etThread.strFuseF( tinBaseP , psttMap , tComma ) ;
    etThread.strFuseF( tinBaseP , psttMap , psttwOld ) ;

    etThread.strSubstringF( tinBaseP , psttwNew , idfNew , sttq , sttDot , psttc2   ) ; ___( psttwNew ) ;
    etThread.strSubstringF( tinBaseP , psttwOld , idfOld , sttq , sttDot , psttcOld ) ; ___( psttwOld ) ;
    countT idfNew = 1 ;
    countT idfOld = 1 ;
    ZE( strokeS* , psttwNew ) ;
    ZE( strokeS* , psttwOld ) ;

    //etThread.strokeF( tinBaseP , T(psttcOld)+tb+T(psttc2)+tcr ) ;
{
FORsTRINGSiN2( pstt1New )

etThread.strMakeF( tinBaseP , LF , psttMap , 0 , cLinesOld * TUCK ) ; ___( psttMap ) ;
ZE( strokeS* , psttMap ) ;

}
    break ;
    psttcOld = psttc1 ;
{
FORsTRINGSiN1( pstt1Old )
ZE( strokeS* , psttcOld ) ;

etThread.delF( tinBaseP , postNew ) ;
etThread.delF( tinBaseP , postOld ) ;
countT cLinesNew = etThread.strWordsOldF( tinBaseP , pstt1New , T(postNew) , sttq , tDelimiters ) ; ___( pstt1New ) ;
countT cLinesOld = etThread.strWordsOldF( tinBaseP , pstt1Old , T(postOld) , sttq , tDelimiters ) ; ___( pstt1Old ) ;
ZE( strokeS* , pstt1New ) ;
ZE( strokeS* , pstt1Old ) ;

strokeS sttDot( '.' ) ;
TN( tComma , "," ) ;
TN( tb , " " ) ;
TN( tcr , "\r\n" ) ;
TN( tDelimiters , "\r\n" ) ;
strokeS sttq( 0 , sc_IGNOREqUOTES ) ;

etThread.boxGetShadowF( tinBaseP , postNew , costNew , T("///d/tmp/tmp/list.new") ) ; ___( postNew ) ;
etThread.boxGetShadowF( tinBaseP , postOld , costOld , T("///d/tmp/tmp/list.old") ) ; ___( postOld ) ;
ZE( countT   , costNew ) ;
ZE( countT   , costOld ) ;
ZE( osTextT* , postNew ) ;
ZE( osTextT* , postOld ) ;

TODO

/*1*/WAKEsHOWtEXT( "migrate.idifile.map.makelist" )/*1*/
/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

