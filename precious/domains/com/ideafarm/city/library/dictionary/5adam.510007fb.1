
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ipdos for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


REST

etherC::loafIF( tinP ) ;
etThread.traceF( tinP , T("ok") ) ;

THREADmODE5rESTORE
}
    }
        etThread.traceF( tinP , T("[modulo,winner]:    ")+TF3(modulo,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED|flFORMAT_FILLzE,8)+tb4+TF3(winner,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED|flFORMAT_FILLzE,8) ) ;            
        countT winner = etThread.hushWothNonceF( tinP , ether , modulo , random , TOCK , hKeyPair ) ;
    {
    for( countT modulo = 0 ; !ether && modulo <= TUCK ; modulo ++ )

    etThread.traceF( tinP , T("[random]:    ")+TF3(random,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED|flFORMAT_FILLzE,8) ) ;
    countT random = ruChallenge ;

    ranUniC ruChallenge( tinP , (measure04T)MAXcOUNTT + 1 , slab.trueRandom ) ;
    slabS& slab = slabS::slabIF() ;

    etThread.hushMakeKeyPairF( tinP , hKeyPair , 0x400 ) ;
    handleC hKeyPair(    tinP , TAG( TAGiDnULL ) , ifcIDtYPEhANDLE_OPENSSLkEYpAIR    ) ;
    TN( tb4 , "    " ) ;
{
THREADmODE5oN( flTHREADmODE5_ARMoPENsSL )

TODO


/*1*/WAKEsHOWtEXT( "example.simplest.3func.3600220d.etherC.hushWothNonceF" )/*1*/
/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ipdos for permitted uses.
//
