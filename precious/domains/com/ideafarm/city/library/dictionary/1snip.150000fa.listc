
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


;
}
    friend class recordC ;

    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34013.listC.countIF!||
    static countVSP countIF( tinBaseS& tinBaseP , handleC& hRecordP , const countT* pczFieldP , const flagsT flagsP = flLISToPEN_null ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3400e.listC.fieldIF!||
    static flagsT fieldIF( tinBaseS& tinBaseP , fieldEditParamOutC*& pOutP , handleC& hRecordP , const countT* pczFieldP , const fieldEditParamInC& inP , const countT idLineNewP , const countT idiFileNewP , const flagsT flagsP = flLISToPEN_null , const countT idGrabLayerP = ifcIDgRABlAYER_7BASEmISC1 ) ;

    /* FIELD MANIPULATION */

    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34026.listC.dictionaryRestoreOsTextIF!||
    static voidT dictionaryRestoreOsTextIF( tinBaseS& tinBaseP , countT* const pczNameP ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3400d.listC.dictionaryReplaceOsTextIF!||
    static voidT dictionaryReplaceOsTextIF( tinBaseS& tinBaseP , countT* const pczNameP ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3400c.listC.dictionaryForgetIdIF!||
    static voidT dictionaryForgetIdIF( tinBaseS& tinBaseP , const countT idP , const countT idGrabLayerP = ifcIDgRABlAYER_7BASEmISC1 ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3400b.listC.dictionaryForgetTextIF!||
    static voidT dictionaryForgetTextIF( tinBaseS& tinBaseP , const osTextT* const postP , const countT idGrabLayerP = ifcIDgRABlAYER_7BASEmISC1 ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3400a.listC.dictionaryQueryFromIdIF!||
    static blobVSP dictionaryQueryFromIdIF( tinBaseS& tinBaseP , const countT idP , const countT idGrabLayerP = ifcIDgRABlAYER_7BASEmISC1 ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34009.listC.dictionaryQueryFromTextIF!||
    static countT dictionaryQueryFromTextIF( tinBaseS& tinBaseP , const osTextT* const postP , const flagsT flagsP = flDICTIONARYqUERYfROMtEXT_null , const countT idGrabLayerP = ifcIDgRABlAYER_7BASEmISC1 ) ;

    /* DICTIONARY */

    inline listC& operator =( listC& listDadP ) { aptDad = (byteT*)&listDadP ; return *this ; }
    inline        operator countT&( voidT )       { return idName ; }
    inline        operator countT(  voidT ) const { return idName ; }
    inline countT dispenseNameF( voidT )  { return - 1 + decv02AM( idNameKidDefaultLath ) ; } // DISPENSES DOWNWARD SO THAT MOST RECENT WILL BE ENCOUNTERED WOTH WHEN WALKING
    inline boolT  isEmptyF( voidT ) const { return !aptKid ; }

    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.360e6026.listc.resetIndexBitsIF!||
    static flagsT resetIndexBitsIF( tinBaseS& tinBaseP , handleC& hListP , const flagsT flagsP = flLISTwALK_null , const countT idGrabLayerP = ifcIDgRABlAYER_7BASEmISC1 ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34025.listC.nameF!||
    countT nameF( tinBaseS& tinBaseP , countT*& pczNameP ) const ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34024.listC.nameF!||
    countT nameF( sCountT idP = 0 ) const ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3401e.listC.walkEnumerateIF!||
    static flagsT walkEnumerateIF( tinBaseS& tinBaseP , datumS*& pDatumP , const countT cNameP , const countT idGrabLayerP = ifcIDgRABlAYER_7BASEmISC1 ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3401d.listC.walkIndexIF!||
    static flagsT walkIndexIF( tinBaseS& tinBaseP , const countT cNameP , const countT* const valueP , const countT cNetP ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3401c.listC.walkIndexIF!||
    static flagsT walkIndexIF( tinBaseS& tinBaseP , const countT cNameP , const osTextT* const valueP , const countT cNetP ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3401b.listC.walkIndexIF!||
    static flagsT walkIndexIF( tinBaseS& tinBaseP , const countT cNameP , const countT valueP , const countT cNetP ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3401a.listC.unIndexIF!||
    static voidT unIndexIF( tinBaseS& tinBaseP , puseC& puseIndexP , handleC& hIKP , const countT idKeyP , const countT* const valueP , const countT cNetP , const listingC& recordP , const listingC& datumP , const flagsT flagsP = flUNiNDEXf_null ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34019.listC.unIndexIF!||
    static voidT unIndexIF( tinBaseS& tinBaseP , puseC& puseIndexP , handleC& hIKP , const countT idKeyP , const osTextT* const valueP , const countT cNetP , const listingC& recordP , const listingC& datumP , const flagsT flagsP = flUNiNDEXf_null ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34018.listC.unIndexIF!||
    static voidT unIndexIF( tinBaseS& tinBaseP , puseC& puseIndexP , handleC& hIKP , const countT idKeyP , const countT valueP , const countT cNetP , const listingC& recordP , const listingC& datumP , const flagsT flagsP = flUNiNDEXf_null ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34017.listC.indexIF!||
    static voidT indexIF( tinBaseS& tinBaseP , puseC& puseIndexP , handleC& hIndexP , const countT idKeyP , const countT* const valueP , const countT cNetP , const listingC& recordP , const listingC& datumP ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34016.listC.indexIF!||
    static voidT indexIF( tinBaseS& tinBaseP , puseC& puseIndexP , handleC& hIndexP , const countT idKeyP , const osTextT* const valueP , const countT cNetP , const listingC& recordP , const listingC& datumP ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34015.listC.indexIF!||
    static voidT indexIF( tinBaseS& tinBaseP , puseC& puseIndexP , handleC& hIndexP , const countT idKeyP , const countT valueP , const countT cNetP , const listingC& recordP , const listingC& datumP ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34022.listC.unIndexIF!||
    static flagsT unIndexIF( tinBaseS& tinBaseP , handleC& hListP , const flagsT flagsP = flLISTwALK_null , const countT idGrabLayerP = ifcIDgRABlAYER_7BASEmISC1 ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34021.listC.indexIF!||
    static flagsT indexIF( tinBaseS& tinBaseP , handleC& hListP , const flagsT flagsP = flLISTwALK_null , const countT idGrabLayerP = ifcIDgRABlAYER_7BASEmISC1 ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34020.listC.isIndexedIF!||
    static boolT isIndexedIF( tinBaseS& tinBaseP , const countT idGrabLayerP = ifcIDgRABlAYER_7BASEmISC1 ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34012.listC.chatterIF!||
    static flagsT chatterIF( tinBaseS& tinBaseP , countT* const pczNameP = 0 , flagsT flagsP = flLISTwALKcHATTER_null , countT cArgP = 0 , const countT idGrabLayerP = ifcIDgRABlAYER_7BASEmISC1 ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34011.listC.pourIF!||
    static flagsT pourIF( tinBaseS& tinBaseP , countT* const pczNameToP , countT* const pczNameFromP , const countT idGrabLayerP = ifcIDgRABlAYER_7BASEmISC1 ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34010.listC.lintIF!||
    static voidT lintIF( tinBaseS& tinBaseP , const countT idGrabLayerP = ifcIDgRABlAYER_7BASEmISC1 ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3401f.listC.deleteIF!||
    static flagsT deleteIF( tinBaseS& tinBaseP , handleC& hListFromP , const countT* const pczNameP , const flagsT flagsP = flLISTdELETE_null , const countT idGrabLayerP = ifcIDgRABlAYER_7BASEmISC1 ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3400f.listC.deleteIF!||
    static flagsT deleteIF( tinBaseS& tinBaseP , const countT* const pczNameP , const flagsT flagsP = flLISTdELETE_null , const countT idGrabLayerP = ifcIDgRABlAYER_7BASEmISC1 ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34007.listC.walkIF!||
    static flagsT walkIF( tinBaseS& tinBaseP , handleC& hListFromP , countT* const pczNameP = 0 , const flagsT flagsP = flLISToPEN_null , const countT idGrabLayerP = ifcIDgRABlAYER_7BASEmISC1 ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34006.listC.walkIF!||
    static flagsT walkIF( tinBaseS& tinBaseP , countT* const pczNameP , const flagsT flagsP = flLISToPEN_null , const countT idGrabLayerP = ifcIDgRABlAYER_7BASEmISC1 ) ;

    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34005.listC.openIF!||
    static flagsT openIF( tinBaseS& tinBaseP , handleC& hListP , handleC& hListFromP , const countT* const pczNameP , const flagsT flagsP = flLISToPEN_null , const countT idGrabLayerP = ifcIDgRABlAYER_7BASEmISC1 , listC** const ppPreallocatedListsP = 0 ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34004.listC.openIF!||
    static flagsT openIF( tinBaseS& tinBaseP , handleC& hListP , const countT* const pczNameP , const flagsT flagsP = flLISToPEN_null , const countT idGrabLayerP = ifcIDgRABlAYER_7BASEmISC1 ) ;

    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34003.listC.listC!||
    listC( tinBaseS& tinBaseP , const listC& listDadP , const countT idNameP , const flagsT flagsP = flLISTINGc_null ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34023.listC.listC!||
    listC( tinBaseS& tinBaseP , const countT idNameP , const flagsT flagsP = flLISTINGc_null ) ; // ILLEGAL TO CALL THIS EXCEPT BY poolC::face_poolC_S::face_poolC_S TO CONSTRUCT A SINGLE ROOT listC FOR EACH POOL
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34002.listC.dt_listC!||
    ~listC( voidT ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34001.listC.NEWdELcLASSb!||
    NEWdELcLASSpROTOS

    public :

    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34008.listC.walkF!||
    flagsT walkF( tinBaseS& tinBaseP , const countT idGrabLayerP = ifcIDgRABlAYER_7BASEmISC1 ) ;

    countT idNameKidDefaultLath ;
    aptC   aptKid ;
    timeS  timeLathModified ; //MUST BE IMMEDIATELY ABOVE idName TO PERMIT EFFICIENT SORTING (CURRENT CODE DOES NOT RELY UPON THIS BUT FUTURE CODE MIGHT)
    countT idName ;

    protected :
{
/*1*/class _export listC : public listingC/*1*/

// FOR EFFICIENT USE OF POOL, listC SHOULD BE SIZED A POWER OF 2

/**/
*/
  in particular, callback definitions are not allowed to access the dictionary
 application code is only allowed to access the dictionary on threads that are not currently grabbing any listingC instance
 all list names passed into member functions must be valid numeric names
 to avoid deadlocks, listC definitions do not use the dictionary to map readable list names into true (nuneric) list names
 the dictionary is only for application use
 code assumes this by casting pointers to classes derived from list to listC pointers
listC must be the wo'th base class of any class derived from it
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

