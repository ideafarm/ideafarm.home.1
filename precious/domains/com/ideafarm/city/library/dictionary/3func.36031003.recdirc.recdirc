
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    }
        ether.memCopyF( tinBaseP , pbBlob , pbBlobP , cbBlob ) ;
        ether.newF( tinBaseP , LF , pbBlob , cbBlob ) ; ___( pbBlob ) ;
    {
    if( cbBlob )
    if( pbBlobP ) cbBlob = cbBlobP ? cbBlobP : ether.strBodyLengthF( tinBaseP , pbBlobP ) ;

    if( psttNameP ) { ether.strMakeF( tinBaseP , LF , psttName , psttNameP ) ; ___( psttName ) ; }

    }
        if( ether ) return ;
        FV( flRECdIRc , flagsP ) ;
        __( cbBlobP && !pbBlobP ) ;
        if( ether ) return ;
    {
    IFbEcAREFUL
{
cbBlob( 0 )
pbBlob( 0 ) ,
psttName( 0 ) ,
flags( flagsP ) ,
nicName( nicNameP ) ,
idPort( idPortP ) ,
pbSoul( 0 ) ,
ether( etherP ) ,
/*1*/recDirC::recDirC( tin0S& tinBaseP , etherC& etherP , const countT idPortP , const nicNameC nicNameP , const flagsT flagsP , const strokeS* const psttNameP , const byteT* const pbBlobP , const countT cbBlobP )/*1*/ :

/**/
*/
\<A HREF=\"5.1470003.1.0.html\"\>definition\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

