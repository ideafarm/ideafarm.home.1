
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    }
        b_cLever.ungrabF( tinBaseP ) ;
        cLever = cLeverSave ;

        }
            }
                }
                    }
                        }
                            if( bFound ) obsoleteF( tinBaseP , cLever ) ;

                            }
                                while( !ether && ~handle ) ;
                                }
                                    }
                                        break ;
                                        bFound = 1 ;
                                    {
                                    if( cNameP == cUsed )
                                    countT cUsed = stUses.downF( tinBaseP , handle ) ;
                                {
                                do
                                handleC handle( tinBaseP , TAGoR( TAGiDnULL , idLineCt , idiFileCt , pbBitsCt ) , ifcIDtYPEhANDLE_STACKwALK ) ;
                            {
                            if( stUses )

                            stackC& stUses = *(stackC*)c3.c3 ;
                        {
                        else
                        if( !c3.c3 ) __1

                        countT& flags = c3.c1 ;
                        count3S& c3 = *(count3S*)(countT)swc3 ;
                    {
                    else
                    if( !swc3 ) __1
                    ZE( boolT , bFound ) ;

                    cLever = swc3.leverF( tinBaseP , idf ) ;
                {
                for( countT idf = 1 ; idf <= cFlavors ; idf ++ )
                countT cFlavors = swc3.cFlavorsF( tinBaseP ) ;

                flags |= flMASTERc_OBSOLETE ;
            {
            if( !( F(flags) & flMASTERc_OBSOLETE ) )

            countT&  flags = c3.c1 ;
            count3S& c3 = *(count3S*)(countT)swc3 ;
        {
        else
        if( !swc3 ) __1
        cLever = cNameP ;
        countT cLeverSave = cLever ;
        b_cLever.grabF( tinBaseP , TAGoR( TAGiDnULL , idLineCt , idiFileCt , pbBitsCt ) ) ;
    {
    else
    if( ((tin9S&)tinBaseP).pag1->_masterOldC_.pMePrime != this ) ((tin9S&)tinBaseP).pag1->_masterOldC_.pMePrime->obsoleteF( tinBaseP , cNameP ) ;

    }
        if( POOP ) return ;
        __Z( cNameP ) ;
        __( !((tin9S&)tinBaseP).pag1->_masterOldC_.pMePrime ) ;
        if( POOP ) return ;
    {
    IFbEcAREFUL
    upDnC upDn( tinBaseP , TAGoR( TAGiDnULL , idLineCt , idiFileCt , pbBitsCt ) , IDFILE , ether ) ;
    scoopC scoop( tinBaseP , LF , ether ) ;
{
/*1*/voidT masterOldC::obsoleteF( tin0S& tinBaseP , const countT cNameP )/*1*/

/**/
*/
this function restores the current lever value before returning
if cNameP is already marked as obsolete then nothing is done and impotence does not occur
marks all users of that name as obsolete
marks the name as obsolete
\<A HREF=\"5.149000a.1.0.html\"\>definition\</A\>
\<A HREF=\"6.$obsoleteF.0.html\"\>instances\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

