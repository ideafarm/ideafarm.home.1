
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    UNGRABtINaRGS( ifcIDtYPEtINaRGiNuSE_LIST )
    if( !POOP ) inc01AM( pHe->cRefPrivate2F() ) ;
    __( !listingC::bIsListingIF( tin0P , pHe ) ) ;
    listingC* pHe = &APT( listingC , aptData ) ;

    __Z( aptData ) ; //listingVSP MUST BE IN PUSE

    //CONoUTrAW( "\"\r\n" ) ;
    //CONoUTrAW( ((tin123S&)tin0P).pPoolUse->guts.postName ) ;
    //CONoUTrAW5( "datum_listingVSP_C: [&listingRefP,aptData]: " , &listingRefP , " " , aptData , "     pool: \"" ) ;

    aptData = (byteT*)&listingRefP ;
    puseC puseRecord( tin0P , *((tin123S&)tin0P).ta.retained.u.listWalk.walk.pPoolRecord ) ;
    //ENABLING THIS WOULD PREVENT CONSTRUCTION OF DATA OTHER THAN WITH fieldIF, I.E. IT WOULD FORCE APPLICATIONS TO USE THE RECORD MODEL: __( !((tin123S&)tin0P).ta.retained.u.listWalk.walk.pPoolRecord ) ;
    GRABtINaRGS( ifcIDtYPEtINaRGiNuSE_LIST )

    if( tin0P.idTypeTin - ifcIDtYPEtIN_123 ) { BLAMMOiD( 0x12121212 ) ; }
{
datumC( flagsiP , idTypeP , ifcIDtYPEmIXINdATUM_listingVSP , listingP )
/*1*/datum_listingVSP_C::datum_listingVSP_C( tin0S& tin0P , byteT& flagsiP , byteT& idTypeP , const listingC& listingRefP , const listingC& listingP ) :/*1*/

/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

