
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//

                            
REST

etherC::loafIF( tinBaseP ) ;

etThread.cioPutF( tinBaseP , bQuit , c8c , sGift ) ;
count8S c8c( 1 , 2 , 3 , 4 ) ;
ZE( boolT , bQuit ) ;

sGift << (strokeS*)tMsg ;
TN( tMsg , "how now brown cow" ) ;
soulC sGift( tinBaseP , TAG( TAGiDnULL ) ) ;

etThread.cioSetGetF( tinBaseP , cioGetF ) ;

TODO

}
    if( cArgP && idptOriginP && bQuitP ) ;
    }
        FIREmYSELF ;

        DEL( psPayloadP ) ; //OPTIONAL
        etherP.delF( tinBaseP , pczChannelP ) ; //OPTIONAL
        etherP.delF( tinBaseP , psttMsg ) ;

        etherP.strokeF( tinBaseP , T("cioGetF [channel,message]: ")+TF2(pczChannelP,flFORMAT_UNSIGNED|flFORMAT_NObIGITvALUES)+T(" \"")+T(psttMsg)+T("\"\r\n") ) ;

        *psPayloadP >> psttMsg ; ___( psttMsg ) ;
        ZE( strokeS* , psttMsg ) ;
    {
    if( idPayloadTypeP == ifcOLDiDtYPEgIFT_APPLICATION )

    //CONoUTrAW3( "cioGetF [idPayloadTypeP]: " , idPayloadTypeP , "\r\n" ) ;
{
voidT cioGetF( tinBaseS& tinBaseP , etherC& etherP , const boolT& bQuitP , const countT idPayloadTypeP , soulC*& psPayloadP , countT*& pczChannelP , countT& cArgP , const portTimeC& idptOriginP )

/*1*/WAKEsHOWtEXT( "example.simplest.func.10301db.etherC.cioPutF" )/*1*/
/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

