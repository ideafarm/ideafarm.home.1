
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    //if( tinP.pPoolUse != tinP.pag1->pPoolAdamTemp ) tinP.pc Utility[ 0 ] = (countT)tinP.pPoolUse ; //U:: NORMALLY COMMENTED OUT; CAN BE USED ALONG WITH CODE IN poolC::newF TO VERIFY THAT ADAM TEMP IS USED FOR TEMPORARY DROPS

    else                                         flagsMode |= flPUSEcmODE_DOnOTrESTOREtINwHENdIE ; //O: OPTIMIZATION: THIS LINE HAS NO EFFECT SINCE RESTORING tinP.pPoolUse FROM pPoolUseLag WILL NOT CHANGE ITS VALUE
    if( !( F(flagsMode) & flPUSEcmODE_HIDDEN ) ) tinP.pPoolUse = pPoolUse ;

    }
        }
            __1 ;
            __( idPoolP ) ;
        {
        default :
        case ifcIDpOOL_HOMEpERM     : { if( !tinP.pag1->pPoolHomePerm )                                                                                                                                              tinP.pag1->pPoolHomePerm = new( 0 , tinP , tinP.pag1->pbzphp , sizeof tinP.pag1->pbzphp ) poolC( tinP , TAG( TAGiDnULL ) , "home.perm"      , CBsEXdROPsEPARATOR , flPOOLc_null          | flPOOLc_SETS , ifcIDsTATEsPACE_MULTIPLEaDAMS      ) ;   pPoolUse = tinP.pag1->pPoolHomePerm ; break ; }
        case ifcIDpOOL_ADAMpERM     : { if( !tinP.pag1->pPoolAdamPerm ) { OStEXT(   ostoPoolAdamPerm , 0x20 ) ; OStEXTAK( ostoPoolAdamPerm , "adam.perm." ) ; OStEXTC(  ostoPoolAdamPerm , tinP.pag1->idAdam , 0 ) ; tinP.pag1->pPoolAdamPerm = new( 0 , tinP , tinP.pag1->pbzpap , sizeof tinP.pag1->pbzpap ) poolC( tinP , TAG( TAGiDnULL ) , ostoPoolAdamPerm , CBsEXdROPsEPARATOR , flPOOLc_null          | flPOOLc_SETS , ifcIDsTATEsPACE_SINGLEaDAM( tinP ) ) ; } pPoolUse = tinP.pag1->pPoolAdamPerm ; break ; }
        case ifcIDpOOL_SCRATCH      : { if( !tinP.pag1->pPoolScratch  )                                                                                                                                              tinP.pag1->pPoolScratch  = new( 0 , tinP , tinP.pag1->pbzpsc , sizeof tinP.pag1->pbzpsc ) poolC( tinP , TAG( TAGiDnULL ) , "scratch"        , CBsEXdROPsEPARATOR , flPOOLc_null                         , ifcIDsTATEsPACE_SCRATCH            ) ;   pPoolUse = tinP.pag1->pPoolScratch  ; break ; }
        case ifcIDpOOL_HOMEtEMP     : { if( !tinP.pag1->pPoolHomeTemp )                                                                                                                                              tinP.pag1->pPoolHomeTemp = new( 0 , tinP , tinP.pag1->pbzpht , sizeof tinP.pag1->pbzpht ) poolC( tinP , TAG( TAGiDnULL ) , "home.temp"      , 0                  , flPOOLc_NOdROPhEADERS | flPOOLc_SETS                                      ) ;   pPoolUse = tinP.pag1->pPoolHomeTemp ; break ; }
        case ifcIDpOOL_ADAMtEMP     : {                                                                                                                                                                                                                                                                                                                                                                                                                                 pPoolUse = tinP.pag1->pPoolAdamTemp ; break ; }
        case ifcIDpOOL_NONE         : {                                                                                                                                                                                                                                                                                                                                                                                                                                 pPoolUse = 0                        ; break ; }
    {
    switch( idPoolP )

    // THE "home.temp" INSTANCE IS CONFIGURED FOR SETS AND FOR NO SEPARATORS OR DROP HEADERS, SO IT USES ADDRESS SPACE EFFICIENTLY AND CAN BE USED TO TEST DATABASE APPLICATIONS ; SUCH A CONFIGURATION SHOULD NOT BE USED FOR INSTANCES THAT ARE USED AS HEAPS, SUCH AS adam.temp

    if( idPoolP != ifcIDpOOL_NONE && idPoolP != ifcIDpOOL_ADAMtEMP && !( F(tinP.flagsThreadMode3) & flTHREADmODE3_UNLOCKpOOLiDENTITY ) ) { BLAMMO ; }
{
flagsMode( flagsModeP )
pPoolUse( 0 ) ,
pPoolUseLag( tinP.pPoolUse ) ,
/*1*/puseC::puseC( tinS& tinP , const countT idPoolP , const flagsT flagsModeP ) :/*1*/

/**/

*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

