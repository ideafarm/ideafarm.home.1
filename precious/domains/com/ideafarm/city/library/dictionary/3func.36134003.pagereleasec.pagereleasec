
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    }
        pBooksSave->unlockF( tinBaseP ) ;
        if( !decv02AM( pBooksSave->cRefBookF() ) ) { BLAMMO ; } ; //U::O: CONJ: cRef CAN BE MAINTAINED USING ++ -- SINCE MUST ALWAYS BE SERIALIZED SINCE pBook IS VOLATILE
        pBooksSave->lockF( tinBaseP , TAG( TAGiDnULL ) ) ;

        thirdC::c_memsetIF( tinBaseP , (byteT*)&((tinNormalS&)tinBaseP).pBookMark[ offbm ] , sizeof ((tinNormalS&)tinBaseP).pBookMark[ offbm ] ) ;

        bmNewSave  = ((tinNormalS&)tinBaseP).pBookMark[ offbm ] ;
        pBooksSave = ((tinNormalS&)tinBaseP).pBookMark[ offbm ].pBooks ;
    {
    else
    if( offbm == -1 ) { BLAMMO ; }

    }
        }
            break ;
            offbm = offr ;
        {
        if( ((tinNormalS&)tinBaseP).pBookMark[ offr ].pbz == pbP )
    {
    for( countT offr = 0 ; offr < sizeof ((tinNormalS&)tinBaseP).pBookMark / sizeof ((tinNormalS&)tinBaseP).pBookMark[ 0 ] ; offr ++ )
    countT offbm = -1 ;
{
pBooksSave( 0 )
/*1*/pageReleaseC::pageReleaseC( tinBaseS& tinBaseP , const byteT* const pbP ) :/*1*/

/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

