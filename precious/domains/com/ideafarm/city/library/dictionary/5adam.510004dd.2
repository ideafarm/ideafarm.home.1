
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    //CONoUTrAW( "\r\n" ) ; //U::
    //CONoUTrAW( postThreadName ) ; //U::
    //CONoUTrAW( "tinEntryS ct: " ) ; //U::
    thirdC::c_strncpyIF( tinBaseP , postThreadName , postThreadNameP , sizeof postThreadName )
    _IO_    TELLsYSlIFInAME( "tinEntryS::tinEntryS" )
{
idiFileCt( idiFileCtP )
idLineCt( idLineCtP ) ,
idTinNamed( idTinNamedP ) ,
idThread( idThreadP ) ,
idTin( idTinP ) ,
pbCopy( 0 ) ,
ip( ipP ) ,
bIda( bIdaP ) ,
osPid( osPidP ) ,
osTid( osTidP ) ,
idSerial( idSerialP ) ,
tinEntryS::tinEntryS( tin0S& tinBaseP , countT idSerialP , countT osTidP , countT osPidP , boolT bIdaP , countT ipP , countT idTinP , countT idThreadP , const osTextT* const postThreadNameP , const countT idTinNamedP , const countT idLineCtP , const countT idiFileCtP ) :

}
    else                                                           { BLAMMO ; }
    if( sizeof postName > thirdC::c_strlenIF( tinBaseP , postNameP ) ) OStEXTA( postName  , postNameP ) ;
    _IO_    TELLsYSlIFInAME( "napkinEntryS::napkinEntryS" )
{
costName( costNameP )
cbd( cbdP ) ,
pvd( pvdP ) ,
idiFileCt( idiFileCtP ) ,
idLineCt( idLineCtP ) ,
pvMe( pvMeP ) ,
osPid( osPidP ) ,
napkinEntryS::napkinEntryS( tin0S& tinBaseP , countT osPidP , voidT* pvMeP , countT idLineCtP , countT idiFileCtP , voidT* pvdP , countT cbdP , osTextT* postNameP , countT costNameP ) :

}
    else                                                           { BLAMMO ; }
    if( sizeof postName > thirdC::c_strlenIF( tinBaseP , postNameP ) ) OStEXTA( postName  , postNameP ) ;
    _IO_    TELLsYSlIFInAME( "poolOldEntryS::poolOldEntryS" )
{
costName( costNameP )
idClient( idClientP ) ,
cbPool( cbPoolP ) ,
pvMe( pvMeP ) ,
osPid( osPidP ) ,
poolOldEntryS::poolOldEntryS( tin0S& tinBaseP , countT osPidP , voidT* pvMeP , countT cbPoolP , countT idClientP , osTextT* postNameP , countT costNameP ) :

}
    OStEXTA( postName  , postNameP ) ;
    _IO_     TELLsYSlIFInAME( "lifiEntryS::lifiEntryS" )
{
idiFile( idiFileP )
idLine( idLineP ) ,
lifiEntryS::lifiEntryS( tin0S& tinBaseP , const countT idLineP , const countT idiFileP , const osTextT* const postNameP ) :

}
    }
        thirdC::thirdWriteToCyrcleOldIF( tinBaseP , napLogP , tEntry , tEntry.csF( tinBaseP ) + 1 ) ;
        tEntry = TF3(etherC::ifc_idAdamG_IF( tinBaseP ),flFORMAT_UNSIGNED,9)+T("| grabEntryS: idSerial: ")+TF1(idSerial)+T(" ; osTid: ")+TF1(osTid)+T(" ; osPid: ")+TF1(osPid)+T(" ; bIda: ")+TF1(bIda)+T(" ; ip: ")+TF1(ip)+T(" ; idLineCt: ")+TF1(idLineCt)+T(" ; idiFileCt: ")+TF1(idiFileCt)+T("\r\n") ;
        TN( tEntry , "" ) ;
    {
    if( idSerial >= 0xffffffff && idSerial < 0xffffffff )
    //if( idSerial >= 0x1fa0 && idSerial < 0x1fb0 )
{
voidT grabEntryS::logF( tin0S& tinBaseP , napkinC& napLogP )

}
    _IO_     TELLsYSlIFInAME( "grabEntryS::grabEntryS" )
{
idiFileCt( idiFileCtP )
idLineCt( idLineCtP ) ,
pbCopy( 0 ) ,
ip( ipP ) ,
bIda( bIdaP ) ,
osPid( osPidP ) ,
osTid( osTidP ) ,
idSerial( idSerialP ) ,
grabEntryS::grabEntryS( tin0S& tinBaseP , countT idSerialP , countT osTidP , countT osPidP , boolT bIdaP , countT ipP , countT idLineCtP , countT idiFileCtP ) :

#include postADAMhEADER

/*1*//*ifcIDaDAM_2GLASS2 2*//*1*/

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

