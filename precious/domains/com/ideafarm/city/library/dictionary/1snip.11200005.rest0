
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


        }
            TELL( "REST: outahere" ) ;                                                                                              \
            etThread.ifcDatumF( tinBaseP , flDATUM1_CLASStRACEaLWAYSfIREdLL , flDATUM2_null , 0 , 0 , 0 , (voidT*)DDNAME , (byteT*)&timeLife , sizeof timeLife ) ; \
                                                                                                                                    \
            etThread.osTimeSubtractF( tinBaseP , timeLife.time1 , timeLife.time2 , timeBorn.time1 , timeBorn.time2 ) ;                  \
            etThread.osTimeNowF( tinBaseP , timeLife.time1 , timeLife.time2 ) ;                                                         \
            timeS timeLife ;                                                                                                        \
                                                                                                                                    \
            thirdC::thirdImpotenceHandlerIF( tinBaseP ) ;                                                                               \
            TELL( "REST: cleaning up" ) ;                                                                                           \
            etThread = 0 ;                                                                                                          \
            ((tin9S&)tinBaseP).pSgnUtility = 0 ;                                                                                                  \
            }                                                                                                                       \
                }                                                                                                                   \
                    pRootI->letRefF() ;                                                                                             \
                    pRootI->strokeAllPapersF( tinBaseP , T("\f") ) ;                                                                    \
                {                                                                                                                   \
                if( pRootI )                                                                                                        \
                windowOldC* pRootI = windowOldC::getRefIF( tinBaseP ) ;                                                                 \
                                                                                                                                    \
                TELL( "REST: destroying all adam objects that remain on the thread stack" ) ;                                       \
                }                                                                                                                   \
                    if( ((tin9S&)tinBaseP).idPhase1 < ifcIDpHASEtHREAD_EPILOGnOkIDS ) ((tin9S&)tinBaseP).idPhase1 = ifcIDpHASEtHREAD_EPILOGnOkIDS ;             \
                        thirdC::third_idPhaseAdam_IF( tinBaseP ) = ifcIDpHASEaDAM_EXEePILOGaDAMrESTaMaLMOSTaLONE ;                      \
                    if( thirdC::third_idPhaseAdam_IF( tinBaseP ) < ifcIDpHASEaDAM_EXEePILOGaDAMrESTaMaLMOSTaLONE )                      \
                {                                                                                                                   \
                if( !( F(((tin9S&)tinBaseP).flagsThreadMode2) & flTHREADmODE2_DRIVERaDAM ) )                                                      \
                TELL( "REST: called WAITuNTILaLMOSTaLONE" ) ;                                                                       \
                WAITuNTILaLMOSTaLONE( 0 )                                                                                           \
                TELL( "REST: calling WAITuNTILaLMOSTaLONE" ) ;                                                                      \
                FIREmYSELF ;                                                                                                        \
                TELL( "REST: calling FIREmYSELF" ) ;                                                                                \
                /*LOGrAW( "REST0: calling FIREmYSELF\r\n" ) ;*/                                                                     \
                if( thirdC::osProcessIdPhaseAdamIF( tinBaseP ) < ifcIDpHASEhANDOFFoLD_SHUTTINGdOWN ) thirdC::osProcessIdPhaseAdamIF( tinBaseP , ifcIDpHASEhANDOFFoLD_SHUTTINGdOWN ) ; \
                }                                                                                                                   \
                    ((tin9S&)tinBaseP).idPhase2 = 0 ;                                                                                             \
                    if( ((tin9S&)tinBaseP).idPhase1 < ifcIDpHASEtHREAD_EPILOGkIDS ) ((tin9S&)tinBaseP).idPhase1 = ifcIDpHASEtHREAD_EPILOGkIDS ;                 \
                        thirdC::third_idPhaseAdam_IF( tinBaseP ) = ifcIDpHASEaDAM_EXEePILOGaDAMrESTwAITINGuNTILaLMOSTaLONE ;            \
                    if( thirdC::third_idPhaseAdam_IF( tinBaseP ) < ifcIDpHASEaDAM_EXEePILOGaDAMrESTwAITINGuNTILaLMOSTaLONE )            \
                {                                                                                                                   \
                if( !( F(((tin9S&)tinBaseP).flagsThreadMode2) & flTHREADmODE2_DRIVERaDAM ) )                                                      \
                TELL( "REST: ++" ) ;                                                                                                \
                /*DO NOT CLOSE THE CODE BLOCK HERE BECAUSE KID THREADS MIGHT BE USING OBJECTS THAT WOULD DT HERE*/                  \
                                                                                                                                    \
#define REST0                                                                                                                       \
/*1*//*REST0*//*1*/
/**/
*/
it is illegal to refer to this symbol in the definition of an adam
\<A HREF=\"5.11000005.1.0.html\"\>definition\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

