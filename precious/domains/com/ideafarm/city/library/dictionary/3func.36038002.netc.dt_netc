
//
// Copyright (c) 1992-2025 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    baton.ungrabF( tin0P ) ;

    }
        baton.grabF( tin0P , TAG( TAGiDnULL ) ) ;
        }
            }
                third.dosSleepIF( tin0P , TUCK * 0x40 ) ;
                sgnCatch.giveF( tin0P )  ;
                ++ s ;
            {
            while( cReadPending )
            sleepC s( tin0P , TAG( TAGiDnULL ) ) ;
        {
        baton.ungrabF( tin0P ) ;

        }
            }
                third.dosSleepIF( tin0P , TUCK * 0x40 ) ;
                third.s_writeF( tin0P , hSoc , idPort , nicNameC() , soulo ) ;
                soulC soulo( tin0P , *third.third_pEtherContainsMe_F() , TAG( TAGiDnULL ) , flSOUL_null , ifcIDtYPEdATAGRAM_NETc_NULL ) ;
                third.s_bindF( tin0P , hSoc ) ;
                third.s_socketIF( tin0P , hSoc , ifcSOCKETtYPE_DATAgRAM ) ;
                handleC hSoc( tin0P , TAG( TAGiDnULL ) , ifcIDtYPEhANDLE_SOCKET ) ;
                ++ s ;
            {
            while( !third && !bDone_tmCatch )
            sleepC s( tin0P , TAG( TAGiDnULL ) ) ;
        {
        bQuit_tmCatch = 1 ;
    {
    if( idPort )
    bDestructionInProgress ++ ;

    _IO_
    baton.grabF( tin0P , TAG( TAGiDnULL ) ) ;

    }
        if( third ) return ;
    {
    IFbEcAREFUL

    TINSL
{
/*1*/netC::~netC( voidT )/*1*/
/**/
*/
\<A HREF=\"5.1510002.1.0.html\"\>definition\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2025 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

