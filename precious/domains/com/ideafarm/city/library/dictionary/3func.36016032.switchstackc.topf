
//
// Copyright (c) 1992-2025 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    return ((stackC*)( bTinHasLeverP ? swMe.forIfcThreadF( tin0P ) : (countT)swMe ))->topF( tin0P ) ;
    SCOOP
{
/*1*/countT& switchStackC::topF( tin0S& tin0P , const boolT bTinHasLeverP )/*1*/

/**/
*/
this function is not serialized, performs no error checking, and does not perform the standard overhead
this function is a fast alternative to operator[] for referencing the top item on the stack for the calling thread
  \<A HREF=\"5.f230104.1.1.0.html\"\>f230104:  WAKEsHOW( "example.simplest.func.1210034.switchStackC.topF" )\</A\>
 simplest
examples
\<A HREF=\"5.1210034.1.0.html\"\>definition\</A\>
\<A HREF=\"6.$topF.0.html\"\>instances\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2025 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

