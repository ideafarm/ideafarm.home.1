
//
// Copyright (c) 1992-2025 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//

                            
REST

etThread.traceF( tin0P , T("bye") ) ;
etherC::loafIF( tin0P ) ;
etThread.traceF( tin0P , T("workers launched") ) ;

}
    etThread.osThreadF( TaRG1( tmWorkerF ) ) ;
{
while( cDo -- )
countT cDo = TUCK >> 4 ;

}
    }
        bksFoo.writeF( tin0P , (byteT*)&ii , sizeof ii , 0 , 0 , flBOOKScwRITE_ALLoRnONE | flBOOKScwRITE_ELSEfILLtOeND | flBOOKScwRITE_ALLOWoDDlENGTH , 0 ) ;
    {
    for( countT ii = 1 ; ii <= TUCK ; ii ++ )

    booksC bksFoo( tin0P , TAG( TAGiDnULL ) , "foo" , ifcIDsTATEsPACE_SINGLEaDAM( tin0P ) , flBOOKSc_PURGEoNcT | flBOOKSc_WRITER , TUCK - 1 , 0 , 0 , 0 , 0 , 0 , 0 ) ;
{

TODO

DONE( tmWorkerF )
}
    }
        }
            }
                }
                    THREADmODE3rESTORE
                    DEL( pPageEvent ) ;
                    THREADmODE3oN( flTHREADmODE3_DOnOTrEGISTERpAGEc )
                {

                else                                 etThread.traceF( tin0P , T("read:    ")+TF2(*(countT*)pbzIn,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED) ) ;
                else if( cbzIn != sizeof( countT ) ) etThread.traceF( tin0P , T("read:    unexpected data size:    ")+TF2(cbzIn,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED) ) ;
                if( !cbzIn )                         break ;

                const byteT* pbzIn = *pPageEvent ;
                countT cbzIn       = *pPageEvent ;

                if( !(const byteT*)*pPageEvent ) break ;

                THREADmODE1rESTORE
                THREADmODE3rESTORE
                bksFoo.readF( tin0P , *pPageEvent , hRead , flBOOKScrEAD_null ) ;
                pPageEvent = new( 0 , tin0P , LF ) pageC( tin0P , bksFoo , sizeof( countT ) ) ; ___( pPageEvent ) ;
                THREADmODE3oN( flTHREADmODE3_DOnOTrEGISTERpAGEc )
                THREADmODE1oN( flTHREADmODE1_ALLOWsTOPwHILEgRABBING )
                ZE( pageC* , pPageEvent ) ;
            {
            while( !ether && !POOP && cDo -- )
            countT cDo = 0x10 ;
            handleC hRead( tin0P , TAG( TAGiDnULL ) , ifcIDtYPEhANDLE_BOOKS ) ;
            booksC bksFoo( tin0P , TAG( TAGiDnULL ) , "foo" , ifcIDsTATEsPACE_SINGLEaDAM( tin0P ) , flBOOKSc_null , 0 , 0 , 0 , 0 , 0 , 0 , 0 ) ;
        {
        while( cDoOuter -- )
        countT cDoOuter = 2 ;

        etThread.traceF( tin0P , T("howdy!") ) ;
    {
    while( !ether && !POOP )
{
if( pTaskP )
TASK( tmWorkerF )

/*1*/WAKEsHOWtEXT( "scratch.6.inactive.gorilla.booksC.multiple.readers" )/*1*/
/**/
*/

/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2025 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
