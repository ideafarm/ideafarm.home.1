
//
// Copyright (c) 1992-2025 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


REST

etThread.delF( tin0P , psttw ) ;
etThread.strokeF( tin0P , T("\"")+T(psttw)+T("\"\r\n") ) ;
bFound = etThread.strSubstringF( tin0P , psttw , idf , sttq , sts , ids , tBig ) ; ___( psttw ) ;
ids = 0 ;
etThread.delF( tin0P , psttw ) ;
etThread.strokeF( tin0P , T("\"")+T(psttw)+T("\"\r\n") ) ;
boolT bFound = etThread.strSubstringF( tin0P , psttw , idf , sttq , sts , ids , tBig ) ; ___( psttw ) ;
ids = 0 ;
//sttq = ze ;
idf = 1 ;
ZE( strokeS* , psttw ) ;

countT idHit = etThread.strIdF( tin0P , countTC( 1 ) , idf , sttq , sts , ids , tBig ) ;
ZE( countT , ids ) ;
strokeS sttq( (countT)0 , sc_IGNOREqUOTES ) ;
countT idf = 1 ;

sts << psttOldC( tin0P , etThread , T("dddd") ) ;
sts << psttOldC( tin0P , etThread , T("ccc") ) ;
sts << psttOldC( tin0P , etThread , T("bb") ) ;
sts << psttOldC( tin0P , etThread , T("a") ) ;
stackC sts( tin0P , etThread , TAG( TAGiDnULL ) , flSTACKc_FIFO , ifcSTACKtYPE_PTR_strokeS ) ;

TN( tBig , "xxxxxxxxbbyyyyyyyy" ) ;

TODO

/*1*/WAKEhIDE( "example.strSubstringF.and.strIdF" )/*1*/
/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2025 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

