
//
// Copyright (c) 1992-2025 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//

                            
REST

THREADmODE2rESTORE
}
    //listC::deleteIF( tin0P , count2S( LISTnAMEsYS_ROOTsYSTEM2 , 0 ) ) ;
    //CONoUTrAW( "================== DELETING SYSTEM1 LIST ==============================\r\n" ) ;

    //listC::deleteIF( tin0P , count2S( LISTnAMEsYS_ROOTsYSTEM3 , 0 ) ) ;
    //CONoUTrAW( "================== DELETING SYSTEM2 LIST ==============================\r\n" ) ;

    //listC::chatterIF( tin0P , count2S( LISTnAMEsYS_ROOTsYSTEM3 , 0 ) ) ;
    //CONoUTrAW( "================== CHATTERING SYSTEM2 ==============================\r\n" ) ;

    //listC::deleteIF( tin0P , count2S( LISTnAMEsYS_ROOTaPPLICATION , 0 ) ) ;
    //CONoUTrAW( "================== DELETING APPLICATION LIST ==============================\r\n" ) ;

    listC::chatterIF( tin0P , count2S( LISTnAMEsYS_ROOTaPPLICATION , 0 ) ) ;
    CONoUTrAW( "================== CHATTERING APPLICATION  ==============================\r\n" ) ;
    listC::chatterIF( tin0P , count2S( LISTnAMEsYS_ROOTsYSTEM3 , 0 ) ) ;
    CONoUTrAW( "================== CHATTERING SYSTEM2 ==============================\r\n" ) ;
    listC::chatterIF( tin0P , count2S( LISTnAMEsYS_ROOTsYSTEM2 , 0 ) ) ;
    CONoUTrAW( "================== CHATTERING SYSTEM1 ==============================\r\n" ) ;

    //}
    //    listC::deleteIF( tin0P , pczList ) ;
    //    listC::dictionaryReplaceOsTextIF( tin0P , pczList ) ;
    //    countT pczList[] = { LISTnAMEsYS_ROOTaPPLICATION , (countT)"persons" , BM_HIGH + TUCK + 3 , 0 } ;
    //{
    //CONoUTrAW( "================== DELETING LATH PERSON ============================\r\n" ) ;
    }
        listC::deleteIF( tin0P , pczList ) ;
        listC::dictionaryReplaceOsTextIF( tin0P , pczList ) ;
        countT pczList[] = { LISTnAMEsYS_ROOTaPPLICATION , (countT)"persons" , BM_HIGH + TUCK + 2 , 0 } ;
    {
    CONoUTrAW( "================== DELETING MIDDLE PERSON ============================\r\n" ) ;
    //}
    //    listC::deleteIF( tin0P , pczList ) ;
    //    listC::dictionaryReplaceOsTextIF( tin0P , pczList ) ;
    //    countT pczList[] = { LISTnAMEsYS_ROOTaPPLICATION , (countT)"persons" , BM_HIGH + TUCK + 1 , 0 } ;
    //{
    //CONoUTrAW( "================== DELETING WOTH PERSON ============================\r\n" ) ;

    }
        }
            //SAYfIELDoUT( "favoriteseries" ) ;
            //listC::fieldIF( tin0P , pOut , hRec , "favoriteseries" , _fe_modeAllC() |  _fe_queryC() , LF ) ;
            //
            //SAYfIELDoUT( "favoritewords" ) ;
            //listC::fieldIF( tin0P , pOut , hRec , "favoritewords" , _fe_modeAllC() |  _fe_queryC() , LF ) ;
            
            SAYfIELDoUT( "favoritenumbers" ) ;
            listC::fieldIF( tin0P , pOut , hRec , "favoritenumbers" , _fe_modeAllC() |  _fe_queryC() , LF ) ;
        
            }
                // }
                //     }
                //         PUSE( tin0P , *(byteT**)&pczv ) ;
                //         DELlIST( fieldEditParamOutC , pOut ) ;
                //         puseC puseat( tin0P , ifcIDpOOL_ADAMtEMP ) ;
                //     {
                //     listC::fieldIF( tin0P , pOut , hRec , "favoriteseries" , _fe_pushC( pczv ) | _fe_modePushSinkC() , LF ) ;
                // 
                //     pczv[ offo ] = 0 ;
                //     for( countT offo = 0 ; offo < vv ; offo ++ ) pczv[ offo ] = vv ;
                // 
                //     }
                //         pczv = (countT*)PUSE.newF( tin0P , LF , ( 1 + vv ) * sizeof( countT ) ) ; ___( pczv ) ;
                //         puseC puseat( tin0P , ifcIDpOOL_ADAMtEMP ) ;
                //     {
                //     ZE( countT* , pczv ) ;
                // {
                // for( vv = 1 ; vv <= 0x1 ; vv ++ )
                // 
                // }
                //     DELlIST( fieldEditParamOutC , pOut ) ;
                //     listC::fieldIF( tin0P , pOut , hRec , "favoritewords" , _fe_pushC( postv[ offv ] ) | _fe_modePushSinkC() , LF ) ;
                // {
                // for( countT offv = 0 ; offv < sizeof postv / sizeof postv[ 0 ] ; offv ++ )
                // 
                // } ;
                //     //"dddd" ,
                //     //"ccc" ,
                //     //"bb" ,
                //     "a" ,
                // {
                // osTextT* postv[] =

                //}
                //    DELlIST( fieldEditParamOutC , pOut ) ;
                //    listC::fieldIF( tin0P , pOut , hRec , "favoritenumbers" , _fe_pushC( vv ) | _fe_modePushSinkC() , LF ) ;
                //{
                //for( countT vv = 3 - cToDo ; vv <= 3 - cToDo ; vv ++ )

                DELlIST( fieldEditParamOutC , pOut ) ;
                listC::fieldIF( tin0P , pOut , hRec , "favoritenumbers" , _fe_pushC( MAXcOUNTT ) | _fe_modePushSinkC() , LF ) ;
            {
            
            listC::openIF( tin0P , hRec , pczList ) ;
            handleC hRec( tin0P , TAG( TAGiDnULL ) , ifcIDtYPEhANDLE_LISTING ) ;
        {
        ZE( fieldEditParamOutC* , pOut ) ;
        
        listC::dictionaryReplaceOsTextIF( tin0P , pczList ) ;
        countT pczList[] = { LISTnAMEsYS_ROOTaPPLICATION , (countT)"persons" , ++ idSerialLath , 0 } ;
    {
    while( cToDo -- )
    countT cToDo = 3 ;
    
    //puseC puseMaster( tin0P , ifcIDpOOL_HOMEtEMP ) ;
{
THREADmODE2oN( flTHREADmODE2_UNLOCKpOOLiDENTITY )

countT idSerialLath = BM_HIGH + TUCK ;

grabitC grabitx( tin0P , TAG( TAGiDnULL ) ) ;

TODO

/*1*/WAKEsHOWtEXT( "scratch" )/*1*/
/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2025 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

