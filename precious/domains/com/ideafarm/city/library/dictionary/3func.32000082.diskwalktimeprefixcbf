
//
// Copyright (c) 1992-2025 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    return bDoIt ;

    }
        }
            }
                }
                    }
                        CONoUTrAW( "\r\n" ) ;
                        CONoUTrAW( info.postTo ) ;
                        CONoUTrAW( "Could not move: " ) ;
                    {
                    if( ((tin1S&)tin0P).bosFail )
                    BOS( WHATsfr , BOSoK , MoveFile( postNameP , postTo ) ) ;

                    //LOGrAW( "\r\n" ) ;
                    //LOGrAW( postNameP ) ;
                    //LOGrAW( " **** " ) ;
                    //LOGrAW( postShort ) ;
                    //LOGrAW( " **** " ) ;
                    //LOGrAW( postTo ) ;
                    //LOGrAW( "[postTo,postNameP,postShort]: " ) ;

                    BOSdOnOTtEST( WHATgbo , strcat( postc , postShort ) )

                    }
                        }
                            postc += sizeof postBad - 1 ;
                            BOSdOnOTtEST( WHATgbo , strcpy( postc , postBad ) )
                            osTextT postBad[] = "error.time.was.supposed.to.go.here." ;
                        {
                        else
                        }
                            }
                                PUSE( tin0P , *(byteT**)&pInfo ) ;
        
                                *( postc ++ ) = '.' ;
                                postc += 8 ;
                                BOSdOnOTtEST( WHATgbo , strcpy( postc , post9b ) )
                                *( postc ++ ) = '.' ;
                                postc += 8 ;
                                BOSdOnOTtEST( WHATgbo , strcpy( postc , post9a ) )
        
                                thirdC::c_itoaForeignIF( post9b , pInfo->timeWritten1 , '0' ) ;
                                thirdC::c_itoaForeignIF( post9a , pInfo->timeWritten2 , '0' ) ;
        
                                post9b[ 8 ] = 0 ;
                                post9a[ 8 ] = 0 ;
                                osTextT post9b[ 9 ] ;
                                osTextT post9a[ 9 ] ;
                            {
                            if( pInfo )
        
                            thirdC::dosQueryFileInfoIF( tin0P , pInfo , hFile ) ;
                            ZE( infoFileS* , pInfo ) ;
                        {
                        if( ~hFile )
        
                        thirdC::dosOpenIF( tin0P , ((tin1S&)tin0P).pEther , hFile , countTC() , postNameP , ifcOPENaCCESS_R , 0 , flOPENdETAILS_NOcACHE | flOPENdETAILS_DOnOTvALIDATE | flOPENdETAILS_DOnOTrEGISTER , ifcOPENhOW_nFeO ) ;
                        handleC hFile( tin0P , TAG( TAGiDnULL ) , ifcIDtYPEhANDLE_FILE ) ;
                    {

                    memcpy( postc , postNameP , costPrefix ) ; postc += costPrefix ;
                    countT costPrefix = postShort - postNameP ;

                    osTextT* postc = postTo ;
                    osTextT postTo[ TUCK << 1 ] ;

                    postShort ++ ;
                {
                if( postShort )
                osTextT* postShort = (osTextT*)((tin1S&)tin0P).brcRaw ;
                BOSdOnOTtEST( WHATgbo , strrchr( postNameP , '\\' ) )
            {
            else
            }
                //if( ((tin1S&)tin0P).bosFail && ((tin1S&)tin0P).brcQuery != ERROR_ALREADY_EXISTS ) BOSpOOP ;
                //BOS( WHATsfr , BOSoK , CreateDirectory( info.postTo , 0 ) ) ;
                //info.postTo[ costTo - 1 ] = 0 ;
                //countT costTo = ((tin1S&)tin0P).brcRaw ;
                //BOSdOnOTtEST( WHATgbo , strlen( info.postTo ) )
            {
            if( bDir )

            boolT  bDir = postNameP[ costLike - 1 ] == '\\' ;
            countT costLike = ((tin1S&)tin0P).brcRaw ;
            BOSdOnOTtEST( WHATgbo , strlen( postNameP ) )
        {
        if( bDoIt )

        ;
            : 1
            ? (*info.pCbf)( tin0P , cDirsP , cFilesP , bQuitP , postNameP , pcArgP )
        bDoIt = info.pCbf

        diskWalkCopyInfoS& info = *(diskWalkCopyInfoS*)pcArgP ;
    {
    if( postNameP )
    ZE( boolT , bDoIt ) ;
    _IO_
{
/*1*/boolT diskWalkTimePrefixCBF( tin0S& tin0P , countT& cDirsP , countT& cFilesP , const boolT& bQuitP , const osTextT* const postNameP , countT* const pcArgP , const countT* const pModuloFilesP , const countT* const pModuloDirsP )/*1*/

/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2025 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

