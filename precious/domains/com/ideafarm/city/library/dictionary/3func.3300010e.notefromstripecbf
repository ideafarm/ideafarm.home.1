
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//

}
    //}
    //    }
    //        LOGrAW( tSay ) ;
    //        TN( tSay , "" ) ; tSay = T("keyValue: \"")+tKey+T("\" = \"")+tValue+T("\"\r\n") ;
    //
    //        tValue = T(psttv) ;
    //        tKey   = T(psttLeverKVP) ;
    //
    //        strokeS* psttv = (strokeS*)(countT)swKVP ;
    //        psttLeverKVP = (strokeS*)swKVP.leverF( tin0P , idf ) ;
    //    {
    //    for( countT idf = 1 ; idf <= cFlavors ; idf ++ )
    //    countT cFlavors = swKVP.cFlavorsF( tin0P ) ;
    //    TN( tValue , "" ) ;
    //    TN( tKey   , "" ) ;
    //{

    //LOGrAW( "\r\n---- psttKVReportP (END) -----------------------------------------------------------------\r\n" ) ;
    //LOGrAW( T(psttKVReportP) ) ;
    //LOGrAW( "\r\n---- psttKVReportP (BEGIN) -----------------------------------------------------------------\r\n" ) ;
    //LOGrAW3( "noteFromStripeCBF:\r\n" ) ;

    }
        etThread.delF( tin0P , psttFile ) ;
        etThread.boxPutUniqueF( tin0P , psttFile , tLong , WS( sOut ) ) ;
        ZE( strokeS* , psttFile ) ;

        TN( tLong , "///ideafarm/ephemeral/backed.up.daily/domains/com/ideafarm/ipdos/orders.1.incoming/" ) ; tFileOrder += tShort ;

        TN( tShort , "soil." ) ; tShort += T(bLive?"soul.event.live.":"soul.event.test.")+tValueStripeNoticeType ;

        boolT bLive = !etThread.strCompareF( tin0P , tValueLive , T("true") ) ;

        }
            sOut << (strokeS*)tValueAmountDiscount   ;
            sOut << (strokeS*)tValueIdSubscription   ;
            sOut << (strokeS*)tValueMode             ;
            sOut << (strokeS*)tValueName             ;
            sOut << (strokeS*)tValueEmail            ;
            sOut << (strokeS*)tValuePostalCode       ;
            sOut << (strokeS*)tValueCountry          ;
            sOut << (strokeS*)tValueHawker           ;
            sOut << (strokeS*)tValueAge              ;
            sOut << (strokeS*)tValueAmountTotal      ;
            sOut << (strokeS*)tValueAmountSubtotal   ;
            sOut << (strokeS*)tValueApiVersion       ;
            sOut << (strokeS*)tValueIdProduct        ;
            sOut << (strokeS*)tValueStripeNoticeType ;
            sOut << (strokeS*)tValueLive             ;

            sOut << (strokeS*)tVersion               ;
            sOut << (strokeS*)tEvent                 ;
        {
        soulC sOut( tin0P , TAG( TAGiDnULL ) ) ;

        TN( tVersion   , "1" ) ;
        TN( tEvent , "stripe.notice" ) ;
    {

    }
        DEL( pSwPathValue ) ;
        
        }
            }
                etThread.delF( tin0P , psttValue ) ;
        
                }
                    }
                        etThread.traceF( tin0P , T("********    ") + *pptKey[ offe ] + T("   :    ") + *pptValue[ offe ] , flTRACE_NOpREFIX | flTRACE_KEEPcRlF , ifcIDtRACEdIVERT_f ) ;

                        etThread.delF( tin0P , psttt ) ;
                        *pptValue[ offe ] = T(psttt) ;
                        etThread.strTrimF( tin0P , psttt , psttValue , 0 , 0 , strokeS() ) ; ___( psttt ) ;
                        ZE( strokeS* , psttt ) ;
                    {
                    if( !etThread.strCompareF( tin0P , psttPath , *pptKey[ offe ] ) )
                {
                for( countT offe = 0 ; offe < cKeys ; offe ++ )
        
                if( cKeys - cValues ) { BLAMMO ; }
                countT cValues = sizeof pptValue / sizeof pptValue[ 0 ] ;
                countT cKeys  = sizeof pptKey  / sizeof pptKey[  0 ] ;
        
                etThread.traceF( tin0P , T("--------------------------        [value]:    ")+T(psttValue) , flTRACE_NOpREFIX | flTRACE_KEEPcRlF , ifcIDtRACEdIVERT_f ) ;
                etThread.traceF( tin0P , T("-------------------------- [path]:            ")+T(psttPath)  , flTRACE_NOpREFIX | flTRACE_KEEPcRlF , ifcIDtRACEdIVERT_f ) ;
        
                strokeS*& psttValue = *(strokeS**)&(countT&)*pSwPathValue ;
                psttPath = (strokeS*)pSwPathValue->leverF( tin0P , idf ) ;
        
                _IO_
            {
            for( countT idf = 1 ; idf <= cFlavors ; idf ++ )
            countT cFlavors = pSwPathValue->cFlavorsF( tin0P ) ;
        {
        if( !POOP )
    
        ;
        }
            &tKeyAmountDiscount   ,
            &tKeyIdSubscription   ,
            &tKeyMode             ,
            &tKeyName             ,
            &tKeyEmail            ,
            &tKeyPostalCode       ,
            &tKeyCountry          ,
            &tKeyHawker           ,
            &tKeyAge              ,
            &tKeyAmountTotal      ,
            &tKeyAmountSubtotal   ,
            &tKeyApiVersion       ,
            &tKeyIdProduct        ,
            &tKeyStripeNoticeType ,
            &tKeyLive             ,
        {
        textC* pptKey[] =
        
        TN( tKeyAmountDiscount   , "\"data\"/\"object\"/\"total_details\"/\"amount_discount\"/"                 ) ;
        TN( tKeyIdSubscription   , "\"data\"/\"object\"/\"subscription\"/"                                      ) ;
        TN( tKeyMode             , "\"data\"/\"object\"/\"mode\"/"                                              ) ;
        TN( tKeyName             , "\"data\"/\"object\"/\"customer_details\"/\"name\"/"                         ) ;
        TN( tKeyEmail            , "\"data\"/\"object\"/\"customer_details\"/\"email\"/"                        ) ;
        TN( tKeyPostalCode       , "\"data\"/\"object\"/\"customer_details\"/\"address\"/\"postal_code\"/"      ) ;
        TN( tKeyCountry          , "\"data\"/\"object\"/\"customer_details\"/\"address\"/\"country\"/"          ) ;
        TN( tKeyHawker           , "\"data\"/\"object\"/\"custom_fields\"/item.00000002/\"text\"/\"value\"/"    ) ;
        TN( tKeyAge              , "\"data\"/\"object\"/\"custom_fields\"/item.00000001/\"numeric\"/\"value\"/" ) ;
        TN( tKeyAmountTotal      , "\"data\"/\"object\"/\"amount_total\"/"                                      ) ;
        TN( tKeyAmountSubtotal   , "\"data\"/\"object\"/\"amount_subtotal\"/"                                   ) ;
        TN( tKeyApiVersion       , "\"api_version\"/"                                                           ) ;
        TN( tKeyIdProduct        , "\"data\"/\"object\"/\"plan\"/\"product\"/"                                  ) ;
        TN( tKeyStripeNoticeType , "\"type\"/"                                                                  ) ;
        TN( tKeyLive             , "\"livemode\"/"                                                              ) ;

        // 
        // 
        // 
        // "data" / "object" / "plan" / "product" / : "prod_RJ1XOIUO9htwyX"
        // "type" / : "customer.subscription.created"
        //
        // FOR THE STUDENT REGISTRATION SUBSCRIPTION

        ;
        }
            &tValueAmountDiscount   ,
            &tValueIdSubscription   ,
            &tValueMode             ,
            &tValueName             ,
            &tValueEmail            ,
            &tValuePostalCode       ,
            &tValueCountry          ,
            &tValueHawker           ,
            &tValueAge              ,
            &tValueAmountTotal      ,
            &tValueAmountSubtotal   ,
            &tValueApiVersion       ,
            &tValueIdProduct        ,
            &tValueStripeNoticeType ,
            &tValueLive             ,
        {
        textC* pptValue[] =
    {
    TN( tValueAmountDiscount   , "" ) ;
    TN( tValueIdSubscription   , "" ) ;
    TN( tValueMode             , "" ) ;
    TN( tValueName             , "" ) ;
    TN( tValueEmail            , "" ) ;
    TN( tValuePostalCode       , "" ) ;
    TN( tValueCountry          , "" ) ;
    TN( tValueHawker           , "" ) ;
    TN( tValueAge              , "" ) ;
    TN( tValueAmountTotal      , "" ) ;
    TN( tValueAmountSubtotal   , "" ) ;
    TN( tValueApiVersion       , "" ) ;
    TN( tValueIdProduct        , "" ) ;
    TN( tValueStripeNoticeType , "" ) ;
    TN( tValueLive             , "" ) ;
    
    __Z( pSwPathValue ) ;
    etThread.strParseJsonF( tin0P , pSwPathValue , psttPath , (osTextT*)postBodyP , flSTACKc_null ) ;
    ZE( switchC* , pSwPathValue ) ;
    ZE( strokeS* , psttPath     ) ;

    //etThread.traceF( tin0P , T("\r\n---- postBodyP (END) -------------------------------------------------------------------\r\n") , flTRACE_NOpREFIX | flTRACE_KEEPcRlF ) ;
    //etThread.traceF( tin0P , T(postBodyP)                                                                                          , flTRACE_NOpREFIX | flTRACE_KEEPcRlF ) ;
    //etThread.traceF( tin0P , T("\r\n---- postBodyP (BEGIN) -----------------------------------------------------------------\r\n") , flTRACE_NOpREFIX | flTRACE_KEEPcRlF ) ;

    //THIS WORKS IN FIREFOX BROWSER: https://www.sandbox.stripe.com:443/cgi-bin/webscr?cmd=_notify-validate&mc_gross=1.00&protection_eligibility=Eligible&address_status=confirmed&payer_id=4QLHUR4EYW37J&address_street=1+Main+St&payment_date=15%3A55%3A04+Jun+04%2C+2020+PDT&payment_status=Completed&charset=windows-1252&address_zip=95131&first_name=John&mc_fee=0.33&address_country_code=US&address_name=John+Doe&notify_version=3.9&subscr_id=I-DEKU4NNTHS0H&payer_status=verified&business=sb-znjve1276155%40business.example.com&address_country=United+States&address_city=San+Jose&verify_sign=AS.sXmO3SZlbZsuBgmx57wrfjxyDAk855hu6vdRmhFRd0mqr2l3hMU7l&payer_email=sb-prtxq883780%40personal.example.com&txn_id=5W609239EF681420H&payment_type=instant&btn_id=4125335&last_name=Doe&address_state=CA&receiver_email=sb-znjve1276155%40business.example.com&payment_fee=0.33&receiver_id=755UKLGFJ8XU2&txn_type=subscr_payment&item_name=Wo'O's+Table+Registration+and+Subscription&mc_currency=USD&item_number=20200604&residence_country=US&test_ipn=1&transaction_subject=Wo'O's+Table+Registration+and+Subscription&payment_gross=1.00&ipn_track_id=5075e5b427054 HTTP/1.1
    //OLD FORMAT: GET /cgi-bin/webscr?cmd=_notify-validate&mc_gross=1.00&protection_eligibility=Eligible&address_status=confirmed&payer_id=4QLHUR4EYW37J&address_street=1+Main+St&payment_date=17%3A04%3A06+Jun+04%2C+2020+PDT&payment_status=Completed&charset=windows-1252&address_zip=95131&first_name=John&mc_fee=0.33&address_country_code=US&address_name=John+Doe&notify_version=3.9&subscr_id=I-1CXF383WH8P0&payer_status=verified&business=sb-znjve1276155%40business.example.com&address_country=United+States&address_city=San+Jose&verify_sign=AEHpL6M1JS9Z4r02TsvVIey5ocFqAgLcANkEe9kVFcJG4kqTWCtTJprq&payer_email=sb-prtxq883780%40personal.example.com&txn_id=1XX85736SF014420R&payment_type=instant&btn_id=4125335&last_name=Doe&address_state=CA&receiver_email=sb-znjve1276155%40business.example.com&payment_fee=0.33&receiver_id=755UKLGFJ8XU2&txn_type=subscr_payment&item_name=Wo%27O%27s+Table+Registration+and+Subscription&mc_currency=USD&item_number=20200604&residence_country=US&test_ipn=1&transaction_subject=Wo%27O%27s+Table+Registration+and+Subscription&payment_gross=1.00&ipn_track_id=92fb2ec1f693b HTTP/1.1
    //20200731@1556: CHANGED FROM HTTP/1.0 TO HTTP/1.1 WITHOUT ANALYSIS

    //boolT bSandbox = etherC::ifc_idHomeI_IF() & fliIDhOME_HOMELESS ;
    TN( tValidationReply   , "" ) ;
    TN( tValidationRequest , "" ) ;
{
/*1*/voidT noteFromStripeCBF( tin0S& tin0P , etherC& etThread , const boolT& bQuitP , httpServerC& meP , countT& cArgP , httpReplyS& replyP , stackC& stBodyP , const strokeS* const psttKVReportP , switchC& swKVP , strokeS*& psttLeverKVP , sessionsC& sessionsP , nicNameC& nnPeerP , const strokeS* const psttNameP , const strokeS* const psttQueryKVP , const strokeS* const psttPeerAgentP , osTextT*& postBodyP )/*1*/

/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
