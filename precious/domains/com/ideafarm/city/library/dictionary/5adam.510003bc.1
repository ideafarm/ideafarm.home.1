
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


REST
etThread.osProcessIdPhaseAdamF( tinBaseP , ifcIDpHASEhANDOFFoLD_SHUTTINGdOWN ) ;

}
    DEL( pstd ) ;
    stackC* pstd = (stackC*)value ;
    stStacksToDelete >> value ;
    ZE( countT , value ) ;
{
while( cStacks -- )
countT cStacks = stStacksToDelete ;

!final ;
final.nameF( tinBaseP , T("final") ) ;
tableC final = selected << cols ;

}
    cols.newObjectF( tinBaseP , tCol2 ) ;
    cols.newEventF( tinBaseP ) ;

    cols.newObjectF( tinBaseP , tCol1 ) ;
    cols.newEventF( tinBaseP ) ;

    cols.newColF( tinBaseP , T("colsWanted") ) ;
{
tableC cols( tinBaseP , ether , T("cols") ) ;
TN( tCol2 , "all.clients.client" ) ;
TN( tCol1 , "all.salesReps.name" ) ;

!selected ;
selected.nameF( tinBaseP , T("selected") ) ;
tableC selected = all & values ;

!values ;
values.nameF( tinBaseP , T("selection scores") ) ;
tableC values = okc.calcF( stStacksToDelete , all ) ;

!okc ;
okc.nameF( tinBaseP , T("okc") ) ;
tableC okc = all.compileF( stStacksToDelete , ok ) ;
stackC stStacksToDelete( tinBaseP , ether , TAG( TAGiDnULL ) ) ;

!ok ;
!all ;

}
    ok.newObjectF( tinBaseP , tOk2 ) ;
    ok.newEventF( tinBaseP ) ;

    ok.newObjectF( tinBaseP , tOk1 ) ;
    ok.newEventF( tinBaseP ) ;

    ok.newColF( tinBaseP , T("booleanExpression") ) ;
{
tableC ok( tinBaseP , ether , T("ok") ) ;
TN( tOk2 , "salesReps.name == clients.repName" ) ;
TN( tOk1 , "salesReps.name == clients.repName" ) ;

all.nameF( tinBaseP , T("all") ) ;
tableC all = salesReps * clients ;

}
    clients.newObjectF( tinBaseP , tVarian ) ;
    clients.newObjectF( tinBaseP , tJoe ) ;
    clients.newEventF( tinBaseP ) ;

    clients.newObjectF( tinBaseP , tIntel ) ;
    clients.newObjectF( tinBaseP , tJoe ) ;
    clients.newEventF( tinBaseP ) ;

    clients.newObjectF( tinBaseP , tHP ) ;
    clients.newObjectF( tinBaseP , tBob ) ;
    clients.newEventF( tinBaseP ) ;

    clients.newObjectF( tinBaseP , tAmd ) ;
    clients.newObjectF( tinBaseP , tBob ) ;
    clients.newEventF( tinBaseP ) ;

    clients.newColF( tinBaseP , T("client") ) ;
    clients.newColF( tinBaseP , T("repName") ) ;
{
tableC clients( tinBaseP , ether , T("clients") ) ;
TN( tHP , "hp" ) ;
TN( tVarian , "varian" ) ;
TN( tAmd , "amd" ) ;
TN( tIntel , "intel" ) ;

}
    salesReps.newObjectF( tinBaseP , tBob ) ;
    salesReps.newEventF( tinBaseP ) ;
    salesReps.newObjectF( tinBaseP , tJoe ) ;
    salesReps.newEventF( tinBaseP ) ;

    salesReps.newColF( tinBaseP , T("name") ) ;
{
tableC salesReps( tinBaseP , ether , T("salesReps") ) ;
TN( tBob , "bob" ) ;
TN( tJoe , "joe" ) ;

TODO

/*1*/WAKEhIDE( "doodle.tableC" )/*1*/
/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

