
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    }
        sock.connectF( tin0P , idPortP , nicNameP ) ;
        socketC sock( tin0P , *this , TAG( TAGiDnULL ) ) ;
    {

    }
        __( pb3[ 1 ] - 'k' ) ;
        __( pb3[ 0 ] - 'o' ) ;
        __( 2 - sock.readF( tin0P , pb3 , 2 ) ) ;
        osTextT pb3[] = { 0 , 0 , 0 } ;
        sock.writeF( tin0P , (osTextT*)T("!quit\r\n") ) ;
        sock.connectF( tin0P , idPortP , nicNameP ) ;
        socketC sock( tin0P , *this , TAG( TAGiDnULL ) ) ;
    {

    _IO_

    }
        if( POOP ) return ;
    {
    IFbEcAREFUL
    SCOOP
{
/**//*1*/voidT etherC::sockWriteQuitF( tin0S& tin0P , const countT idPortP , const nicNameC nicNameP )/*1*/
*/
  can be 0
 nicNameP
  must not be 0
 idPortP
arguments
it is illegal to refer to this symbol in the definition of an adam
\<A HREF=\"5.10300e3.1.0.html\"\>definition\</A\>
\<A HREF=\"6.$sockWriteQuitF.0.html\"\>instances\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

