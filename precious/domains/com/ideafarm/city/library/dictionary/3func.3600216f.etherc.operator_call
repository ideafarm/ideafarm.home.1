
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    }
        }
            break ;
            }
                delF( tin0P , psttw ) ;_WQ
                }
                    else       { POPUPsOIXLoLD( T("The word \"")+T(psttw)+T("\" is unknown to etherC object \"")+T(postName)+T("\".") ) ; }
                    if( pApi ) (*pApi)( tin0P , *this , slP , T(postName) ) ;
    
                    }
                        _pSwSoixlOldApi->ungrabF( tin0P ) ;_WQ
                        pApi = (ifcSoixlOldApiFT)(countT)*_pSwSoixlOldApi ;_WQ
                        _psttLeverSoixlOldApi = psttw ;_WQ
                        _pSwSoixlOldApi->grabF( tin0P , TAG( TAGiDnULL ) ) ;_WQ
                    {
                    ZE( ifcSoixlOldApiFT , pApi ) ;_WQ
                {
                else if( _pSwSoixlOldApi->idSlotOfLeverF( tin0P , (countT)psttw ) )
                }
                    delF( tin0P , psttQueryWord ) ;_WQ
                    }
                        POPUPsOIXLoLD( T("I, \"")+T(postName)+T("\", have placed \"")+tNameShort+T("\" onto your desk.  Read that document and then edit it to indicate what additional information you want.  Then drop it into the Depository to obtain the additional information.") ) ;_WQ
                        boxPutF( tin0P , tName , tBody , tBody.csF(  tin0P ) ) ;_WQ
                        TN( tName , "" ) ; tName = T("///desk/")+tNameShort ;_WQ
                        TN( tNameShort , "") ; tNameShort = T("soixlOld.help.")+T(postName)+T(".")+T(psttQueryWord)+T(".txt") ;_WQ
        
                        delF( tin0P , pstth ) ;_WQ
                        TN( tBody , "" ) ; tBody = T(pstth) ;_WQ
                        strReverseF( tin0P , pstth , T(psttzDoc) , T("\r\n") ) ; ___( pstth ) ;_WQ
                        ZE( strokeS* , pstth ) ;_WQ
                    {
                    else
                    if( !psttzDoc ) { POPUPsOIXLoLD( T("The word \"")+T(psttQueryWord)+T("\" is unknown to etherC object \"")+T(postName)+T("\".") ) ; }

                    }
                        }
                            _pSwSoixlOldApi->ungrabF( tin0P ) ;_WQ
                            psttzDoc = (strokeS*)(countT)*_pSwSoixlOldApiDoc ;_WQ
                            _psttLeverSoixlOldApi = psttQueryWord ;_WQ
                            _pSwSoixlOldApi->grabF( tin0P , TAG( TAGiDnULL ) ) ;_WQ
                        {
                    {
                    if( _pSwSoixlOldApiDoc && _pSwSoixlOldApiDoc->idSlotOfLeverF( tin0P , (countT)psttQueryWord ) )
                    ZE( strokeS* , psttzDoc ) ;_WQ

                    slP >> psttQueryWord ; ___( psttQueryWord ) ;_WQ
                    //U::TEST FOR EMPTY HERE
                    ZE( strokeS* , psttQueryWord ) ;_WQ

                    }
                        if( _pSwSoixlOldApiDoc ) genSoixlOldWordHelpsF( tin0P ) ;_WQ
                        _pSwSoixlOldApiDoc = new( 0 , tin0P , LF ) switchC( tin0P , third , TAGoR( TAGiDnULL , idLineCt , idiFileCt , pbBitsCt ) , flSTACKc_null , _psttLeverSoixlOldApi ) ; ___( _pSwSoixlOldApiDoc ) ;_WQ
                    {
                    if( !_pSwSoixlOldApiDoc )
                {
                else if( !strCompareF( tin0P , psttw , T("??") ) )
                }
                    POPUPsOIXLoLD( T("I, \"")+T(postName)+T("\", have placed \"")+tNameShort+T("\" onto your desk.  Read that document and then edit it to indicate what additional information you want.  Then drop it into the Depository to obtain the additional information.") ) ;_WQ
                    boxPutF( tin0P , tName , tBody , tBody.csF(  tin0P ) ) ;_WQ
                    TN( tName , "" ) ; tName = T("///desk/")+tNameShort ;_WQ
                    TN( tNameShort , "") ; tNameShort = T("soixlOld.help.")+T(postName)+T(".txt") ;_WQ
    
                    delF( tin0P , pstth ) ;_WQ
                    tBody = T(pstth) ;_WQ
                    strReverseF( tin0P , pstth , tBody , T("\r\n") ) ; ___( pstth ) ;_WQ
                    ZE( strokeS* , pstth ) ;_WQ
    
                    ) ;_WQ
    
                        "by dropping this document into the Depository.\r\n"
                        "You can obtain information about each of these command words\r\n"
                        "\r\n"
                        #include "\ideafarm.home.1\precious\domains\com\ideafarm\city\library\snip\1snip.005001c.genSoixlOldWordMenus_etherC_1.h"
                        "    . off space\r\n"
                        "    . on space\r\n"
                        "\r\n"
                        "changes and drop this document into the depository:\r\n"
                        "and \"off\" lines so that the words of interest are bracketed.  Then save your\r\n"
                        "some or all of the following command words by editing this list to move the \"on\"\r\n"
                        "service and is waiting to be given tasks to do.  You can obtain information about\r\n"
                        "Object synopsis: The author of this document, \"")+T(postName)+T("\", is at your\r\n"
                        "\r\n"
                        "will generally become impotent.\r\n"
                        "an exception occurs while an etherC object is completing a task, that object\r\n"
                        "popup menus, and communicating with other Internet hosts are examples.  When\r\n"
                        "a command literal on that stack.  Reading and writing disk files, displaying\r\n"
                        "by manifesting an etherC object on a stack after placing argument literals and\r\n"
                        "SOIXLoLD.  Within IdeaFarm " "(tm) SOIL (tm), virtually all side effects are accomplished\r\n"
                        "Class synopsis: Objects of the etherC class are the workhorses of IdeaFarm " "(tm)\r\n"
                        "\r\n"
                        "Author: ")+T(postName)+T("\r\n"
                        "Class: etherC")+T("\r\n"
                        "\r\n"
                        "IdeaFarm " "(tm) SOIL (tm) - Sentient Object Interface Language\r\n"
                        USCORE79 "\r\n"
                        ". off space\r\n"
                        ". ")+T(postName)+T(" . etherC . n space\r\n"
                        POSTpROLOG "\r\n"
    
                    tBody = T(
                    TN( tBody , "" ) ;_WQ
                {
                if( !strCompareF( tin0P , psttw , T("?") ) )
                slP >> psttw ; ___( psttw ) ;_WQ
                //U::TEST FOR EMPTY HERE
                ZE( strokeS* , psttw ) ;_WQ
            {
            if( _pSwSoixlOldApi )

            }
                if( _pSwSoixlOldApi ) genSoixlOldWordLoadsF( tin0P ) ;_WQ
                _pSwSoixlOldApi = new( 0 , tin0P , LF ) switchC( tin0P , third , TAGoR( TAGiDnULL , idLineCt , idiFileCt , pbBitsCt ) , flSTACKc_null , _psttLeverSoixlOldApi ) ; ___( _pSwSoixlOldApi ) ;_WQ
            {
            if( !_pSwSoixlOldApi )
        {
        case ifcIDcMDbASE_CMDdEFAULT :
        }
            break ;
            slP.flags = save ;_WQ
            slP << (baseSoilXxxxC*)this ;_WQ
            slP.flags &= ~( F(flSOUL_LIVE) ) ;_WQ
            flagsT save = slP.flags ;_WQ
        {
        case ifcIDcMDbASE_REFERENCE :
        }
            break ;
        {
        case ifcIDcMDbASE_TOCK :
        }
            break ;
        {
        case ifcIDcMDbASE_TICK :
        }
            break ;
            slP << (strokeS*)T(postName) ;_WQ
        {
        case ifcIDcMDbASE_INSTANCEnAME :
        }
            break ;
            slP << (strokeS*)T(((tin1S&)tin0P).pag1->_etherC_.postOldClassName) ;_WQ
        {
        case ifcIDcMDbASE_CLASSnAME :
    {
    switch( idCmdBase )
    slP >> idCmdBase ;_WQ
    ZE( countT , idCmdBase ) ;_WQ

    }
        if( pMeI != (baseSoilXxxxC*)this ) { BLAMMO ; }
        slP >> pMeI ;_WQ
        ZE( baseSoilXxxxC* , pMeI ) ;_WQ
    {
    SCOOP
{
/*1*/voidT etherC::operator ()( tin0S& tin0P , soulC& slP )/*1*/

/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

