
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//

}
    bHandle.ungrabF( tinBaseP ) ;

    }
        ether.delF( tinBaseP , psttKey ) ;
        stPathP >> psttKey ;
        ZE( strokeS* , psttKey ) ;
    {
    if( stPathP )

    }
        }
            break ;
            wordF( tinBaseP , scrP , stPathP , psttP ) ;

            if( POOP ) break ;
            __NZ( psttP[ CSpREFIX - 1 + psttP->idAdam ].idAdam != '}' ) ;
        {
        case '{' :
        }
            break ;
            ether.delF( tinBaseP , psttList ) ;
            listF( tinBaseP , scrP , stPathP , psttList ) ;
            ether.strSubstringF( tinBaseP , psttList , idf , idl , psttP ) ; ___( psttList ) ;
            countT idl = psttP->idAdam - 1 ;
            countT idf = 2 ;
            ZE( strokeS* , psttList ) ;

            if( POOP ) break ;
            __NZ( psttP[ CSpREFIX - 1 + psttP->idAdam ].idAdam != ']' ) ;
        {
        case '[' :
    {
    if( psttP->idAdam ) switch( psttP[ CSpREFIX ].idAdam )

    }
        }
            //etherC::etRockIF( tinBaseP ).traceF( tinBaseP , T("valueF GOTwO! [rP.tRackspaceAccessToken]: ")+rP.tRackspaceAccessToken ) ;
            ether.delF( tinBaseP , psttw ) ;
            rP.tRackspaceAccessToken = T(psttw) ;
            ether.strFromJsonF( tinBaseP , psttw , psttP ) ; ___( psttw ) ;
            ZE( strokeS* , psttw ) ;
        {
        else if( !ether.strCompareF( tinBaseP , tPath , tPathToken ) )
        }
            }
                scrP.flags |= flCLOUDoPENsCRATCH_CLOUDfILES ;
                //etherC::etRockIF( tinBaseP ).traceF( tinBaseP , T("valueF / setting flCLOUDoPENsCRATCH_CLOUDfILES") ) ;
            {
            if( !ether.strCompareF( tinBaseP , T(psttP) , T("\"cloudFiles\"") ) )
        {
        else if( !ether.strCompareF( tinBaseP , tPath , tPathName ) )
        }
            }
                scrP.flags |= flCLOUDoPENsCRATCH_MYrEGION   ;
                //etherC::etRockIF( tinBaseP ).traceF( tinBaseP , T("valueF / setting flCLOUDoPENsCRATCH_MYrEGION") ) ;
            {
            if( !ether.strCompareF( tinBaseP , T(psttP) , T("\"")+scrP.tBuilding+T("\"") ) )
        {
        else if( !ether.strCompareF( tinBaseP , tPath , tPathRegion ) )
        }
            //etherC::etRockIF( tinBaseP ).traceF( tinBaseP , T("valueF GOTwO! [scrP.tMaybeInternalUrl1]: ")+scrP.tMaybeInternalUrl1 ) ;
            scrP.tMaybeInternalUrl1 = T(psttP) ;
        {
        else if( !ether.strCompareF( tinBaseP , tPath , tPathInternalURL ) )
        }
            //etherC::etRockIF( tinBaseP ).traceF( tinBaseP , T("valueF LOOKIEHERE! GOTwO! [scrP.tMaybePublicUrl1]: ")+scrP.tMaybePublicUrl1 ) ;
            scrP.tMaybePublicUrl1 = T(psttP) ;
        {
        if( !ether.strCompareF( tinBaseP , tPath , tPathPublicURL ) )

        TN( tPathToken       , "\"access\"/\"token\"/\"id\"/"                                 ) ;
        TN( tPathName        , "\"access\"/\"serviceCatalog\"/\"name\"/"                      ) ;
        TN( tPathRegion      , "\"access\"/\"serviceCatalog\"/\"endpoints\"/\"region\"/"      ) ;
        TN( tPathInternalURL , "\"access\"/\"serviceCatalog\"/\"endpoints\"/\"internalURL\"/" ) ;
        TN( tPathPublicURL   , "\"access\"/\"serviceCatalog\"/\"endpoints\"/\"publicURL\"/"   ) ;
    {

    }
        }
            while( ~hWalk ) ;
            do tPath += T((strokeS*)stPathP.upF(tinBaseP,hWalk))+T("/") ;
        {
        if( stPathP )
        handleC hWalk( tinBaseP , TAG( TAGiDnULL ) , ifcIDtYPEhANDLE_STACKwALK ) ;
    {
    TN( tPath , "" ) ;
    //CS:CODEsYNC: DUPLICATE CODE: 36138009 36138007

    cloudInfoS& rP = *(cloudInfoS*)hCloud.osF( ifcIDtYPEhANDLE_CLOUD ) ;
    bHandle.grabF( tinBaseP , TAG( TAGiDnULL ) ) ;

    _IO_

    }
        if( POOP ) return ;
        __Z( psttP ) ;
        if( POOP ) return ;
    {
    IFbEcAREFUL

    SCOOP
{
/*1*/voidT cloudC::valueF( tin0S& tinBaseP , cloudOpenScratchS& scrP , stackC& stPathP , const strokeS* const psttP )/*1*/

/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

