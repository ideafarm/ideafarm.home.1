
//
// Copyright (c) 1992-2025 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


//VISIBLE

REST
etThread.osProcessIdPhaseAdamF( tin0P , ifcIDpHASEhANDOFFoLD_SHUTTINGdOWN ) ;

HEAReNTER( ether )
etThread.strokeF( tin0P , T("press the enter key") ) ;

}
    etThread.strokeF( tin0P , T("the average time per 100 tries was ")+TT(timeB1,timeB2)+T("\r\n") ) ;
    timeB1 /= ( CtRIES / 0x100 ) ;
{
if( !timeB2 )
etThread.strokeF( tin0P , T("the elapsed time was               ")+TT(timeB1,timeB2)+T("\r\n") ) ;
etThread.osTimeSubtractF( tin0P , timeB1 , timeB2 , timeA1 , timeA2 ) ;
etThread.osTimeNowF( tin0P , timeB1 , timeB2 ) ;
ZE( sCountT , timeB2 ) ;
ZE( countT , timeB1 ) ;

while( cTries -- ) third.osDoNothingF( tin0P ) ;

etThread.osTimeNowF( tin0P , timeA1 , timeA2 ) ;
ZE( sCountT , timeA2 ) ;
ZE( countT , timeA1 ) ;

etThread.strokeF( tin0P , T("calling thirdC::osDoNothingF( tin0P ) ")+TF2(cTries,flFORMAT_UNSIGNED)+T(" (")+TF4(cTries,flFORMAT_UNSIGNED,0,10)+T(") times\r\n") ) ;
countT cTries = CtRIES ;

thirdC& third = ether ;

TODO

#define CtRIES 0x1000

/*1*/WAKEhIDE( "example.simplest.func.102008d.thirdC.osDoNothingF" )/*1*/
/**/
*/
\<A HREF=\"5.7010104.1.0.html\"\>definition\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2025 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

