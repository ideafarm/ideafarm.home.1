
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    DEL( prPostsCol2MorekeyOrOverride ) ;
    DEL( prPostsKeyWithId ) ;
    DEL( prPostsLabel ) ;
    }
        pushSnipF( tin0P , stBodyP , ifcIDsNIPpREDEFINED_MYaCCOUNT62 ) ; // CLOSES COL3; CLOSES ROW

        }
            }
                pushSnipF( tin0P , stBodyP , ifcIDsNIPpREDEFINED_MYaCCOUNTc2 ) ;
                if( bLocked ) pushSnipF( tin0P , stBodyP , ifcIDsNIPpREDEFINED_MYaCCOUNTb2 ) ;
                pushSnipF( tin0P , stBodyP , ifcIDsNIPpREDEFINED_MYaCCOUNTa2 ) ;
            {
            else
            if( bArea ) { pushSnipF( tin0P , stBodyP , ifcIDsNIPpREDEFINED_MYaCCOUNT13 ) ; }

            if( psttValueP ) pushSnipF( tin0P , stBodyP , psttValueP ) ;

            else { pushSnipF( tin0P , stBodyP , ifcIDsNIPpREDEFINED_MYaCCOUNT92 ) ; }
            }
                pushSnipF( tin0P , stBodyP , ifcIDsNIPpREDEFINED_MYaCCOUNT03 ) ; // idSnipInput2
                if( bLocked ) pushSnipF( tin0P , stBodyP , ifcIDsNIPpREDEFINED_MYaCCOUNTb2 ) ;
                pushSnipF( tin0P , stBodyP , ifcIDsNIPpREDEFINED_MYaCCOUNTf2 ) ; // idSnipInput2
            {
            if( bArea )

            pushSnipF( tin0P , stBodyP , *prPostsKeyWithId ) ;
            pushSnipF( tin0P , stBodyP , bArea ? ifcIDsNIPpREDEFINED_MYaCCOUNTe2 : ifcIDsNIPpREDEFINED_MYaCCOUNT82 ) ; // idSnipInput1
        {
        else
        }
                               pushSnipF( tin0P , stBodyP , ifcIDsNIPpREDEFINED_MYaCCOUNT53 ) ;
            if( psttValueP ) { pushSnipF( tin0P , stBodyP , ifcIDsNIPpREDEFINED_MYaCCOUNT43 ) ; }
                               pushSnipF( tin0P , stBodyP , ifcIDsNIPpREDEFINED_MYaCCOUNT33 ) ;
                               pushSnipF( tin0P , stBodyP , *prPostsKeyWithId ) ;
                               pushSnipF( tin0P , stBodyP , ifcIDsNIPpREDEFINED_MYaCCOUNT23 ) ;
        {
        if( bCheck )

        pushSnipF( tin0P , stBodyP , ifcIDsNIPpREDEFINED_MYaCCOUNT52 ) ; // CLOSES COL2; OPENS COL3; FOLLOWED BY INPUT ELEMENT
        }
            if( bCol2MoreButton ) pushSnipF( tin0P , stBodyP , ifcIDsNIPpREDEFINED_MYaCCOUNT42 ) ; // CLOSES INPUTBUTTON:DOMORE. ; FOLLOWED BY NULL
            pushSnipF( tin0P , stBodyP , *prPostsCol2MorekeyOrOverride ) ;
            }
                pushSnipF( tin0P , stBodyP , ifcIDsNIPpREDEFINED_MYaCCOUNT32 ) ; // OPENS INPUTBUTTON:DOMORE. ; FOLLOWED BY FIELDNAME
                pushSnipF( tin0P , stBodyP , TQ(idHelpMoreP) ) ;
                pushSnipF( tin0P , stBodyP , ifcIDsNIPpREDEFINED_MYaCCOUNT22 ) ; //OPENS SPAN:SMALL; FOLLOWED BY ?:WHATEVER
            {
            if( bCol2MoreButton )
        {
        if( prPostsCol2MorekeyOrOverride )
        pushSnipF( tin0P , stBodyP , ifcIDsNIPpREDEFINED_MYaCCOUNT12 ) ; //CLOSES COL1; OPENS COL2
        }
            pushSnipF( tin0P , stBodyP , ifcIDsNIPpREDEFINED_MYaCCOUNT02 ) ; //CLOSES SPAN; FOLLOWED BY NULL
            if( prPostsLabel ) pushSnipF( tin0P , stBodyP , *prPostsLabel ) ;
            pushSnipF( tin0P , stBodyP , ifcIDsNIPpREDEFINED_MYaCCOUNTf1 ) ; //WO SPACE; OPENS SPAN; FOLLOWED BY FIELD LABEL
            pushSnipF( tin0P , stBodyP , TQ(idHelpLabelP) ) ;
        {
        if( bWoth )
        pushSnipF( tin0P , stBodyP , ifcIDsNIPpREDEFINED_MYaCCOUNTe1 ) ; //OPENS ROW AND COL1; FOLLOWED BY ?:FIELD
    {
    if( prPostsKeyWithId )

    }
        if( psttw ) { ether.strMakeF( tin0P , LF , prPostsCol2MorekeyOrOverride , psttw , 0 , flSTRmAKE_PREFIXlENGTH ) ; ___( prPostsCol2MorekeyOrOverride ) ; }

        ;
                : 0
                ? (strokeS*)tKeyP
            : bWoth && bMore
            ? psttOldCol2P
        const strokeS* psttw = !bCol2MoreButton
    {

    boolT bCol2MoreButton = !psttOldCol2P || !psttOldCol2P->idAdam ;

    ether.strMakeF( tin0P , LF , prPostsKeyWithId  , tKeyP+TF3(++idBoxLathP,flFORMAT_UNSIGNED|flFORMAT_NObIGITvALUES|flFORMAT_FILLzE|flFORMAT_FOREIGN,8) , 0 , flSTRmAKE_PREFIXlENGTH ) ; ___( prPostsKeyWithId  ) ;

    if( bWoth ) { ether.strMakeF( tin0P , LF , prPostsLabel , tLabelP , 0 , flSTRmAKE_PREFIXlENGTH ) ; ___( prPostsLabel ) ; }

    const boolT bLocked = F(flagsP) & flSAYfIELDeDIT_LOCKED         ;
    const boolT bCheck  = F(flagsP) & flSAYfIELDeDIT_CHECKBOX       ;
    const boolT bMore   = F(flagsP) & flSAYfIELDeDIT_MOREaLLOWED    ;
    const boolT bArea   = F(flagsP) & flSAYfIELDeDIT_AREA           ;
    const boolT bWoth   = F(flagsP) & flSAYfIELDeDIT_WOTH           ;

    ZE( pbRefC* , prPostsCol2MorekeyOrOverride ) ;
    ZE( pbRefC* , prPostsKeyWithId ) ;
    ZE( pbRefC* , prPostsLabel ) ;
{
/*1*/voidT httpServerC::sayFieldEditF( tin0S& tin0P , stackC& stBodyP , countT& idBoxLathP , textC& tLabelP , textC& tKeyP , const flagsT flagsP , const countT idHelpLabelP , const countT idHelpMoreP , const strokeS* const psttValueP , const strokeS* const psttOldCol2P )/*1*/

/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

