
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


REST
etThread.osProcessIdPhaseAdamF( tinBaseP , ifcIDpHASEhANDOFFoLD_SHUTTINGdOWN ) ;

#endif

etThread.delF( tinBaseP , pbImage ) ;

}
    }
        //U: CONJ: LEAK pso
        }
            { ZE( countT , tid ) ; etThread.osThreadF( tinBaseP , tid , tmServeF , 0 , 0  , flTHREADlAUNCH_null , 0 , 0 , (countT)pso , (countT)pbImage , cbImage ) ; }
        {
        if( pso && !ether )
        //etThread.strokeF( tinBaseP , tX ) ;
        etThread.strokeF( tinBaseP , T("\r")+TF1(++idClient) ) ;

        sock.acceptF( tinBaseP , pso , idPortPeer , nnPeer , countTC() ) ;
        ZE( countT , idPortPeer ) ;
        nicNameC nnPeer ;
        ZE( socketC* , pso ) ;
    {
    while( !ether && !etThread )
    //TN( tX , "X" ) ;
    ZE( countT , idClient ) ;
    sock.listenF( tinBaseP ) ;
    sock.bindF( tinBaseP , 8004 ) ;
    socketC sock( tinBaseP , etThread , TAG( TAGiDnULL ) ) ;
{
if( !ether )

etThread.boxGetShadowF( tinBaseP , pbImage , cbImage , T("///d/tmp/globe.gif") ) ; ___( pbImage ) ;
ZE( countT , cbImage ) ;
ZE( byteT* , pbImage ) ;

LAUNCHhEAReNTER( tmHearEnterF , 8004 ) ;

etThread.strokeF( tinBaseP , T("MediaPlex Http Server\r\n\r\npress the Enter key to fire me\r\n\r\n") ) ;

#if defined( NEVERdEFINED )

TODO

DONE( tmServeF )
}
    DEL( pso ) ;

    etThread = 0 ;
    etThread.delF( tinBaseP , posti ) ;
    pso->readF( tinBaseP , posti , CBpOSTI ) ;
    etThread.newF( tinBaseP , LF , posti , CBpOSTI ) ; ___( posti ) ;
    ZE( osTextT* , posti ) ;

    etThread.delF( tinBaseP , psttOldCmd ) ;

    else if( !etThread.strCompareF( tinBaseP , psttOldCmd , T("click") ) ) pso->writeF( tinBaseP , (osTextT*)tClickReply ) ;
    }
        pso->writeF( tinBaseP , pbImage , cbImage ) ;
        pso->writeF( tinBaseP , (osTextT*)txt ) ;
        textC txt = T("HTTP/1.0 200\r\nContent-Type: image/gif\r\nContent-Length: ")+TF4(cbImage,0,0,0xa)+T("\r\n\r\n") ;
    {
    else if( !etThread.strCompareF( tinBaseP , psttOldCmd , T("image") ) )
    }
        pso->writeF( tinBaseP , (osTextT*)txt ) ;
        textC txt = T("HTTP/1.0 200\r\nContent-Type: text/html\r\nContent-Length: ")+TF4(tFace.csF(tinBaseP),0,0,0xa)+T("\r\n\r\n")+tFace ;
    {
    if( !etThread.strCompareF( tinBaseP , psttOldCmd , T("face") ) )

    static TN( tClickReply , "HTTP/1.0 302\r\nLocation: http://www.ideafarm.com/\r\n\r\n" ) ;
    static TN( tFace       , "<A HREF=\"http://city.center.ideafarm.com:8004/click\"><IMG HEIGHT=\"60\" WIDTH=\"60\" SRC=\"http://city.center.ideafarm.com:8004/image\"></A>" ) ;

    }
        //etThread.strokeF( tinBaseP , T("\"")+T(psttOldCmd)+T("\"\r\n") ) ;
        etThread.delF( tinBaseP , psttw ) ;
        etThread.strSubstringF( tinBaseP , psttOldCmd , idf , idl , psttw ) ;
        ZE( countT , idl ) ;
        countT idf = 2 ;
        etThread.delF( tinBaseP , psttl ) ;
        etThread.strWordF( tinBaseP , psttw , psttl , sttq , S1C(' ') , 2 ) ;
        strokeS sttq( (countT)0 , sc_IGNOREqUOTES ) ;
        ZE( strokeS* , psttw ) ;
        pso->readWoLineF( tinBaseP , psttl , 0x1000 ) ;
        ZE( strokeS* , psttl ) ;
    {
    ZE( strokeS* , psttOldCmd ) ;

    pso->etherF( tinBaseP , etThread ) ;
    countT   cbImage =           pTaskP->c3 ;
    byteT*   pbImage = (byteT*)  pTaskP->c2 ;
    socketC* pso     = (socketC*)pTaskP->c1 ;
{
if( pTaskP && pTaskP->c1 && pTaskP->c2 )
TASK( tmServeF )

#define CBpOSTI 0x10000

tmHEAReNTER( tmHearEnterF )

/*1*/WAKEhIDE( "mediaplex.http.server.globe" )/*1*/
/**/
*/
quits after one service
serves a constant page (ignores the parameter to GET)
listens to port 8004_9
http server
mediaplex
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

