
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


//VISIBLE

REST
etThread.osProcessIdPhaseAdamF( tinBaseP , ifcIDpHASEhANDOFFoLD_SHUTTINGdOWN ) ;

HEAReNTER( ether )
etThread.strokeF( tinBaseP , T("\r\n\r\npress the enter key") ) ;

}
    }
        etThread.strokeF( tinBaseP , T("lever = ")+TF1(lever)+T("  cv = ")+TF1(cv)+T("\r\n") ) ;
        sws >> cv ;
        ZE( countT , cv ) ;
    {
    while( sws )
{
for( lever = 0x100 ; lever <= 0x400 ; lever += 0x100 )

}
    etThread.strokeF( tinBaseP , T("idl = ")+TF1(idl)+T("    lever = ")+TF1(lever)+T("\r\n") ) ;
    countT lever = sws.leverF( tinBaseP , idl ) ;
{
for( countT idl = 1 ; idl <= cFlavors ; idl ++ )
etThread.strokeF( tinBaseP , T("cFlavors = ")+TF1(cFlavors)+T("\r\n") ) ;
countT cFlavors = sws.cFlavorsF( tinBaseP ) ;

}
    sws << 0x10 + lever ;
    sws << 0x20 + lever ;
    sws << 0x30 + lever ;
    sws << 0x40 + lever ;
{
for( lever = 0x100 ; lever <= 0x400 ; lever += 0x100 )

ZE( countT , ids ) ;

switchStackC sws( tinBaseP , ether , TAG( TAGiDnULL ) , flSTACKc_null , lever ) ;
ZE( countT , lever ) ;

TODO

/*1*/WAKEhIDE( "example.simplest.func.1210028.switchStackC.leverF" )/*1*/
/**/
*/
\<A HREF=\"5.be20104.1.0.html\"\>definition\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

