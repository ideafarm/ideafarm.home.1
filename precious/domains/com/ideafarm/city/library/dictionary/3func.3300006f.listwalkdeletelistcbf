
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    return flagsRC ;

    UNGRABtINaRGS( ifcIDtYPEtINaRGiNuSE_LIST )
    }
        flagsWalkRC |= flLISTwALKrETURNcODE_LISTINGdELETED ;
        flagsRC     |= flLISTwALKcALLbACKrETURNcODE_DELETE ; //I DO NOT ASSUME THAT idName IS UNIQUE AND WILL CONTINUE TO WALK THE ENTIRE DAD LIST
    {
    )
        )
            )
                ( !( F(flagsP) & flLISTdELETE_IFeMPTY ) || ((listC*)pListing)->isEmptyF() )
                &&
                ( !idName || idName == pListing->nameF() ) 
            (
            ||
            !( pListing->flagsF() & fliLISTINGc_MIXINlIST )
        (
        &&
        pListing
    (
    if

    flagsT& flagsWalkRC = *(flagsT*)((tin9S&)tinBaseP).ta.pushed.u.listWalk.util.pcP[ 2 ] ;
    flagsT flagsP       = ((tin9S&)tinBaseP).ta.pushed.u.listWalk.util.pcP[ 1 ] ;
    countT idName       = ((tin9S&)tinBaseP).ta.pushed.u.listWalk.util.pcP[ 0 ] ;
    listingC* pListing  = ((tin9S&)tinBaseP).ta.pushed.u.listWalk.cbf.pListingP ;
    flagsT flagsRC      = flLISTwALKcALLbACKrETURNcODE_DOnOTwALKmE ;
    GRABtINaRGS( ifcIDtYPEtINaRGiNuSE_LIST )

    const boolT  bOfSet = F(flagsPoolFormat) & flPOOLfORMAT_SETS ;
    const flagsT flagsPoolFormat = !((tin9S&)tinBaseP).pPoolUse ? 0 : PUSE.flagsPoolFormatF() ;

    if( tinBaseP.idTypeTin - ifcIDtYPEtIN_FULL ) { BLAMMOiD( 0x12121212 ) ; }
{
/*1*/flagsT listWalkDeleteListCBF( tin0S& tinBaseP )/*1*/

/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

