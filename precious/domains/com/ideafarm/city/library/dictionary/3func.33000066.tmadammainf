
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    return threadLocalStorageF( ifcIDtYPEtLS_KID , tmAdamMainF_workF , (countT)argP , 0 , 0 , 0 , 0 , "tmAdamMainF" ) ;
{
/*1*/TASK0PROTO( tmAdamMainF )/*1*/

}
    return rc ;

    }
        DEL( pTaskP ) ;
        }
    
            dec02AM( thirdC::os_cAllKidThreadsI_IF( tinP ) ) ;
    
            tinP.pag6 = pag6save ;
            tinP.pag5 = pag5save ;
            tinP.pag4 = pag4save ;
            tinP.pag3 = pag3save ;
            tinP.pag2 = pag2save ;
            tinP.pag1 = pag1save ;

            THREADmODE3rESTORE
            }
                DEL( pamP ) ;
                puseC( tinP , pamP->poolUsedByLauncher ) ;
            {
            THREADmODE3oN( flTHREADmODE3_UNLOCKpOOLiDENTITY )

            dec02AM( pamP->dadAg1.ctWatch ) ;
    
            __( rc - ifcEXITcODE_EXITpROCESSaOK ) ;
            }
                }
                    tinP.pPoolUse = pSave ;
                    rc = adamMainF( tinP , ifcIDtYPEtLS_WITHINpROCESS , 0 , 0 , 0 , 0 , ostoCmdLine , 0 ) ;
                    poolC* pSave = tinP.pPoolUse ; tinP.pPoolUse = 0 ; //U::BUG: I SHOULD NOT BE PASSING MY OWN tinP INTO adamMainF ; I SHOULD CT A VIRGIN tinNormalS
                {                                                      //20181112@2041: CONJ: THE NEXT LINE'S COMMENT IS WRONG.  THERE IS NOTHING WRONG WITH USING tinP, WHICH I THINK WAS CT BY A CALLER
                _IO_
            {

            if( postArgsP ) PUSE( tinP , postArgsP ) ;
        
            }
                OStEXTA(  ostoCmdLine , postArgsP )
                OStEXTAK( ostoCmdLine , " " )
            {
            if( postArgsP )
            OStEXTCF(  ostoCmdLine , idAdamP , 0 )
            OStEXT(   ostoCmdLine , 0x80 )
    
            adamGlobal6S* const pag6save = tinP.pag6 ; tinP.pag6 = pamP->pag6 ;
            adamGlobal5S* const pag5save = tinP.pag5 ; tinP.pag5 = pamP->pag5 ;
            adamGlobal4S* const pag4save = tinP.pag4 ; tinP.pag4 = pamP->pag4 ;
            adamGlobal3S* const pag3save = tinP.pag3 ; tinP.pag3 = pamP->pag3 ;
            adamGlobal2S* const pag2save = tinP.pag2 ; tinP.pag2 = pamP->pag2 ;
            adamGlobal1S* const pag1save = tinP.pag1 ; tinP.pag1 = pamP->pag1 ;

            parm_tmAdamMainF_S* pamP      = (parm_tmAdamMainF_S*)pTaskP->c3 ;
            osTextT*            postArgsP =            (osTextT*)pTaskP->c2 ;
            countT              idAdamP   =                      pTaskP->c1 ;
    
            _IO_
        {
        TINSL
    {
    if( pTaskP && pTaskP->c1 && pTaskP->c3 )
    ZE( countT , rc ) ;
    taskS* pTaskP = (taskS*)argP ;
{
countT tmAdamMainF_workF( countT argP )

/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

