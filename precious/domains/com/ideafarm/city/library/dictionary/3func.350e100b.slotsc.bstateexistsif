
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    return bExists ;
    }
        bExists = sexC::bStateExistsIF( tin0P , ostoName , expCbDropP , cbDropAdjustP , offs , idStateSpaceP ) ;
            
        OStEXTCF( ostoName , offs , '0' ) ;
        OStEXTAK( ostoName , ".slotsC.sex." ) ;
        OStEXTA(  ostoName , postNameP ) ;
        OStEXT(   ostoName , TUCK << 2 )
    {
    if( bStateExists ) for( countT offs = 0 ; !bExists && offs < CsLOTeXTENTS ; offs ++ )

    THREADmODE2rESTORE
    ;
        : ((tin123S&)tin0P).pEther->diskFileExistsF( tin0P , T("///ideafarm/ephemeral/backed.up.daily/domains/com/ideafarm/ipdos/memorySpaces/")+T(thirdC::postUserNameIF())+T("/")+TfORsTRING(((tin123S&)tin0P).pag1->idMemorySpace)+T("/stateSpaces/")+TfORsTRING(idStateSpaceP)+T("/")+T(postNameP)+T(".slotsC.sex.*") )
        ? 0
    boolT bStateExists = !idStateSpaceP
    THREADmODE2oN( flTHREADmODE2_ALLOWsTOPwHILEgRABBING )

    ZE( boolT , bExists ) ;
    puseC puse( tin0P , ifcIDpOOL_ADAMtEMP ) ;
    _IO_
{
/*1*/boolT slotsC::bStateExistsIF( tin0S& tin0P , const osTextT* const postNameP , const countT expCbDropP , const countT cbDropAdjustP , const countT idStateSpaceP )/*1*/

/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

