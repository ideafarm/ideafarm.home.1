
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    __( idDeathType ) ;
    __( value ) ;
      dosExecPgmF( tinP , countTC() , countTC() , value , idDeathType , "unzip.exe"  , ostoArgs ) ;
    //dosExecPgmF( tinP , countTC() , countTC() , value , idDeathType , "pkzipc.exe" , ostoArgs ) ;
    ZE( countT , idDeathType ) ;
    ZE( countT , value ) ;

    //}
    //    OStEXTA(  ostoArgs , postFile ) ;
    //    OStEXTAK( ostoArgs , " " ) ;
    //{
    //if( postFileP )
    //OStEXTA(  ostoArgs , postZipFile ) ;
    //OStEXTAK( ostoArgs , "-extract " ) ;
    //OStEXT(   ostoArgs , TUCK << 2 ) ;
    //PKZIP

    }
        OStEXTA(  ostoArgs , postFile ) ;
        OStEXTAK( ostoArgs , " " ) ;
    {
    if( postFileP )
    OStEXTA(  ostoArgs , postZipFile ) ;
    OStEXTAK( ostoArgs , "-ojqq " ) ;
    OStEXT(   ostoArgs , TUCK << 2 ) ;
    //INFOZIP

    if( postZipFile[ costZipfile - 1 ] == '\\' ) postZipFile[ costZipfile - 1 ] = 0 ;
    if( postFileP && postFile[    costFile    - 1 ] == '\\' ) postFile[    costFile    - 1 ] = 0 ;
    countT costZipfile = c_strlenIF( tinP , postZipFile ) ;
    countT costFile    = !postFileP ? 0 : c_strlenIF( tinP , postFile    ) ;
    c_strcpyIF( tinP , postZipFile , postZipFileP ) ;
    if( postFileP ) c_strcpyIF( tinP , postFile    , postFileP    ) ;
    osTextT postZipFile[ TUCK << 1 ] ;
    osTextT postFile[    TUCK << 1 ] ;

    }
        if( POOP ) return ;
        FV( flUNZIP , flagsP ) ;
        __Z( *postZipFileP ) ;
        if( POOP ) return ;
        __Z( postZipFileP ) ;
        if( postFileP ) {__Z( *postFileP ) ; }
        //__Z( postFileP ) ;
        if( POOP ) return ;
    {
    IFbEcAREFUL
{
/*1*/voidT thirdC::diskUnzipOldF( tinNormalS& tinP , const osTextT* const postFileP , const osTextT* const postZipFileP , const flagsT flagsP )/*1*/

/**/
*/
 postZipFileP
  can be relative path (use hoverC to set current directory and disk)
  if not 0 then can include wildcard characters and all matching filenames in the zip file will be unzipped
  can be 0
 postFileP
 tinP
arguments
if the file name contains a path, the path portion will be discarded
the file obtained will be placed in the current directory
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

