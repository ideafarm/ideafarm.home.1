
REST

etherC::loafIF( tinBaseP ) ;
etThread.traceF( tinBaseP , T("ok") ) ;

}
    //++ s ; ether.osSleepF( tinBaseP , TOCK ) ;

    }
        break ;

        }
            etThread.delF( tinBaseP , pbi ) ;
        
            }
                etThread.traceF( tinBaseP , T("caught ")+TF2(idSay,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED)+T(" from port ")+TF2(idpi,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED)+T(" of ")+T(idhi) ) ;
                countT& idSay = *(countT*)pbi ;
            {
            if( !ether && cbi >= sizeof( countT ) )
        
            sock.readF( tinBaseP , pbi , cbi , idpi , idhi ) ;
            nicNameC idhi ;
            ZE( countT , idpi ) ;
            ZE( countT , cbi ) ;
            ZE( byteT* , pbi ) ;
        {

        }
            sock.writeF( tinBaseP , idPortTo , pnnToRackServer[ offn ] /*nicNameC()*/ , (byteT*)&idSayLath , sizeof idSayLath ) ;               // 64222_9
            etThread.traceF( tinBaseP , T("throwing ")+TF2(++idSayLath,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED)+T(" from port ")+TF2(idPortBind,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED)+T(" to port ")+TF2(idPortTo,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED)+T(" of ")+T(pnnToRackServer[offn]) ) ;
        {
        if( idPass == 1 )
        //G:if( !!( idPass % 2 ) )
    {
    for( countT offn = 0 ; offn < cnnToRackServer ; offn ++ )

    idPass ++ ;
{
while( !ether )
ZE( countT , idPass ) ;
sleepC s( tinBaseP , TAG( TAGiDnULL ) ) ;

countT idSayLath  = 0x30000 ;

countT idPortTo = 0xfade ;

idPortBind = sock.bindF( tinBaseP , idPortBind ) ;

countT idPortBind = 0xfade ;

socketC sock( tinBaseP , etThread , TAG( TAGiDnULL ) , ifcSOCKETtYPE_DATAgRAM ) ;

socketC::nicNameIF( tinBaseP , etThread , pnnToRackServer , cnnToRackServer , psttToRackServer ) ;
ZE( countT    , cnnToRackServer ) ;
ZE( nicNameC* , pnnToRackServer ) ;

strokeS* psttToRackServer   = tToRackServer ;
TN( tToRackServer , "2001:4802:7805:104:be76:4eff:fe20:179f" ) ;

TODO

/*1*/WAKEsHOWtEXT( "dut.throw.catch.reply.udp.datagram" )/*1*/
/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
