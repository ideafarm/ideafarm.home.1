
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


REST

etThread.strokeF( tinBaseP , T("\f") ) ;

}
    ++ s ; ether.osSleepF( tinBaseP , TOCK * 4 ) ;
    sleepC s( tinBaseP , TAG( TAGiDnULL ) ) ;

    etThread.strokeF( tinBaseP , ( ++ idCycle ) % 2 ? tSay : tSayErase ) ;
{
while( !ether )
ZE( countT , idCycle ) ;

TN( tSayErase , "" ) ; tSayErase = tSay + T("\f") ;

;
    //S2(0,scOld_TRACEoFF)
    S2(0,scOld_POPfRAME)
        T("X\r\nXXX")+
        T("X")+
        button+
        T("XXX\r\nX")+
    S3(3.0,scOld_mmFRAMEcELLS,3.0)+
    S3(1.0,scOld_mmPADfORsADAMfRAMES,1.0)+
    //S2(0,scOld_TRACEoN)+
    T("")+
tSay = 
TN( tSay , "" ) ;

win.baton.ungrabF( tinBaseP ) ;
win.cAnimateArg = (countT)&c3a ;
win.pAnimateCBF = animateCBF ;
win.baton.grabF( tinBaseP , TAG( TAGiDnULL ) ) ;
windowOldC& win = *thirdC::pWinRootIF() ;

count3S c3a( (countT)&button , (countT)&buttonv1 , (countT)&buttonv2 ) ;

tcButtonC button(  tinBaseP , tcStateCBF         , 0 , flFeatures  , 0 , 0 , 1 ) ;
tcButtonC buttonv2( tinBaseP , tcStateVolatileCBF , 0 , flFeaturesv , 0 , T("Y") ) ;
tcButtonC buttonv1( tinBaseP , tcStateVolatileCBF , 0 , flFeaturesv , 0 , T("X") ) ;
flagsT flFeatures     = flFeaturesCore ;
flagsT flFeaturesv    = flFeaturesCore & ~( F(flTCfEATURE_DRAGGABLE) ) ;
flagsT flFeaturesCore = flTCfEATURE_DRAGGABLE | flTCfEATURE_FLYOVER | flTCfEATURE_FLYOVERhIGHLIGHT | flTCfEATURE_MOUSE | flTCfEATURE_HOTkEY | flTCfEATURE_FRAME ;

TODO

}
    if( etherP && wP.bDoomed && ((tinNormalS&)tinBaseP).fingerprint ) ;
    }
        button.setF( tinBaseP , T("")+S3(1,scOld_ccFRAMEfORsADAMfRAMES,1)+S2(0,scOld_cPUSHrIPPLES)+(idIn%2?buttonv1:buttonv2)+S2(0,scOld_POPrIPPLES)+S2(0,scOld_POPfRAME) ) ;
        tcButtonC& buttonv2 = *(tcButtonC*)c3a.c3 ;
        tcButtonC& buttonv1 = *(tcButtonC*)c3a.c2 ;
        tcButtonC& button   = *(tcButtonC*)c3a.c1 ;
        count3S& c3a = *(count3S*)cArgP ;

        countT idIn = 1 + incv02AM( idInLath ) ;
        static countT idInLath ;
    {
    if( !( idCycleP % PERIOD ) )
{
voidT animateCBF( tinBaseS& tinBaseP , etherC& etherP , paperBackC& backP , const countT idCycleP , const countT cArgP )

#define PERIOD 0x10

}
    if( ((tinNormalS&)tinBaseP).fingerprint && etherP && cArgP && idTypeCallP && pcNotesP && flTcStateNewP && flTcStateOldP ) ;

    }
        }
        {
        case ifcIDtYPEsTROKEcALLbACK_HOTkEY :
        }
            if( idTool != ifcIDtYPEtOOL_MOUSEbUTTONlEFT || idAction != ifcIDtYPEaCTION_DOWN ) break ;

            const countT& idAction = pcNotesP[ 3 ] ;
            const countT& idTool   = pcNotesP[ 2 ] ;
        {
        case ifcIDtYPEsTROKEcALLbACK_MOUSE :
    {
    switch( idTypeCallP )
{
voidT tcStateCBF( tinBaseS& tinBaseP , etherC& etherP , const countT cArgP , const countT idTypeCallP , const countT idEventP , const countT* const pcNotesP , const flagsT flTcStateNewP , const flagsT flTcStateOldP )

}
    if( ((tinNormalS&)tinBaseP).fingerprint && etherP && cArgP && idTypeCallP && pcNotesP && flTcStateNewP && flTcStateOldP ) ;

    }
        }
            FIREmYSELF ;
            //LOGrAW( T("fired by ")+T(processGlobal4I.mapSadamCall(idTypeCallP))+T("\r\n") ) ;
        {
        case ifcIDtYPEsTROKEcALLbACK_HOTkEY :
        }
            if( idTool != ifcIDtYPEtOOL_MOUSEbUTTONlEFT || idAction != ifcIDtYPEaCTION_DOWN ) break ;

            const countT& idAction = pcNotesP[ 3 ] ;
            const countT& idTool   = pcNotesP[ 2 ] ;
        {
        case ifcIDtYPEsTROKEcALLbACK_MOUSE :
    {
    switch( idTypeCallP )
{
voidT tcStateVolatileCBF( tinBaseS& tinBaseP , etherC& etherP , const countT cArgP , const countT idTypeCallP , const countT idEventP , const countT* const pcNotesP , const flagsT flTcStateNewP , const flagsT flTcStateOldP )

/*1*/WAKEsHOW( "example.other.snip.00300d3.tcButtonC.volatile.button" )/*1*/
/**/
*/
this exemplifies a button in volatile text
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

