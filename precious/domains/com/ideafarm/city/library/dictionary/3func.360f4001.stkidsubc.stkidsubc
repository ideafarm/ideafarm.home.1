
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    }
        if( POOP ) POOPR

        }
            if( idSub ) *this << idSub ;
            sIn >> idSub ;
            ZE( countT , idSub ) ;
        {
        while( cIdSub -- )

        sIn >> cIdSub ;
        ZE( countT , cIdSub ) ;

        __( idFormat - 1 ) ;
        sIn >> idFormat ;
        ZE( countT , idFormat ) ;
    
        __( finger - FINGERnEG_LISTsERVERrEPLY ) ;
        sIn >> finger ;
        ZE( countT , finger ) ;
    
        sock.readF( tin0P , sIn ) ;
        soulC sIn( tin0P , TAG( TAGiDnULL ) ) ;
    
        sock.writeF( tin0P , sOut ) ;
        sOut << idAccP ;
        sOut << (countT)ifcIDcMDlISTsERVERiDaCCOUNTdESCRIPTION_ENUMERATEiDsUB ;
        sOut << (countT)1 ;
        sOut << (countT)FINGERnEG_LISTsERVERcMD ;
        soulC sOut( tin0P , TAG( TAGiDnULL ) ) ;
    
        sock.connectF( tin0P , homeS::homeIF().idPortListServerIdAccountDescription ) ;
        socketC sock( tin0P , *((tin1S&)tin0P).pEtScratch , TAG( TAGiDnULL ) ) ;

        SCOOPS
    {
    IFsCRATCH
    _IO_

    }
        if( POOP ) return ;
        __Z( idAccP ) ;
        if( POOP ) return ;
    {
    IFbEcAREFUL
{
stackC( tin0P , *((tin1S&)tin0P).pEther , TAG( TAGiDnULL ) , flSTACKc_DOnOTsERIALIZE | flSTACKc_XRAY )
/*1*/stkIdSubC::stkIdSubC( tin0S& tin0P , const countT idAccP ) :/*1*/

/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

