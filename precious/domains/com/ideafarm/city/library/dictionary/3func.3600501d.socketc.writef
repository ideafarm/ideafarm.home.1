
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    dec02AM( cFunctionsPending ) ;
    }
    
        ((tin9S&)tinBaseP).pag3->_socketC_.grab.ungrabF( tinBaseP ) ;
        pOdometer->cbWrite += ((tin9S&)tinBaseP).odoSockCbWrite - _odoSockCbWriteOpen ;
        pOdometer->cbRead  += ((tin9S&)tinBaseP).odoSockCbRead  - _odoSockCbReadOpen  ;
        pOdometer = (sockOdometerS*)&(countT&)*((tin9S&)tinBaseP).pag3->_socketC_.pSwOdometer ;
        ((tin9S&)tinBaseP).pag3->_socketC_.nnLever = nnPeer = nnUse ;
        ((tin9S&)tinBaseP).pag3->_socketC_.grab.grabF( tinBaseP , TAG( TAGiDnULL ) ) ;
    
        bWrite.ungrabF( tinBaseP ) ;
    
        if( idleTimeAllowedWrite ) FRESHtIMEaTOMIC( *pEther , timeLathWrite.time1 , timeLathWrite.time2 )
    
        THREADmODE2rESTORE
        }
            pEther->sockWriteF( tinBaseP , handle , idPortP , nnUse , (byteT*)&idTypeP , sizeof idTypeP ) ;
            //etherC::etRockIF( tinBaseP ).traceF( tinBaseP , T("flSOCKETc_CRYPTfOREIGNsSL is not set") ) ;
        {
        else
        }
            pEther->sockWriteF( tinBaseP , handle , idPortP , nnUse , (byteT*)&idTypeP , sizeof idTypeP ) ;
            armSslC armMe( tinBaseP , flagsOpenSslFails ) ;
            //etherC::etRockIF( tinBaseP ).traceF( tinBaseP , T("flSOCKETc_CRYPTfOREIGNsSL is     set") ) ;
        {
        if( F(flags) & flSOCKETc_CRYPTfOREIGNsSL ) 
        THREADmODE2oN( flTHREADmODE2_ALLOWsTOPwHILEgRABBING )

        bWrite.grabF( tinBaseP , TAG( TAGiDnULL ) ) ;
    
        const countT _odoSockCbWriteOpen = ((tin9S&)tinBaseP).odoSockCbWrite ;
        const countT _odoSockCbReadOpen  = ((tin9S&)tinBaseP).odoSockCbRead  ;
    
        nicNameC& nnUse = ~nnMulticast ? nnMulticast : nicNameP ;
    
        _IO_
    
        }
            }
                return ;
                dec02AM( cFunctionsPending ) ;
            {
            if( *pEther )









            __Z( idTypeP ) ;
            __Z( idPortP ) ;
            __( ~nnMulticast && ~nicNameP ) ;
            __( idType != ifcSOCKETtYPE_DATAgRAM ) ;

            }
                return ;
                dec02AM( cFunctionsPending ) ;
            {
            if( *pEther )
        {
        IFbEcAREFUL    
        SCOOPP
    {
    inc02AM( cFunctionsPending ) ;
{
/*1*/voidT socketC::writeF( tin0S& tinBaseP , const countT idPortP , const nicNameC nicNameP , const countT idTypeP )/*1*/

/**/
*/
\<A HREF=\"5.1070020.1.0.html\"\>definition\</A\>
\<A HREF=\"6.$writeF.0.html\"\>instances\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

