
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    if( pBaton ) pBaton->ungrabF( tinBaseP ) ;
    }
        while( !third && ~hDown ) ;
        }
            }
                }
                    stackk.extractF( 0 , tinBaseP ) ;
                    _IO_
                {

                }
                    default                            : { _IO_ __( idLeverType ) ; __1                                              ; break ; }
                    case ifcIDtYPElEVER_PTR_soulC      : { _IO_ soulC*    pcl =    (soulC*)*(countT*)pbLB ; DEL( pcl )               ; break ; }
                    case ifcIDtYPElEVER_BLOBdOOMED           : { _IO_ byteT*    pbl =    (byteT*)*(countT*)pbLB ; third.delF( tinBaseP , pbl ) ; break ; }
                    case ifcIDtYPElEVER_PTR_nicNameC   : { _IO_ nicNameC* pcl = (nicNameC*)*(countT*)pbLB ; third.delF( tinBaseP , pcl ) ; break ; }
                    case ifcIDtYPElEVER_PTR_osTextT    : { _IO_ osTextT*  pcl =  (osTextT*)*(countT*)pbLB ; third.delF( tinBaseP , pcl ) ; break ; }
                    case ifcIDtYPElEVER_PTR_plateC     : { _IO_ plateC*   pcl =   (plateC*)*(countT*)pbLB ; DEL( pcl )               ; break ; }
                    case ifcIDtYPElEVER_PTR_strokeS    : { _IO_ strokeS*  pcl =  (strokeS*)*(countT*)pbLB ; third.delF( tinBaseP , pcl ) ; break ; }
                    case ifcIDtYPElEVER_PTR_countT     : { _IO_ countT*   pcl =   (countT*)*(countT*)pbLB ; third.delF( tinBaseP , pcl ) ; break ; }
                    case ifcIDtYPElEVER_PTR_BLOB       : { _IO_ byteT*    pbl =    (byteT*)*(countT*)pbLB ; third.delF( tinBaseP , pbl ) ; break ; }
                    case ifcIDtYPElEVER_PTR_lenPrefixedCountT :
                    case ifcIDtYPElEVER_countT         : { _IO_                                                                        break ; }
                    case ifcIDtYPElEVER_tid            :
                    }
                        break ;
                        third.delF( tinBaseP , *(countT**)&ppsttl ) ;
                        }
                            while( ppsttl[ off ] ) third.delF( tinBaseP , ppsttl[ off ++ ] ) ;
                            ZE( countT , off ) ;
                        {
                        if( ppsttl )
                        strokeS** ppsttl = *(strokeS***)pbLB ;
                        _IO_
                    {
                    case ifcIDtYPElEVER_PTR_ptrStrokeS :
                {
                switch( idLeverType )
                _IO_
            {
            if( pbLB && !((countT*)pbLB)[ offcP ] )
            byteT* pbLB = (byteT*)&stackk.downF( tinBaseP , hDown ) ;
            _IO_
        {
        do
        handleC hDown( tinBaseP , TAG( TAGiDnULL ) , ifcIDtYPEhANDLE_STACKwALK ) ;
        _IO_
    {
    if( stackk )

    else if( osTidOwner != ((tinNormalS&)tinBaseP).osTid && !bDying && !( F(stackk.flagsF(tinBaseP)) & flSTACKc_ALLOWmULTIPLEuNSERIALIZED ) ) BLAMMO ;
    else if( !osTidOwner ) osTidOwner = ((tinNormalS&)tinBaseP).osTid ;
    if( pBaton ) pBaton->grabF( tinBaseP , TAG( TAGiDnULL ) ) ;

    _IO_
    
    }
        if( third ) return ;
        __( offcP > cbData / sizeof( countT ) ) ;
        if( third ) return ;
    {
    IFbEcAREFUL
    SCOOP
{
/*1*/voidT switchC::freeNullsF( tinBaseS& tinBaseP , const countT offcP )/*1*/

/**/
*/
  2: ooth countT object of data
  1: woth countT object of data
  0: the lever value
 offcP
 tinBaseP
arguments
for speed, only a single countT object in the data (or the lever) is inspected
\<A HREF=\"5.1200023.1.0.html\"\>definition\</A\>
\<A HREF=\"6.$freeNullsF.0.html\"\>instances\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

