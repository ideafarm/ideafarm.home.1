
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    putNegAM( *(countT*)&third.fingerprint , FINGERnEG_THIRDczOMBIE ) ;

    }
        ((tinFullS&)tinBaseP).pag1->_thirdC_.pThPrime = 0 ;

        DEL( ((tinFullS&)tinBaseP).pag1->_thirdC_.pThLongLasting ) ;
        DELzOMBIE( ((tinFullS&)tinBaseP).pag1->_thirdC_.phCritSec ) ;

        }
            DEL( pswd ) ;
            ((tinFullS&)tinBaseP).pag4->_thirdC_grab_lOsTid.ungrabF( tinBaseP ) ;
            }
                }
                    osh = 0 ;
                    #endif
                        thirdC::osHandleCloseIF( osh ) ; //U::USE A handleC OBJECT TO DO THIS
                    #if defined( __NT__ )
                {
                if( osh )
                countT& osh = *pswd ;
                ((tinFullS&)tinBaseP).pag1->_thirdC_.lOsTid = pswd->leverF( tinBaseP , idf ) ;
            {
            for( countT idf = 1 ; idf <= cFlavors ; idf ++ )
            countT cFlavors = pswd->cFlavorsF( tinBaseP ) ;
            ((tinFullS&)tinBaseP).pag4->_thirdC_grab_lOsTid.grabF( tinBaseP , TAG( TAGiDnULL ) ) ;

            ((tinFullS&)tinBaseP).pag1->_thirdC_.pSwThreadHandle = 0 ; //GRAB WILL USE ME IF I AM NOT ZE
            switchC* pswd = ((tinFullS&)tinBaseP).pag1->_thirdC_.pSwThreadHandle ;
        {
        if( ((tinFullS&)tinBaseP).pag1->_thirdC_.pSwThreadHandle )

        }
            DEL( pswd ) ;
            ((tinFullS&)tinBaseP).pag4->_thirdC_grab_lOsPid.ungrabF( tinBaseP ) ;
            }
                }
                    osh = 0 ;
                    #endif
                        thirdC::osHandleCloseIF( osh ) ; //U::USE A handleC OBJECT TO DO THIS
                     #if defined( __NT__ )
                {
                if( osh )
                countT& osh = *pswd ;
                ((tinFullS&)tinBaseP).pag1->_thirdC_.lOsPid = pswd->leverF( tinBaseP , idf ) ;
            {
            for( countT idf = 1 ; idf <= cFlavors ; idf ++ )
            countT cFlavors = pswd->cFlavorsF( tinBaseP ) ;
            ((tinFullS&)tinBaseP).pag4->_thirdC_grab_lOsPid.grabF( tinBaseP , TAG( TAGiDnULL ) ) ;

            ((tinFullS&)tinBaseP).pag1->_thirdC_.pSwProcessHandle = 0 ; //GRAB WILL USE ME IF I AM NOT ZE
            switchC* pswd = ((tinFullS&)tinBaseP).pag1->_thirdC_.pSwProcessHandle ;
        {
        if( ((tinFullS&)tinBaseP).pag1->_thirdC_.pSwProcessHandle )

        DEL( ((tinFullS&)tinBaseP).pag1->_thirdC_.pSwKillSocket ) ; //ASSUME: s_shutdown1F HAS BEEN CALLED
        DEL( ((tinFullS&)tinBaseP).pag1->_thirdC_.pStkTasksWhenQuitting ) ;
        DEL( ((tinFullS&)tinBaseP).pag1->_thirdC_.pStk_pThird ) ;
        THREADmODE4rESTORE
        DEL( ((tinFullS&)tinBaseP).pag1->_thirdC_.pSwFileOpen ) ;
        THREADmODE4oN( flTHREADmODE4_POOLaLLOCATEfROMhEAP )     // THIS IS NEEDED BECAUSE pSwFileOpen WILL ALLOCATE FROM POOL, WHICH WOULD CAUSE NONMONOTONIC GRAB
    {
    if( ((tinFullS&)tinBaseP).pag1->_thirdC_.pThPrime == &third )
    TINSL

    }
        third.thirdDiscardTinF() ;
        thirdC::dosCloseThreadResourcesIF( tinBaseP ) ;
        TINSL
    {
    if( F(third.flagsMode) & flTHIRDmODE_TINoWNER )
{
/*1*/thirdInitC::~thirdInitC( voidT )/*1*/

/**/
*/
\<A HREF=\"5.1540002.1.0.html\"\>definition\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

