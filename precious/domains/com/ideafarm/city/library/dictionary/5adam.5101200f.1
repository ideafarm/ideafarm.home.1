
//
// Copyright (c) 1992-2025 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//

                            
REST

etherC::loafIF( tin0P ) ;
etThread.traceF( tin0P , T("ok") ) ;

osFirewallBlockF( tin0P , etThread , LF , nnBad , "thank you, Jesus, for coming to teach us how to live!" ) ;

static nicNameC nnBad = socketC::nicNameIF( tin0P , etThread , T("1.1.1.1") ) ;


TODO



//
// Copyright (c) 1992-2025 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    __( rc ) ;    
    countT rc = thirdP.c_systemIF( tin0P , tCommand ) ;

    if( postDescriptionP ) tCommand += T(" description=\"")+T(postDescriptionP)+T("\"") ;
    TN( tCommand , "" ) ; tCommand = T("netsh advfirewall firewall add rule name=\"IPDOS(tm) osFirewallBlockF ")+tnn+tb+tTimeOld+tb+TTF(timeN1,timeN2)+T("\" dir=in action=block remoteip=")+tnn+T(" profile=any") ;

    TN( tnn , ""  ) ; tnn = T(nnP) ;
    TN( tb  , " " ) ;

    }
        thirdP.delF( tin0P , psttSay ) ;
        tTimeOld = T(psttSay) ;
        ((tin1S&)tin0P).pEther->strFromOldTimeF( tin0P , psttSay , mm , hh , d , m , y , dow , 0 ) ; ___( psttSay ) ;
        ZE( strokeS* , psttSay ) ;
    {
    TN( tTimeOld , "" ) ;

    thirdP.osTimeToOldTimeF( tin0P , ms , ss , mm , hh , d , m , y , dow , timeN1 , timeN2 , flOStIMEtOoLDtIME_null         ) ;
    ZE(  countT , dow ) ;
    ZE( sCountT , y   ) ;
    ZE(  countT , m   ) ;
    ZE(  countT , d   ) ;
    ZE(  countT , hh  ) ;
    ZE(  countT , mm  ) ;
    ZE(  countT , ss  ) ;
    ZE(  countT , ms  ) ;

    thirdP.osTimeNowF( tin0P , timeN1 , timeN2 ) ;
    ZE( sCountT , timeN2 ) ;
    ZE(  countT , timeN1 ) ;

    _IO_

    }
        if( POOP ) return ;
        __Z( ((tin1S&)tin0P).pEther ) ;
        __( !nnP ) ;
        __Z( idiFileP ) ;
        __Z( idLineP  ) ;
        if( POOP ) return ;
    {
    IFbEcAREFUL
//    SCOOP
{
/*1*/voidT /*thirdC::*/ osFirewallBlockF( tin0S& tin0P , thirdC& thirdP , const countT idLineP , const countT idiFileP , const nicNameC& nnP , const osTextT* const postDescriptionP = 0 )/*1*/

//netsh advfirewall firewall add rule name=\"000b48d3.b1a350dc attacker 1.2.3.4\" dir=in action=block remoteip=1.2.3.4/32 description=\"myIdAdam myComment\" profile=any

/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2025 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//



/*1*/WAKEhIDE( "doodle" )/*1*/
/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2025 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
