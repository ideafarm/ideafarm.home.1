
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


REST

etherC::loafIF( tinP ) ;
etThread.traceF( tinP , T("ok") ) ;

tinP.pcUtility[ 0 ] -- ;
}
    countT foo = 2 ;

    }
        grabitC grabitC4( tinP , TAG( TAGiDnULL ) , pbFoo , ifcIDgRABITbIT_00 , *(grabitC*)0 , 0 , 0 , 0 , flagsUse , 0 , 0 ) ;
        grabitC grabitC3( tinP , TAG( TAGiDnULL ) , pbFoo , ifcIDgRABITbIT_00 , *(grabitC*)0 , 0 , 0 , 0 , flagsUse , 0 , 0 ) ;
        grabitC grabitC2( tinP , TAG( TAGiDnULL ) , pbFoo , ifcIDgRABITbIT_00 , *(grabitC*)0 , 0 , 0 , 0 , flagsUse , 0 , 0 ) ;
        grabitC grabitC1( tinP , TAG( TAGiDnULL ) , pbFoo , ifcIDgRABITbIT_00 , *(grabitC*)0 , 0 , 0 , 0 , flagsUse , 0 , 0 ) ;
    {
    pbFoo = &bFoo ;

    }
        grabitC grabitB4( tinP , TAG( TAGiDnULL ) , pbFoo , ifcIDgRABITbIT_00 , *(grabitC*)0 , 0 , 0 , 0 , flagsUse , 0 , 0 ) ;
        grabitC grabitB3( tinP , TAG( TAGiDnULL ) , pbFoo , ifcIDgRABITbIT_00 , *(grabitC*)0 , 0 , 0 , 0 , flagsUse , 0 , 0 ) ;
        grabitC grabitB2( tinP , TAG( TAGiDnULL ) , pbFoo , ifcIDgRABITbIT_00 , *(grabitC*)0 , 0 , 0 , 0 , flagsUse , 0 , 0 ) ;

        grabitB1.ungrabF( tinP ) ;
        grabitB1.grabF( tinP , TAG( TAGiDnULL ) ) ;
        grabitC grabitB1( tinP , TAG( TAGiDnULL ) , pbFoo , ifcIDgRABITbIT_00 , *(grabitC*)0 , 0 , 0 , 0 , flagsUse , 0 , 0 ) ;
    {
    ZE( byteT* , pbFoo ) ;

    }
        grabitC grabitA4( tinP , TAG( TAGiDnULL ) , bFoo , ifcIDgRABITbIT_00 , *(grabitC*)0 , 0 , 0 , 0 , flagsUse , 0 , 0 ) ;
        grabitC grabitA3( tinP , TAG( TAGiDnULL ) , bFoo , ifcIDgRABITbIT_00 , *(grabitC*)0 , 0 , 0 , 0 , flagsUse , 0 , 0 ) ;
        grabitC grabitA2( tinP , TAG( TAGiDnULL ) , bFoo , ifcIDgRABITbIT_00 , *(grabitC*)0 , 0 , 0 , 0 , flagsUse , 0 , 0 ) ;
        grabitC grabitA1( tinP , TAG( TAGiDnULL ) , bFoo , ifcIDgRABITbIT_00 , *(grabitC*)0 , 0 , 0 , 0 , flagsUse , 0 , 0 ) ;
    {
    ZE( byteT , bFoo ) ;

    }
        grabitC grabitA4( tinP , TAG( TAGiDnULL ) , cFoo , ifcIDgRABITbIT_00 , *(grabitC*)0 , 0 , 0 , 0 , flagsUse , 0 , 0 ) ;
        grabitC grabitA3( tinP , TAG( TAGiDnULL ) , cFoo , ifcIDgRABITbIT_00 , *(grabitC*)0 , 0 , 0 , 0 , flagsUse , 0 , 0 ) ;
        grabitC grabitA2( tinP , TAG( TAGiDnULL ) , cFoo , ifcIDgRABITbIT_00 , *(grabitC*)0 , 0 , 0 , 0 , flagsUse , 0 , 0 ) ;
        grabitC grabitA1( tinP , TAG( TAGiDnULL ) , cFoo , ifcIDgRABITbIT_00 , *(grabitC*)0 , 0 , 0 , 0 , flagsUse , 0 , 0 ) ;
    {
    ZE( countT , cFoo ) ;

    THREADmODE3rESTORE
    }
        }
            grabitC grabitL4( tinP , TAG( TAGiDnULL ) , aptFoo , *(grabitC*)0 , 0 , 0 , 0 , flagsUse , 0 , 0 ) ;
            grabitC grabitL3( tinP , TAG( TAGiDnULL ) , aptFoo , *(grabitC*)0 , 0 , 0 , 0 , flagsUse , 0 , 0 ) ;
            grabitC grabitL2( tinP , TAG( TAGiDnULL ) , aptFoo , *(grabitC*)0 , 0 , 0 , 0 , flagsUse , 0 , 0 ) ;
            grabitC grabitL1( tinP , TAG( TAGiDnULL ) , aptFoo , *(grabitC*)0 , 0 , 0 , 0 , flagsUse , 0 , 0 ) ;
        {
        listingC aptFoo( tinP , aptRoot , flLISTINGc_null ) ;
    {
    THREADmODE3oN( flTHREADmODE3_ALLOWcONSTRUCTIONoFlISTINGc | flTHREADmODE3_ALLOWdESTRUCTIONoFlISTINGc ) ;

    listC& aptRoot = *(listC*)pb_aptRoot ;
    thirdC::c_memsetIF( tinP , pb_aptRoot , sizeof pb_aptRoot ) ;
    byteT pb_aptRoot[ sizeof( listC ) ] ;

    const flagsT flagsUse = /*flGRABITc_SUPPRESScTdT |*/ flGRABITc_SHARElAYER | flGRABITc_UNKEYED | flGRABITc_RECURSEuSINGtINs ;
{
tinP.pcUtility[ 0 ] ++ ;

TODO

/*1*/WAKEsHOWtEXT( "dut.grabitC.as.used.by.listC" )/*1*/
/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
