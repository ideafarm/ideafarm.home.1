
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


REST

etherC::loafIF( tinP ) ;
//etThread.osSuspendF( tinP , 0 , 0 , nicNameC() ) ;
etThread.traceF( tinP , T("ok") ) ;

}
    }
        while( ~hWalk ) ;
        }
            if( !etThread.diskFileExistsF( tinP , tTest ) ) etThread.traceF( tinP , T("does not exist in archive [ys]:    ")+T(psttys) ) ;

            TN( tTest , "" ) ; tTest = tPrefix+T(psttys) ;

            //etThread.traceF( tinP , psttys ) ;
            strokeS* psttys = (strokeS*)stYearShort.downF( tinP , hWalk ) ;
        {
        do
        handleC hWalk( tinP , TAG( TAGiDnULL ) , ifcIDtYPEhANDLE_STACKwALK ) ;

        TN( tPrefix , "///e/ideafarm.archives/wo.ideafarm/" ) ;
    {
    if( stYearShort )
    etThread.traceF( tinP , T("[cFiles]:    ")+TF2(stYearShort,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED) ) ;

    }
        etThread.diskWalkF( tinP , cDirs , cFiles , T("///d/ideafarm.home.101/devices/") , ether , flDISKwALK_null , walkCBF , pcArg , 0 , 0 ) ;
        ZE( countT , cFiles ) ;
        ZE( countT , cDirs  ) ;

        countT  pcArg[] = { (countT)&etThread , (countT)(strokeS*)tDelim , (countT)&tb4 , (countT)&tIdeaFarmArchivesRejects , (countT)&stYearShort } ;

        TN( tIdeaFarmArchivesRejects , "ideafarm.archives.rejects" ) ;
        TN( tb4                      , "    "                      ) ;
        TN( tDelim                   , "/"                         ) ;
        _IO_
    {
    stackC stYearShort( tinP , etThread , TAG( TAGiDnULL ) , flSTACKc_DOnOTsERIALIZE , ifcSTACKtYPE_PTR_strokeS ) ;

    _IO_
{

TODO

}
    return 0 ;

    }
        }
            }
                if( !ids ) etherP.delF( tinP , psttYearShort ) ;
                stYearShortP.sinkF( tinP , ids , psttYearShort , flSTACKsINK_UNIQUE , 0 , 0 ) ;
                ZE( countT , ids ) ;

                //etherP.traceF( tinP , psttYearShort ) ;
                etherP.delF( tinP , psttnu ) ;
                etherP.strBisectF( tinP , psttnu , psttYearShort , tLong , T("/") , - 2 , flSTRbISECT_APPENDdELIMITER ) ; ___( psttnu ) ; ___( psttYearShort ) ;
                ZE( strokeS* , psttYearShort ) ;
                ZE( strokeS* , psttnu ) ;
            {
            if( cOk == 1 )

            etherP.delF( tinP , pstt1w ) ;
            }
                }
                    case 5 : { if( !etherP.strCompareF( tinP , psttc1 , tIdeaFarmArchivesRejectsP ) ) ++ cOk ; break ; }
                {
                switch( ++ idw )

                // etherP.traceF( tinP , TF2(++idw,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED)+tb4P+T(psttc1) ) ;
            {
            FORsTRINGSiN1( pstt1w )
            ZE( countT , cOk ) ;
            ZE( countT , idw ) ;
            etherP.strWordsF( tinP , pstt1w , tLong , sttq , psttzDelimP , flSTRwORDS_null , 0 , 0 , 0 , 0 , 0 ) ; ___( pstt1w ) ;
            strokeS sttq( 0 , sc_IGNOREqUOTES ) ;
            ZE( strokeS* , pstt1w ) ;

            // | 8    !ideafarm.9.2.00000000.00000001.20161024@1500.20170926@1130.0de587178e6e42aa5487e80aff3be200.001.meta.hashedname
            // | 7    2016
            // | 6    archive
            // | 5    duplicates
            // | 4    hdd3.arc.2021010601
            // | 3    devices
            // | 2    ideafarm.home.101
            // | 1    d
            // | ///d/ideafarm.home.101/devices/hdd3.arc.2021010601/duplicates/archive/2016/!ideafarm.9.2.00000000.00000001.20161024@1500.20170926@1130.0de587178e6e42aa5487e80aff3be200.001.meta.hashedname
            // EXAMPLE
        {
        else
        if( bDir ) etherP.traceF( tinP , T("walking folder:    ")+tLong ) ;
        boolT bDir = psttzLong[ CSpREFIX - 1 + psttzLong->idAdam ].idAdam == '/' ;

        //etherP.traceF( tinP , tLong ) ;

        const strokeS* const psttzLong = tLong ;
        TN( tLong , iffn ) ;
        ifFileNameC iffn( tinP , etherP , postNameP ) ;

        _IO_
    {
    else if( !bQuitP )
    }
        etherP.traceF( tinP , T("a folder has been walked") ) ;
    {
    if( !postNameP || !*postNameP )

    stackC&  stYearShortP              = *(stackC*)pcArgP[ 4 ] ;
    textC&   tIdeaFarmArchivesRejectsP =  *(textC*)pcArgP[ 3 ] ;
    textC&   tb4P                      =  *(textC*)pcArgP[ 2 ] ;
    strokeS* psttzDelimP               = (strokeS*)pcArgP[ 1 ] ;
    etherC&  etherP                    = *(etherC*)pcArgP[ 0 ] ;

    _IO_
{
boolT walkCBF( tinS& tinP , countT& cDirsP , countT& cFilesP , const boolT& bQuitP , const osTextT* const postNameP , countT* const pcArgP , const countT* const pModuloDirsP , const countT* const pModuloFilesP )

/*1*/WAKEsHOWtEXT( "tool.report.archive.file.sizes.to.readable.files.by.file.or.by.day" )/*1*/
/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
