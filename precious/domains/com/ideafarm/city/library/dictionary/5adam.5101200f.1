
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ipdos for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


REST

//}
//    Sleep( 1000 * 60 * 60 ) ;
//    etThread.traceF( tinP , T("napping for a foreign hour") ) ;
//    _IO_
//{

etherC::loafIF( tinP ) ;

#endif

etThread.delF( tinP , psttp ) ;

etThread.traceF( tinP , T("[out]:    ")+T(psttp) ) ;

cHits = etThread.strReplaceF( tinP , psttp , tIn , teBack , tmHideEscBack , 0 , flSTRrEPLACE_IGNOREqUOTES | flSTRrEPLACE_USEjOT ) ; ___( psttp ) ;
ZE( strokeS* , psttp ) ;
static countT cHits ;

ZE( strokeS* , pstto ) ;

TN( tmHideEscBack , "z" ) ;
TN( teBack , "\\\\" ) ;

etThread.traceF( tinP , T("[in]:     ")+tIn ) ;
TN( tIn , "\\\"c:\\\\\\\\\\\"" ) ;

#if defined( NEVERdEFINED )

}
    etThread.delF( tinP , psttd ) ;
    etThread.traceF( tinP , psttd , flTRACE_NOpREFIX | flTRACE_KEEPcRlF ) ;
    etThread.strDumpStrokesIF( tinP , psttd , tFoo , T("YIPPEE!") ) ;
    ZE( strokeS* , psttd ) ;
    TN( tFoo , "abcd" ) ;
{

__1

TODO

/*1*/WAKEsHOWtEXT( "scr" )/*1*/
/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ipdos for permitted uses.
//
