
//
// Copyright (c) 1992-2025 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


REST

etherC::loafIF( tin0P ) ;
etThread.traceF( tin0P , T("ok") ) ;

}
    ++ s ; ether.osSleepF( tin0P , TOCK >> 3 ) ;
    etThread.traceF( tin0P , T("[idNap]:    ")+TF2(++idNap,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED) ) ;
    
{
while( !ether )
ZE( countT , idNap ) ;
sleepC s( tin0P , TAG( TAGiDnULL ) ) ;


CONoUTrAW( "\r\n" ) ;
CONoUTrAW( postDec ) ;
CONoUTrAW( "\r\n" ) ;
thirdC::c_itoaForeignLibIF( tin0P , postDec , sizeof postDec , (countT)(0x7fffffff) , 0xa ) ;
postDec[ 0xa ] = 0 ;

__1














}
    if( nowPeriod ) ;

    static NTSTATUS status = ntQueryTimerResolution( &maxPeriod , &minPeriod , &nowPeriod ) ;
    static ULONG nowPeriod ;
    static ULONG maxPeriod ;
    static ULONG minPeriod ;

    fooFT ntQueryTimerResolution = (fooFT)GetProcAddress( osh , "NtQueryTimerResolution" ) ;

    HMODULE osh = GetModuleHandle( "ntdll.dll" ) ;
{

















TODO


extern "C" typedef UINT (OSF *fooFT)( ULONG* , ULONG* , ULONG* ) ;


// = UINT (WINAPI *) (ULONG* , ULONG* , ULONG* ) ;







countT costaDec = sizeof postDec ;

osTextT postAfter[ TUCK ] ;
osTextT postDec[ SB * sizeof( countT ) + 1 ] ;


/*1*/WAKEsHOWtEXT( "scratch" )/*1*/
/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2025 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
