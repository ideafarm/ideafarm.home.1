
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


REST

thirdC::third_flagsModeProcess2I_IF() &= ~( F(flMODEpROCESS2_SUPPRESSiNoUTfRAMEc) ) ;

etherC::loafIF( tinP ) ;
etThread.traceF( tinP , T("ok") ) ;

}
    etThread.traceMemoryGrainRptF( tinP ) ;

    //etThread.traceF( tinP , T("all are ready now") ) ;
    //}
    //    ++ s ; ether.osSleepF( tinP , TOCK >> 2 ) ;
    //    etThread.traceF( tinP , T("[pending]:    ")+TF2(CwORKERS-cReady,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED) ) ;
    //{
    //while( cReady < CwORKERS )

    //cAlive = 0 ;
    etThread.traceF( tinP , T("all are alive now") ) ;
    }
        ++ s ; ether.osSleepF( tinP , TOCK >> 2 ) ;
        etThread.traceF( tinP , T("[pending]:    ")+TF2(CwORKERS-cAlive,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED) ) ;
    {
    while( cAlive < CwORKERS )
    sleepC s( tinP , TAG( TAGiDnULL ) ) ;

    THREADmODE2rESTORE
    }
        etThread.osThreadF( tinP , countTC() , tmWorkF , 0 , &cAlive , flTHREADlAUNCH_NOiNoUTfRAMEsUPPORT , CBsTACKmIN , 0 , (countT)&cReady ) ;
    {
    while( cDo -- )
    THREADmODE2oN( flTHREADmODE2_SUPPRESStELLmONITOR )
    countT cDo = CwORKERS ;
    ZE( countT , cReady ) ;
    ZE( countT , cAlive ) ;
{
if( !ether )

thirdC::third_flagsModeProcess2I_IF() |= flMODEpROCESS2_SUPPRESSiNoUTfRAMEc ;

//etherC::loafIF( tinP ) ;




//VirtualQuery( (voidT*)ebpAM()    , &infoH , sizeof infoH ) ;    //HERE (STACK)
//VirtualQuery( (voidT*)0x176a0000 , &infoF2 , sizeof infoF2 ) ;    //FREE
//VirtualQuery( (voidT*)0x16e40000 , &infoF1 , sizeof infoF1 ) ;    //FREE
//VirtualQuery( (voidT*)0x000e4000 , &infoU , sizeof infoU ) ;    //UNUSABLE
//VirtualQuery( (voidT*)0x000a7000 , &infoS , sizeof infoS ) ;    //STACK
//VirtualQuery( (voidT*)0x000a5000 , &infoG , sizeof infoG ) ;    //GUARD
//VirtualQuery( (voidT*)0x000a0000 , &infoR , sizeof infoR ) ;    //RESERVED
//static MEMORY_BASIC_INFORMATION infoH ;
//static MEMORY_BASIC_INFORMATION infoF2 ;
//static MEMORY_BASIC_INFORMATION infoF1 ;
//static MEMORY_BASIC_INFORMATION infoU ;
//static MEMORY_BASIC_INFORMATION infoS ;
//static MEMORY_BASIC_INFORMATION infoG ;
//static MEMORY_BASIC_INFORMATION infoR ;


TODO

DONE( tmWorkF )
}
    etherC::loafIF( tinP ) ;
    inc02AM( cReadyP ) ;

    countT& cReadyP = *(countT*)pTaskP->c1 ;
{
if( pTaskP && pTaskP->c1 )
TASK( tmWorkF )

#define CwORKERS ( 0x1000 + 99 )
//G:#define CwORKERS ( 0x1000 + 99 )
//G:#define CwORKERS ( 0x1000 + 98 )
//G:#define CwORKERS 0x1000
//G:#define CwORKERS 0x800
//WITHOUT RESETTING cAlive (I.E DO NOT CT tinS AND etThread ON THE KID THREADS)

//B:#define CwORKERS 0x600
//B:#define CwORKERS 0x800
//G:#define CwORKERS 0x3f2
//20240918@1819: WITH 2 TOCK THREAD STACKS

//#define CwORKERS 0x8
//G:#define CwORKERS 0x3f2
//B:#define CwORKERS 1050
//B:#define CwORKERS 1100
//G:#define CwORKERS 1010

/*1*/WAKEsHOWtEXT( "example.other.3func.36002065.etherc.osthreadf.launching.many.threads" )/*1*/
/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
