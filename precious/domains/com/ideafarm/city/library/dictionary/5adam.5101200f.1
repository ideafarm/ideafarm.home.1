
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


REST

etherC::loafIF( tinP ) ;
etThread.traceF( tinP , T("ok") ) ;

}
    etThread.traceMemoryGrainRptF( tinP ) ;

    etThread.traceF( tinP , T("all are ready now") ) ;
    }
        ++ s ; ether.osSleepF( tinP , TOCK >> 2 ) ;
        etThread.traceF( tinP , T("[pending]:    ")+TF2(CwORKERS-cReady,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED) ) ;
    {
    while( cReady < CwORKERS )

    //cAlive = 0 ;
    //etThread.traceF( tinP , T("all are alive now") ) ;
    //}
    //    ++ s ; ether.osSleepF( tinP , TOCK >> 2 ) ;
    //    etThread.traceF( tinP , T("[pending]:    ")+TF2(CwORKERS-cAlive,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED) ) ;
    //{
    //while( cAlive < CwORKERS )
    sleepC s( tinP , TAG( TAGiDnULL ) ) ;

        etThread.osThreadF( tinP , countTC() , tmWorkF , 0 , 0/*&cAlive*/ , flTHREADlAUNCH_NOiNoUTfRAMEsUPPORT , 0 , 0 , (countT)&cReady ) ;
    while( cDo -- )
    countT cDo = CwORKERS ;
    ZE( countT , cReady ) ;
    ZE( countT , cAlive ) ;
{
if( !ether )

etherC::loafIF( tinP ) ;

TODO

DONE( tmWorkF )
}
    etherC::loafIF( tinP ) ;
    inc02AM( cReadyP ) ;

    countT& cReadyP = *(countT*)pTaskP->c1 ;
{
if( pTaskP && pTaskP->c1 )
TASK( tmWorkF )

#define CwORKERS 0x3f2
//B:#define CwORKERS 1050
//B:#define CwORKERS 1100
//G:#define CwORKERS 1010

/*1*/WAKEsHOWtEXT( "example.other.3func.36002065.etherc.osthreadf.launching.many.threads" )/*1*/
/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
