
//
// Copyright (c) 1992-2025 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


REST

}
    DEL( pStk ) ;
    stDelete_stackC_ptr >> *(countT*)&pStk ;
    ZE( stackC* , pStk ) ;
{
while( stDelete_stackC_ptr )

!tblHosts ;
!tblCells ;

etThread.ifcCellHostsF( tin0P , swsNicName , idaLever , b_idaLever , swsIdAdam , idhLever , b_idhLever , tblCells , tblHosts , stDelete_strokeS_ptr , stDelete_nicNameC_ptr , stDelete_stackC_ptr ) ;

stackC stDelete_stackC_ptr(  tin0P , etThread , TAG( TAGiDnULL ) ) ;
stackC stDelete_nicNameC_ptr( tin0P , etThread , TAG( TAGiDnULL ) , flSTACKc_null , ifcSTACKtYPE_PTR_nicNameC ) ;
stackC stDelete_strokeS_ptr( tin0P , etThread , TAG( TAGiDnULL ) , flSTACKc_null , ifcSTACKtYPE_PTR_strokeS ) ;

tableC tblHosts( tin0P , etThread , T("hosts") ) ;
tableC tblCells( tin0P , etThread , T("cells") ) ;

switchStackC swsIdAdam( tin0P , etThread , TAG( TAGiDnULL ) , flSTACKc_null , idhLever ) ;
batonC b_idhLever( tin0P , TAG( TAGiDnULL ) ) ;
nicNameC idhLever ;

switchStackC swsNicName( tin0P , etThread , TAG( TAGiDnULL ) , flSTACKc_null , idaLever , ifcSTACKtYPE_PTR_nicNameC ) ;
batonC b_idaLever( tin0P , TAG( TAGiDnULL ) ) ;
ZE( countT , idaLever ) ;

TODO

/*1*/WAKEhIDE( "example.simplest.query.hosts.and.adams" )/*1*/
/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2025 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

