
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


//VISIBLE

REST
etThread.osProcessIdPhaseAdamF( tinBaseP , ifcIDpHASEhANDOFFoLD_SHUTTINGdOWN ) ;

etThread.delF( tinBaseP , psttnu ) ;
etThread.faceHearF( tinBaseP , psttnu ) ;
ZE( strokeS* , psttnu ) ;
etThread.strokeF( tinBaseP , T("\r\n\r\npress the enter key") ) ;

etThread.osSleepF( tinBaseP , TOCK * 2 ) ;
{ ZE( countT , tnu ) ; etThread.osThreadF( tinBaseP , tnu , tmF , 0 , 0  , flTHREADlAUNCH_null , 0 , 0 , ++ idt ) ; }
sayF( tinBaseP , etThread , 1 ) ;
//etThread.osThreadSwitchingDesireF( tinBaseP , ifcTHREADpRIORITY_SPINLOCK   ) ;

etThread.osSleepF( tinBaseP , TOCK * 2 ) ;
{ ZE( countT , tnu ) ; etThread.osThreadF( tinBaseP , tnu , tmF , 0 , 0  , flTHREADlAUNCH_null , 0 , 0 , ++ idt ) ; }
sayF( tinBaseP , etThread , 1 ) ;
//etThread.osThreadSwitchingDesireF( tinBaseP , ifcTHREADpRIORITY_RUSH   ) ;

etThread.osSleepF( tinBaseP , TOCK * 2 ) ;
{ ZE( countT , tnu ) ; etThread.osThreadF( tinBaseP , tnu , tmF , 0 , 0  , flTHREADlAUNCH_null , 0 , 0 , ++ idt ) ; }
sayF( tinBaseP , etThread , 1 ) ;
//etThread.osThreadSwitchingDesireF( tinBaseP , ifcTHREADpRIORITY_NORMAL ) ;

etThread.osSleepF( tinBaseP , TOCK * 2 ) ;
{ ZE( countT , tnu ) ; etThread.osThreadF( tinBaseP , tnu , tmF , 0 , 0  , flTHREADlAUNCH_null , 0 , 0 , ++ idt ) ; }
sayF( tinBaseP , etThread , 1 ) ;
//etThread.osThreadSwitchingDesireF( tinBaseP , ifcTHREADpRIORITY_LAZIEST   ) ;

etThread.osSleepF( tinBaseP , TOCK * 2 ) ;
{ ZE( countT , tnu ) ; etThread.osThreadF( tinBaseP , tnu , tmF , 0 , 0  , flTHREADlAUNCH_null , 0 , 0 , ++ idt ) ; }
sayF( tinBaseP , etThread , 1 ) ;

countT idt = 1 ;

TODO

DONE( tmF )
etThread.strokeF( tinBaseP , T("---------------------------------------------------\r\n") ) ;
sayF( tinBaseP , etThread , idt ) ;
countT idt = pTaskP ? pTaskP->c1 : 0 ;
TASK( tmF )

}
    }
        default                     : { __1                                                                     ; break ; }
        case ifcTHREADpRIORITY_SPINLOCK  : { etThread.strokeF( tinBaseP , T("thread ")+TF1(idtP)+T("'s desire is now RUDE\r\n"  ) ) ; break ; }
        case ifcTHREADpRIORITY_RUSH  : { etThread.strokeF( tinBaseP , T("thread ")+TF1(idtP)+T("'s desire is now RUSH\r\n"  ) ) ; break ; }
        case ifcTHREADpRIORITY_NORMAL: { etThread.strokeF( tinBaseP , T("thread ")+TF1(idtP)+T("'s desire is now NORMAL\r\n") ) ; break ; }
        case ifcTHREADpRIORITY_LAZIEST  : { etThread.strokeF( tinBaseP , T("thread ")+TF1(idtP)+T("'s desire is now IDLE\r\n"  ) ) ; break ; }
    {
    switch( //etThread.osThreadSwitchingDesireF( tinBaseP ) )
    etThread.osSleepF( tinBaseP , TOCK ) ;
{
voidT sayF( tinBaseS& tinBaseP , etherC& etThread , countT idtP )

/*1*/WAKEhIDE( "example.simplest.func.10300b9.etherC.osThreadSwitchingDesireF" )/*1*/
/**/
*/
\<A HREF=\"5.1610104.1.0.html\"\>definition\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

