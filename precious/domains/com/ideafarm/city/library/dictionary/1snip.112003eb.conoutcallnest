
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


    }
        CONoUTrAW( "\r\n" ) ;                                                                                   \
        }                                                                                                       \
            bFile = !bFile ;                                                                                    \
            pcc ++ ;                                                                                            \
            CONoUTrAW( ostoLine ) ;                                                                             \
            OStEXTA(  ostoLine , !bFile ? "" : processGlobal8S::_processGlobal8I_IF().source.postFileTitleF( tinBaseP , processGlobal8S::_processGlobal8I_IF().source.idFileRankF( tinBaseP , *pcc ) ) ) ; \
            OStEXTAK( ostoLine , "  " ) ;                                                                       \
            OStEXTC(  ostoLine , *pcc , 0 ) ;                                                                   \
            OStEXTA(  ostoLine , bFile ? "  " : "\r\n  " ) ;                                                    \
            OStEXT(   ostoLine , TUCK << 1 ) ;                                                                  \
        {                                                                                                       \
        while( pcc < pce && *pcc )                                                                              \
                                                                                                                \
        ZE( boolT , bFile ) ;                                                                                 \
        countT* pce = pcNest + ccNest ;                                                                         \
        countT* pcc = pcNest ;                                                                                  \
                                                                                                                \
        ((tinFullS&)tinBaseP).get_pLFnest_F( tinBaseP , pcNest , ccNest + 1 ) ;                                                      \
        countT pcNest[ ccNest + 1 ] ;                                                                           \
        const countT ccNest = sizeof ((tinFullS&)tinBaseP).monitor.pLFnest / sizeof ((tinFullS&)tinBaseP).monitor.pLFnest[ 0 ] ;                                  \
        CONoUTrAW( postP ": call nest:" ) ;                                                                     \
    {                                                                                                           \
                                                                                                                \
#define CONoUTcALLnEST(postP)                                                                                   \

/*1*//*CONoUTcALLnEST*//*1*/
/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

