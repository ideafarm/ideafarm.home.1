
//
// Copyright (c) 1992-2025 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


REST

etThread.traceF( tin0P , T("ok") ) ;

etThread.osThreadSwitchingDesireF( tin0P , idDesireSave        ) ;
thirdC::dosPriorityProcessIF(      tin0P , idDesireProcessSave ) ;

}
    ++ s ; etThread.osSleepF( tin0P , TOCK >> 2 ) ;
{
while( cPending )
sleepC s( tin0P , TAG( TAGiDnULL ) ) ;

etherC::loafIF( tin0P ) ;

}
    etThread.osThreadF( TaRG1( tmDoF ) , (countT)&cPending ) ;
    inc02AM( cPending ) ;
{
while( cDo -- )
countT cDo = 0 ;
ZE( countT , cPending ) ;

countT idDesireSave        = etThread.osThreadSwitchingDesireF( tin0P , ifcTHREADpRIORITY_RUDE ) ;
countT idDesireProcessSave = thirdC::dosPriorityProcessIF(      tin0P , ifcTHREADpRIORITY_RUDE ) ;

//processGlobal2S::_processGlobal2I_IF().cDozeSprint = PERIODSpERdOZEcYCLE - 1 ;    // SPRINT f OF 01 PERIODS
//processGlobal2S::_processGlobal2I_IF().cDozeSprint = 1 ;                          // SPRINT 1 OF 01 PERIODS
//processGlobal2S::_processGlobal2I_IF().cDozeSprint = 0 ;                          // DO NOT SPRINT AT ALL
//processGlobal2S::_processGlobal2I_IF().cDozeSprint = PERIODSpERdOZEcYCLE ;        // SPRINT EVERY PERIOD (THIS DISABLES DOZING COMPLETELY)

TODO

DONE( tmDoF )
}
    dec02AM( cPendingP ) ;

    }
        CONoUTrAW5( postSay , ((tin1S&)tin0P).glass.idThread , "    " , ++ idLoop , "" ) ;

        const osTextT* postSay = F(thirdC::third_flagsModeProcess2I_IF()) & flMODEpROCESS2_DOZEmAYBE ? post1 : post2 ;

        _IO_
    {
    while( !ether )
    ZE( countT , idLoop ) ;

    const osTextT* post2 = "\r\n          [idThread,idLoop]:    " ;
    const osTextT* post1 = "\r\nDOZEmAYBE [idThread,idLoop]:    " ;

    countT& cPendingP = *(countT*)pTaskP->c1 ;
{
if( pTaskP && pTaskP->c1 )
TASK( tmDoF )

/*1*/WAKEsHOWtEXT( "example.other.3func.35001089.thirdc.dospriorityprocessif.RUDE.sprinting" )/*1*/
/**/
*/
 application code can tune this behavior in real time by changing the value of cDozeSprint
 by default, this behavior is periodically toggled between dozing periods and sprinting periods
 all threads of a rude process periodically "doze", meaning that they occasionally (every MODULOdOZE'th call to the inOutFrameC ct'or) call thirdC::dosSleepWinkIF()
 a rude process is a process that has called thirdC::dosPriorityProcessIF() specifying ifcTHREADpRIORITY_RUDE
i demonstrate sprinting for rude processes
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2025 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
