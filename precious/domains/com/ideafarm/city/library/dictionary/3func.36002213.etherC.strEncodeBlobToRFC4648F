
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//

}
    strMakeF( tinP , LF , psttP , tOut ) ; ___( psttP ) ;

    }
        }
            }
                break ;
                BLAMMO ;
            {
            default :
            }
                break ;

                tOut += TF4(vv1,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED|flFORMAT_BASE64RFC4648|flFORMAT_NObASE,0,64)+TF4(vv2,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED|flFORMAT_BASE64RFC4648|flFORMAT_NObASE,0,64)+TF4(vv3,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED|flFORMAT_BASE64RFC4648|flFORMAT_NObASE,0,64)+tEqual ;

                countT vv3 =                      ( b1 & 0x0f ) << 2 ;
                countT vv2 = ( b0 & 0x03 ) << 4 | ( b1 & 0xf0 ) >> 4 ;
                countT vv1 = ( b0 & 0xfc ) >> 2 ;
            {
            case 2 :
            }
                break ;

                tOut += TF4(vv1,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED|flFORMAT_BASE64RFC4648|flFORMAT_NObASE,0,64)+TF4(vv2,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED|flFORMAT_BASE64RFC4648|flFORMAT_NObASE,0,64)+tEqual+tEqual ;

                countT vv2 = ( b0 & 0x03 ) << 4 ;
                countT vv1 = ( b0 & 0xfc ) >> 2 ;
            {
            case 1 :
        {
        switch( cDo )
        const byteT& b1 = pbc[ 1 ] ;
        const byteT& b0 = pbc[ 0 ] ;
        TN( tEqual , "=" ) ;
        //traceF( tinP , T("[cDo]:    ")+TF2(cDo,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED) ) ;
    {
    if( cDo )
    countT cDo = pbe - pbc ;

    }
        tOut += TF4(vv1,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED|flFORMAT_BASE64RFC4648|flFORMAT_NObASE,0,64)+TF4(vv2,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED|flFORMAT_BASE64RFC4648|flFORMAT_NObASE,0,64)+TF4(vv3,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED|flFORMAT_BASE64RFC4648|flFORMAT_NObASE,0,64)+TF4(vv4,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED|flFORMAT_BASE64RFC4648|flFORMAT_NObASE,0,64) ;

        countT vv4 =                                             b2 & 0x3f        ;
        countT vv3 =                      ( b1 & 0x0f ) << 2 | ( b2 & 0xc0 ) >> 6 ;
        countT vv2 = ( b0 & 0x03 ) << 4 | ( b1 & 0xf0 ) >> 4 ;
        countT vv1 = ( b0 & 0xfc ) >> 2 ;

        // vv4:    0000 0000    0000 0000    0011 1111
        // vv3:    0000 0000    0000 1111    1100 0000
        // vv2:    0000 0011    1111 0000    0000 0000
        // vv1:    1111 1100    0000 0000    0000 0000
        //         b0           b1           b2

        const byteT& b2 = pbc[ 2 ] ;
        const byteT& b1 = pbc[ 1 ] ;
        const byteT& b0 = pbc[ 0 ] ;
    {
    for( ; pbc <= pbe - 3 ; pbc += 3 )  // PROCESS 3 BYTES IN EACH PASS, APPENDING 4 ENCODED CHARS
    TN( tOut , "" ) ;       //U:: THIS IS INEFFICIENT ; ELIMINATE THE USE OF tOut BY PREALLOCATING psttP AND THEN USING strFuseF TO CONCATENATE EACH ENCODED STROKE

    const byteT* pbe = pbP + cbP ;
    const byteT* pbc = pbP       ;
{
/*1*/voidT etherC::strEncodeBlobToRFC4648F( tinS& tinP , strokeS*& psttP , const byteT* pbP , const countT cbP )/*1*/

/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
