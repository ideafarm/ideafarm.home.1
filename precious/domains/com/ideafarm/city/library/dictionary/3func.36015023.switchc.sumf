
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    return sum ;

    if( pBaton ) pBaton->ungrabF( tinP ) ;

    }
        while( !stackk.third && ~hDown ) ;
        }
            if( pcLB ) sum += pcLB[ idFieldP ] ;
            countT* pcLB = &stackk.downF( tinP , hDown ) ;
        {
        do 
        handleC hDown( tinP , TAG( TAGiDnULL ) , ifcIDtYPEhANDLE_STACKwALK ) ;
    {
    if( stackk )
    ZE( countT , sum ) ;

    _IO_
    else if( osTidOwner != ((tinNormalS&)tinP).osTid && !bDying && !( F(stackk.flagsF(tinP)) & flSTACKc_ALLOWmULTIPLEuNSERIALIZED ) ) BLAMMO ;
    else if( !osTidOwner ) osTidOwner = ((tinNormalS&)tinP).osTid ;
    if( pBaton ) pBaton->grabF( tinP , TAG( TAGiDnULL ) ) ;

    }
        if( third ) return 0 ;
        __( idFieldP > cbData / sizeof( countT ) ) ;
        if( third ) return 0 ;
    {
    IFbEcAREFUL
    SCOOP
{
/*1*/countT switchC::sumF( tinNormalS& tinP , const countT idFieldP )/*1*/

/**/
*/
  if N then i return the sum of the offset ( N - 1 ) * sizeof( countT ) count values in the switch
  if 2 then i return the sum of the offset sizeof( countT ) count values in the switch
  if 1 then i return the sum of the countT values in the switch
  if 0 then i return the sum of the raw lever values
 idFieldP
 tinP
arguments
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

