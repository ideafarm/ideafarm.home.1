
//
// Copyright (c) 1992-2025 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


REST

}
    while( cDone < cGorillas ) etThread.osSleepF( tin0P , TOCK ) ;
    
    ether.loafIF( tin0P ) ;
    while( cTries -- ) ether.osThreadF( tin0P , countTC() , tmGorillaF , 0 , 0  , flTHREADlAUNCH_null , 0 , 0 , (countT)&g1 , (countT)&cDone ) ;
    countT cTries = cGorillas ;
    const countT cGorillas = 0x10 ;
    ZE( countT , cDone ) ;
    
    grabS g1( tin0P , TAG( TAGiDnULL ) ) ;
{

TODO

DONE( tmGorillaF )
}
    inc02AM( cDone ) ;
    }
        OSsLEEPf( 0 ) ;
        g1.ungrabF( tin0P ) ;
        //OSsLEEPf( ((tin123S&)tin0P).ranUni % TUCK ) ;
        CONoUTrAW( post2 ) ;
        g1.grabF( tin0P , TAG( TAGiDnULL ) ) ;
    {
    while( !ether )
    const osTextT post2[] = { ((tin1S&)tin0P).glass.idThread % 26 + 'a' , 0 } ;

    if( tin0P.idTypeTin - ifcIDtYPEtIN_123 ) { BLAMMOiD( 0x12121212 ) ; }

    countT& cDone = *(countT*)pTaskP->c2 ;
    grabS&  g1    =  *(grabS*)pTaskP->c1 ;
{
if( pTaskP && pTaskP->c1 && pTaskP->c2 )
TASK( tmGorillaF )

/*1*/WAKEhIDE( "tool.gorilla.snip.0030089.grabS" )/*1*/
/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2025 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

