
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


//VISIBLE

REST
etThread.osProcessIdPhaseAdamF( tinBaseP , ifcIDpHASEhANDOFFoLD_SHUTTINGdOWN ) ;

etThread.loafIF( tinBaseP ) ;

}
    __( idAck - ifcREPLY_ACK ) ;
    __( sizeof idAck - sock.readF( tinBaseP , (byteT*)&idAck , sizeof idAck ) ) ;
    sock.writeF( tinBaseP , (byteT*)&idCmd , sizeof idCmd ) ;
    idCmd = ifcCMDdIR_QUIT ; //------------------------------------------------------------------------------------------------

    __( idAck - ifcREPLY_ACK ) ;
    __( sizeof idAck - sock.readF( tinBaseP , (byteT*)&idAck , sizeof idAck ) ) ;

    sock.writeF( tinBaseP , WS( rdo ) ) ;
    sock.writeF( tinBaseP , (byteT*)pczLever , sizeof( countT ) * cLever ) ;
    sock.writeF( tinBaseP , (byteT*)&cLever , sizeof cLever ) ;
    sock.writeF( tinBaseP , (byteT*)&idCmd , sizeof idCmd ) ;
    idCmd = ifcCMDdIR_DEL ; //------------------------------------------------------------------------------------------

    __( idAck - ifcREPLY_ACK ) ;
    __( sizeof idAck - sock.readF( tinBaseP , (byteT*)&idAck , sizeof idAck ) ) ;

    }
        etThread.strokeF( tinBaseP , T("\r\n") ) ;
        rd.strokeF( tinBaseP ) ;
        recDirC rd( tinBaseP , etThread , sock ) ;
    {
    for( countT idp = 1 ; idp <= cPlates ; idp ++ )
    __( sizeof cPlates - sock.readF( tinBaseP , (byteT*)&cPlates , sizeof cPlates ) ) ;
    ZE( countT , cPlates ) ;
    sock.writeF( tinBaseP , (byteT*)pczLever , sizeof( countT ) * cLever ) ;
    sock.writeF( tinBaseP , (byteT*)&cLever , sizeof cLever ) ;
    sock.writeF( tinBaseP , (byteT*)&idCmd , sizeof idCmd ) ;
    idCmd = ifcCMDdIR_QUERYgROUP ; //------------------------------------------------------------------------------------------

    __( idAck - ifcREPLY_ACK ) ;
    __( sizeof idAck - sock.readF( tinBaseP , (byteT*)&idAck , sizeof idAck ) ) ;
    ZE( countT , idAck ) ;

    sock.writeF( tinBaseP , WS( rdo ) ) ;
    sock.writeF( tinBaseP , (byteT*)pczLever , sizeof( countT ) * cLever ) ;
    sock.writeF( tinBaseP , (byteT*)&cLever , sizeof cLever ) ;
    countT cLever = etThread.strBodyLengthF( tinBaseP , pczLever ) ;
    countT pczLever[] = { 1 , 2 , 3 , 0 } ;

    sock.writeF( tinBaseP , (byteT*)&idCmd , sizeof idCmd ) ;
    countT idCmd = ifcCMDdIR_NEW ; //------------------------------------------------------------------------------------------

    sock.connectF( tinBaseP , ifcPORToLD1_DIRECTORY ) ;
    socketC sock( tinBaseP , etThread , TAG( TAGiDnULL ) ) ;

    recDirC rdo( tinBaseP , etThread , 0x111 , nicNameC( 0x222 , 0x333 , 0x444 , 0x555 ) , 0 , T("myName") , pbBlob , sizeof pbBlob ) ;
    byteT pbBlob[] = { 'a' , 'b' , 'c' , 'd' , 'e' , 'f' , 'g' , 0 } ;
{

TODO

/*1*/WAKEhIDE( "example.extra.directory.port.groups" )/*1*/
/**/
*/
\<A HREF=\"5.c530104.1.0.html\"\>definition\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

