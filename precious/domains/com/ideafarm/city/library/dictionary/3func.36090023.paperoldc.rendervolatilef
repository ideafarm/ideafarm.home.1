
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    }
        winPulp.x1.back.wrapRenderF( tin0P , tSayV , phCloneP ) ;
        winPulpOldC& winPulp = *(winPulpOldC*)x1.pPulp ;
    
        ;
                        
            S2(0,scOld_POPfRAME)
            T(vbP.psttDone)+
            S3(crmmP.mColMax,scOld_mmFRAMEpELtO,crmmP.mRowMax)+
            S2(0,scOld_POPfRAMEdETACH)+
            S3(crmmP.mColMin,scOld_mmMOVEpELtO,crmmP.mRowMin)+
            S2(0,scOld_FRAMEdETACH)+
            T("")+
        
        TN( tSayV , "" ) ; tSayV =
    
        }
            if( vbP.zBaton_ppsttSpec ) vbP.zBaton_ppsttSpec->ungrabF( tin0P ) ;
            ether.strMakeF( tin0P , LF , vbP.psttDone , *vbP.ppsttSpec ) ; ___( vbP.psttDone ) ;
            if( vbP.zBaton_ppsttSpec ) vbP.zBaton_ppsttSpec->grabF( tin0P , TAG( TAGiDnULL ) ) ;
            ether.delF( tin0P , vbP.psttDone ) ;
        {
        if( F(flagsP) & flSTRIKEvOLATILE_LOADsPEC )
    {
    if( !( F(vbP.flags) & flVbODYs_STALEeRASED ) )
{
/*1*/voidT paperOldC::renderVolatileF( tin0S& tin0P , vBodyS& vbP , const mColRowMinMaxS& crmmP , const flagsT flagsP , const handleC* const phCloneP )/*1*/

/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

