
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


//VISIBLE

REST
etThread.osProcessIdPhaseAdamF( tinBaseP , ifcIDpHASEhANDOFFoLD_SHUTTINGdOWN ) ;

HEAReNTER( ether )
etThread.strokeF( tinBaseP , T("press the enter key\r\n") ) ;

DEL( pInfo ) ;
) ;
    T("flags                    : ")+TF1(pInfo->flags                                         )+T("\r\n")
    T("cUnusedUnits             : ")+TF1(pInfo->cUnusedUnits                                  )+T("\r\n")+
    T("cAllocationUnits         : ")+TF1(pInfo->cAllocationUnits                              )+T("\r\n")+
    T("cSectorsPerAllocationUnit: ")+TF1(pInfo->cSectorsPerAllocationUnit                     )+T("\r\n")+
    T("cBytesPerSector          : ")+TF1(pInfo->cBytesPerSector                               )+T("\r\n")+
    T("idFileSystem             : ")+TF1(pInfo->idFileSystem                                  )+T("\r\n")+
    T("idVolume                 : ")+TF3(pInfo->idVolume,flFORMAT_UNSIGNED|flFORMAT_FILLzE,8)+T("\r\n")+
    T("postVolumeName           : \"")+T(pInfo->postVolumeName                                )+T("\"\r\n")+
    tinBaseP ,
(
etThread.strokeF

third.dosQueryFSInfoF( tinBaseP , pInfo , "///d/this.part/is/ignored/bla/bla.bla" ) ;
ZE( infoDisk1S* , pInfo ) ;

thirdC& third = ether ;

TODO

/*1*/WAKEhIDE( "example.simplest.func.1020026.thirdC.dosQueryFSInfoF" )/*1*/
/**/
*/
\<A HREF=\"5.dd00104.1.0.html\"\>definition\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

