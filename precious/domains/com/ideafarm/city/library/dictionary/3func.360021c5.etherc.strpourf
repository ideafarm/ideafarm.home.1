
//
// Copyright (c) 1992-2025 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    }
        }
            }
                if( !POOP ) soulToP.shiftLeftF( tin0P , ifcIDtYPEsOULiTEM_strokeSptr , pbzEncoded , !pbzEncoded ? 0 : 2 * sizeof( countT ) + ((countT*)pbzEncoded)[ 1 ] ) ;

                __( !cbIn ) ;
                __( flagsIn - flSOULiTEM_null ) ;
                __( idTypeIn - ifcIDtYPEsOULiTEM_strokeSptr ) ;
                byteT* pbzEncoded = soulFromP.pbFieldF( tin0P , idTypeIn , flagsIn , cbIn , idFieldIn ) ;
                ZE( countT , cbIn     ) ;
                ZE( flagsT , flagsIn  ) ;
                ZE( countT , idTypeIn ) ;
            {
            for( countT idFieldIn = 1 ; idFieldIn <= cFieldsIn ; idFieldIn ++ )
            countT cFieldsIn = soulFromP ;
        {
        else
        }
            }
                }
                    delF( tin0P , pbEncoded ) ;
                    soulToP.shiftLeftF( tin0P , ifcIDtYPEsOULiTEM_strokeSptr , pbEncoded , !pbEncoded ? 0 : 2 * sizeof( countT ) + ((countT*)pbEncoded)[ 1 ] ) ;
                    }
                        delF( tin0P , psttw ) ;
                        strEncodeF( tin0P , pbEncoded , psttw ) ; ___( pbEncoded ) ;
                    {
                    if( psttw )
                    ZE( byteT* , pbEncoded ) ;

                    if( psttw ) { strReverseF( tin0P , psttw ) ; ___( psttw ) ; }

                    strDecodeF( tin0P , psttw , pbzEncoded ) ; ___( psttw ) ;
                    ZE( strokeS* , psttw ) ;
                {
                else
                if( !pbzEncoded || !cbIn ) soulToP.shiftLeftF( tin0P , ifcIDtYPEsOULiTEM_strokeSptr , pbzEncoded , !pbzEncoded ? 0 : 2 * sizeof( countT ) + ((countT*)pbzEncoded)[ 1 ] ) ;

                __( !cbIn ) ;
                __( flagsIn - flSOULiTEM_null ) ;
                __( idTypeIn - ifcIDtYPEsOULiTEM_strokeSptr ) ;
                byteT* pbzEncoded = soulFromP.pbFieldF( tin0P , idTypeIn , flagsIn , cbIn , idFieldIn ) ;
                ZE( countT , cbIn     ) ;
                ZE( flagsT , flagsIn  ) ;
                ZE( countT , idTypeIn ) ;
            {
            for( countT idFieldIn = 1 ; idFieldIn <= cFieldsIn ; idFieldIn ++ )
            countT cFieldsIn = soulFromP ;
        {
        if( F(flagsP) & flSTRpOURf_REVERSE )
    {
    else
    }
        }
            }
                delF( tin0P , pbEncoded ) ;
                if( !POOP ) soulToP.shiftLeftF( tin0P , ifcIDtYPEsOULiTEM_strokeSptr , pbEncoded , cbv ) ;

                __( cbv - cbEncoded ) ;
                countT cbv = !pbEncoded ? 0 : 2 * sizeof( countT ) + ((countT*)pbEncoded)[ 1 ] ;
                soulFromP.shiftRightF( tin0P , pbEncoded , cbEncoded , ifcIDtYPEsOULiTEM_strokeSptr ) ; ___( pbEncoded ) ;
                ZE( countT , cbEncoded ) ;
                ZE( byteT* , pbEncoded ) ;
            {
            while( soulFromP )
        {
        else
        }
            }
                delF( tin0P , psttw ) ;
                soulToP << psttw ;

                strReverseF( tin0P , psttw ) ; ___( psttw ) ;

                soulFromP >> psttw ; ___( psttw ) ;
                ZE( strokeS* , psttw ) ;
            {
            while( soulFromP )
        {
        if( F(flagsP) & flSTRpOURf_REVERSE )
    {
    if( F(flagsP) & flSTRpOURf_CONSUMEiNPUT )

    _IO_

    }
        if( POOP ) return ;
        FV( flSTRpOURf , flagsP ) ;
        if( POOP ) return ;
    {
    IFbEcAREFUL
    SCOOP
{
/*1*/voidT etherC::strPourF( tin0S& tin0P , soulC& soulToP , soulC& soulFromP , const flagsT flagsP )/*1*/

//U::MIGRATE CODE THAT CALLS ME AND THEN DELETE ME
//U::THIS IS OBSOLETED BY soulC::strDrinkF

/**/
*/
 flagsP
 soulFromP
 soulToP
 tin0P
arguments
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2025 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

