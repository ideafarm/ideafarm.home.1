
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


REST

etherC::loafIF( tinBaseP ) ;
etThread.traceF( tinBaseP , T("ok") ) ;

}
    bt.walkF( tinBaseP , stThis , stKidsDone , postBufferM , sizeof postBufferM , cNest , walkLocalCBF ) ;
    ZE( countT , cNest ) ;

    stackC stKidsDone( tinBaseP , etThread , TAG( TAGiDnULL ) , flSTACKc_ALLOWzE ) ;
    stackC stThis(     tinBaseP , etThread , TAG( TAGiDnULL ) ) ;

    bitTreeC bt( tinBaseP , "bt.cloud.file.names.archive.local" , flBITtREEc_null , ifcIDaDAM_CLOUD , 0x17 ) ;
{

TODO

}
    return 0 ;

    etherC::etRockIF( tinBaseP ).traceF( tinBaseP , T("!local: \"")+T(postBufferC)+T("\"") /*, flTRACE_NOpREFIX*/ ) ;
    for( countT offr = 0 ; postBufferM[ offr ] ; offr ++ ) postBufferC[ offr ] = reverseBitsF( postBufferM[ offr ] ) ;

    thirdC::c_strcpyIF( tinBaseP , postBufferC , postBufferM ) ;
{
countT walkLocalCBF( tinBaseS& tinBaseP , countT& cArgP )

osTextT postBufferC[ TOCK ] ;
osTextT postBufferM[ TOCK ] ;

/*1*/WAKEsHOWtEXT( "tool.bitTreeC.inspector" )/*1*/
/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

