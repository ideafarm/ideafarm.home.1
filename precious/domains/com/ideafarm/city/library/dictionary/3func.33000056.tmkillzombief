
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


DONE( tmKillZombieF )

}
    TELL( "tmKillZombieF: cleaning up" )
    sgnDone.giveF( tin0P ) ;

    }
        if( POOP ) POOPR
        }
            thScratch.s_cancelF( tin0P , handle ) ;
            bKilled = 1 ;
            //CONoUTrAW3( "tmKillZombieF killing after time " , time1 , "\r\n" ) ; //U::
            //CONoUTrAW("tmKillZombieF: TIMEOUT\r\n") ;
        {
        if( !thScratch.s_bCanWriteF( tin0P , handle , time1 , time2 ) )
    
        thirdC& thScratch = *((tin1S&)tin0P).pEtScratch ;
        SCOOPS
    {
    IFsCRATCH

    //CONoUTrAW3( "connect time1 limit: " , time1 , "\r\n" ) ; //U::

    sCountT  time2   =            pTaskP->c5 ;
    countT   time1   =            pTaskP->c4 ;
    boolT&   bKilled =   *(boolT*)pTaskP->c3 ;
    signC&   sgnDone =   *(signC*)pTaskP->c2 ;
    handleC& handle  = *(handleC*)pTaskP->c1 ;
    TELL( "working" )
{
if( pTaskP && pTaskP->c1 && pTaskP->c2 && pTaskP->c3 && ( pTaskP->c4 || pTaskP->c5 ) )
/*1*/TASK( tmKillZombieF )/*1*/
/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

