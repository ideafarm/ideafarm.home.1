
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


REST
etThread.osProcessIdPhaseAdamF( tinBaseP , ifcIDpHASEhANDOFFoLD_SHUTTINGdOWN ) ;

etThread.delF( tinBaseP , pstt1m ) ;
}
    etThread.delF( tinBaseP , psttd ) ;
    etThread.delF( tinBaseP , psttw ) ;

    }
        ((thirdC&)etThread).logF( tinBaseP , T("no example simplest exists for: ")+T(psttw) ) ;
        etThread.strokeF( tinBaseP , T("\r")+T(psttw)+T("\r\n") ) ;
    {
    )
        ( idf = 1 , /*sttq = ze ,*/ !etThread.strIdF( tinBaseP , idf , sttq , T("example.simplest.")+T(psttw) , psttd ) )
        ( idf = 1 , /*sttq = ze ,*/ !etThread.strIdF( tinBaseP , idf , sttq , T("\r\nit is illegal to refer to this symbol" " in the definition of an adam\r\n") , psttd ) ) &&
    (
    if

    etThread.strWordF( tinBaseP , psttw , psttc1 , sttq , S1C('/') , - 1 ) ; ___( psttw ) ;
    ZE( strokeS* , psttw ) ;
    strokeS sttq( (countT)0 , sc_IGNOREqUOTES ) ;
    ZE( countT , idf ) ;


    }
        etThread.delF( tinBaseP , postd ) ;
        etThread.strMakeF( tinBaseP , LF , psttd , T(postd) ) ; ___( psttd ) ;
        etThread.boxGetShadowF( tinBaseP , postd , costd , psttc1 ) ; ___( postd ) ;
        ZE( countT , costd ) ;
        ZE( osTextT* , postd ) ;
    {
    ZE( strokeS* , psttd ) ;

    etThread.strokeF( tinBaseP , T("\r")+TF3(++idFile,0,8) ) ;

    if( ether ) break ;
{
FORsTRINGSiN1( pstt1m )
ZE( countT , idFile ) ;

etThread.boxMenuF( tinBaseP , soul1m , T("///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/1??????.*" ) ) ; ___( pstt1m ) ;
etThread.boxMenuF( tinBaseP , soul1m , T("///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/0??????.*" ) ) ; ___( pstt1m ) ;
ZE( strokeS* , pstt1m ) ;

TODO

/*1*/WAKEhIDE( "verifySimpleExampleExists" )/*1*/
/**/
*/
verifies that each dictionary file refers to at least one example simplest for itself
emits a datum for each file that does not refer to an example simplest for itself and also does not contain "it is illegal..." text
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

