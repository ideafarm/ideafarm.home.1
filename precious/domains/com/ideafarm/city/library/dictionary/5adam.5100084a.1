
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


REST

etherC::loafIF( tinBaseP ) ;
etThread.traceF( tinBaseP , T("ok") ) ;

}
    etThread.delF( tinBaseP , posto ) ;
      etThread.boxPutF( tinBaseP , T("///d/tmp/lost2.after.ttt") , posto , postoc - posto ) ;
    //etThread.boxPutF( tinBaseP , T("///d/tmp/lost2.before.ttt") , posto , postoc - posto ) ;

    etThread.delF( tinBaseP , postiShortAll ) ;

    }
        if( postic > postie ) break ;
        postic = postieWo + 2 ;

        }
            if( !( cWritten % TUCK ) ) etThread.traceF( tinBaseP , TF2(cWritten,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED) ) ;
            cWritten ++ ;
            postiLathWritten = postic ;

            memcpy( postoc , "\r\n" , 2      ) ; postoc += 2      ;
            memcpy( postoc , postic , costic ) ; postoc += costic ;
        {
        if( !bSkip )

        //boolT bSkip = postiLathWritten && !thirdC::c_strcmpIF( tinBaseP , postic , postiLathWritten , 0 ) ;
          boolT bSkip = postiLathWritten && !memcmp( postic , postiLathWritten , costic ) ;

        countT costic = postieWo - postic ;
        *postieWo = 0 ;

        //osTextT* postieWo = thirdC::c_strstrIF( tinBaseP , postic , "\r\n" ) ;
          osTextT* postieWo = strstr( postic , "\r\n" ) ;
    {
    while( !ether )
    ZE( countT , cWritten ) ;
    ZE( osTextT* , postiLathWritten ) ;

    osTextT* postoc = posto ;
    etThread.newF( tinBaseP , LF , posto , costiShortAll ) ; ___( posto ) ;
    ZE( osTextT* , posto ) ;

    osTextT* postie = postiShortAll + costiShortAll ;
    osTextT* postic = postiShortAll ;
      etThread.boxGetShadowF( tinBaseP , postiShortAll , costiShortAll , T("///d/tmp/from.u.all.sorted.ttt") ) ; ___( postiShortAll ) ;
    //etThread.boxGetShadowF( tinBaseP , postiShortAll , costiShortAll , T("///d/tmp/0.all.data.meta.filenames.from.lapblack.has.duplicates.ttt") ) ; ___( postiShortAll ) ;
    ZE( countT   , costiShortAll ) ;
    ZE( osTextT* , postiShortAll ) ;
{

TODO

//A:ASSUME: BOTH INPUT FILES ARE SORTED ; BOTH MAY CONTAIN DUPLICATE LINES

/*1*/WAKEsHOWtEXT( "doodle.uniquify.even.more.intelligently" )/*1*/
/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
