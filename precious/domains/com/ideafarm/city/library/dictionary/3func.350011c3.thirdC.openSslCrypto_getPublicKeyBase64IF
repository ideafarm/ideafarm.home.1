
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}


    #endif

        __( ec ) ;
        if( ec ) etherC::etTextIF( tin0P ).traceF( tin0P , T("openSslCrypto_getPublicKeyBase64IF / failed") ) ;

        c_openSslCrypto_getPublicKeyBase64IF( &ec , postaP , costaP , postaTmpP , costaTmpP , (unsigned)c_pKey ) ;

        countT c_pKey = handleP.osF( handleP.idTypeF() == ifcIDtYPEhANDLE_OPENSSLkEYpAIR ? ifcIDtYPEhANDLE_OPENSSLkEYpAIR : ifcIDtYPEhANDLE_OPENSSLkEYpUBLIC ) ;
        ZE( countT , ec ) ;

    #elif defined( __NT__ )
    #ifdef __OS2__

    _IO_

    }
        if( POOP ) return ;
        __Z( F(((tin123S&)tin0P).flagsThreadMode4) & flTHREADmODE4_ARMoPENsSL )
        __NZ( handleP.cNoteF() ) ;
        }
            __1
            __( handleP.idTypeF() ) ;
        {
        if( handleP.idTypeF() != ifcIDtYPEhANDLE_OPENSSLkEYpAIR && handleP.idTypeF() != ifcIDtYPEhANDLE_OPENSSLkEYpUBLIC )
        __Z( ~handleP   ) ;
        if( POOP ) return ;
        __Z( costaTmpP ) ;
        __Z( postaTmpP ) ;
        __Z( costaP ) ;
        __Z( postaP ) ;
        if( POOP ) return ;
    {
    IFbEcAREFUL
{
/**//*1*/voidT thirdC::openSslCrypto_getPublicKeyBase64IF( tin0S& tin0P , osTextT* const postaP , const countT costaP , osTextT* const postaTmpP , const countT costaTmpP , handleC& handleP )/*1*/


*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

