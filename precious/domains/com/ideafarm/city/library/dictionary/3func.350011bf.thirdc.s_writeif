
//
// Copyright (c) 1992-2025 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    }
        }
            ++ s ;
            if( off == cbw ) break ;
    
            }
                }
                    break ; // SHOULD BE REDUNDANT SINCE while LOOP IS CONDITIONAL ON !POOP
                    { __( cba ) ; }
                {
                else
                else if( cba > 0 ) off += cba , ((tin1S&)tin0P).odoSockCbWrite += cba ;
                if( !cba         ) thirdC::dosSleepIF( tin0P , 4000 ) ;

                cba = ((tin1S&)tin0P).brcRaw ;
            {
            if( !POOP )

            BOSpOOP
            BOSS( WHATsiw , BOSsOCKETcODE2 , send( handleP.osF( ifcIDtYPEhANDLE_SOCKET ) , (byteT*)( pbP + off ) , cbBite , 0 ) )
            ZE( sCountT , cba ) ;
    
            if( cbBite > 8192 ) cbBite = 8192 ;
            countT cbBite = cbw - off ;
        {
        while( !POOP )
        sleepC s( tin0P , TAG( TAGiDnULL ) ) ;
    {
    ZE( countT , off ) ;
    _IO_

    const countT cbw = cbP ? cbP : c_strlenIF( tin0P , pbP ) ;

    }
        if( POOP ) return ;
        IFsIMULATEoFFLINEpOOP
        __Z( pbP ) ;
        __Z( handleP ) ;
        if( POOP ) return ;
    {
    IFbEcAREFUL    
{
/*1*/voidT thirdC::s_writeIF( tin0S& tin0P , handleC& handleP , const byteT* const pbP , const countT cbP )/*1*/

/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2025 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

