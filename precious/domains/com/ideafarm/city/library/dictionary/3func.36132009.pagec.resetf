
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    cbz = 0 ;

    else if( flags ) { BLAMMO ; }
    }
        }
            }
                }
                    ((tinFullS&)tinBaseP).pBookMark[ offbm ].pcpIdBook[ 0 ] = 0 ;
                    ((tinFullS&)tinBaseP).pBookMark[ offbm ].pbz            = 0 ;
                    ((tinFullS&)tinBaseP).pBookMark[ offbm ].pBooks         = 0 ;
                {
                if( !( -- ((tinFullS&)tinBaseP).pBookMark[ offbm ].cRef ) )
            {
            else
            if( offbm == -1 ) { BLAMMO ; }

            }
                }
                    break ;
                    offbm = offr ;
                {
                if( ((tinFullS&)tinBaseP).pBookMark[ offr ].pBooks == &books )
            {
            for( countT offr = 0 ; offr < sizeof ((tinFullS&)tinBaseP).pBookMark / sizeof ((tinFullS&)tinBaseP).pBookMark[ 0 ] ; offr ++ )
            countT offbm = -1 ;
        {
        if( !( F(((tinFullS&)tinBaseP).flagsThreadMode4) & flTHREADmODE4_DOnOTrEGISTERpAGEc ) )

        flags = 0 ;

        else                            pbz = 0 ;
        if( F(flags) & flPAGEc_DELETE ) PUSE( tinBaseP , *(byteT**)&pbz ) ;

        }
            //U:: BLAMMO SHOULD BE HERE, BUT WHEN IT IS HERE I GET CNR

            //}
            //    ((tinFullS&)tinBaseP).pEther->trace F( tinBaseP , (const strokeS* const)(const osTextT* const)ostoSay , flTRACE_LOOP | flTRACE_PARAMETERiSoStEXT ) ;
            //
            //    OStEXTAK( ostoSay , " -" ) ;
            //    OStEXTC(  ostoSay , cRefWas , 0 ) ;
            //    OStEXTAK( ostoSay , "    " ) ;
            //    OStEXTC(  ostoSay , pcRef , 0 ) ;
            //    OStEXTAK( ostoSay , "    " ) ;
            //    OStEXTCmIN( ostoSay , this , 8 ) ;
            //    OStEXTAK( ostoSay , "pageC  [this,pcRef,cRefWas]:    " ) ;
            //    OStEXT(   ostoSay , TUCK << 2 ) ;
            //{
            //if( ((tinFullS&)tinBaseP).pag1->idAdam == ifcIDaDAM_ACCESSeVENTS3bOOKbYhASHbYTE1 )

            books.unlockF( tinBaseP ) ;

            }
                BLAMMO ;
                //}
                //    ((tinFullS&)tinBaseP).pEther->trace F( tinBaseP , (const strokeS* const)(const osTextT* const)ostoSay , flTRACE_LOOP | flTRACE_PARAMETERiSoStEXT ) ;
                //
                //    OStEXTAK( ostoSay , "    BLAMMO!  (!cRefWas)" ) ;
                //    OStEXTCmIN( ostoSay , this , 8 ) ;
                //    OStEXTAK( ostoSay , "pageC  [this]:    " ) ;
                //    OStEXT(   ostoSay , TUCK << 2 ) ;
                //{
                //if( ((tinFullS&)tinBaseP).pag1->idAdam == ifcIDaDAM_ACCESSeVENTS3bOOKbYhASHbYTE1 )
            {
            if( !cRefWas )

            countT cRefWas = decv02AM( *pcRef ) ;
            books.lockF( tinBaseP , TAG( TAGiDnULL ) ) ; //U:: CONJ: DON'T NEED TO LOCK THE CURRENT BOOK (THIS COMMENT APPLIES EVERYWHERE THAT i HAVE pcRef, WHICH SHOULD POINT INTO A bookC INSTANCE THAT WILL NEVER BE DELETED WHILE *pcRef IS NOT 0
        {
        if( pcRef )

        if( tinBaseP.idTypeTin - ifcIDtYPEtIN_FULL ) { BLAMMOiD( 0x12121212 ) ; }
    {
    if( pbz )
    SCOOP
{
/*1*/voidT pageC::resetF( tinBaseS& tinBaseP )/*1*/

/**/

*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

