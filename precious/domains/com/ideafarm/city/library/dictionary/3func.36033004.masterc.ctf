
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    b_cLever.ungrabF( tin0P ) ;

    }
        ctInspectF( tin0P , cNameInspectP ) ;
        delNameIfF( tin0P , cNameInspectP ) ;
    {
    if( cNameInspectP )

    __( pbc - pbe ) ;
    }
        newNameF( tin0P , cName , stUses , flags , idCopy ) ;

        }
            stUses << *(countT*)pbc ; pbc += sizeof( countT ) ;
        {
        for( countT idp = 1 ; idp <= cPlates ; idp ++ )
        stackC stUses( tin0P , ether , TAGoR( TAGiDnULL , idLineCt , idiFileCt , pbBitsCt ) , flSTACKc_FIFO ) ;

        countT cPlates = *(countT*)pbc ; pbc += sizeof( countT ) ;
        countT idCopy  = *(countT*)pbc ; pbc += sizeof( countT ) ;
        flagsT flags   = *(countT*)pbc ; pbc += sizeof( countT ) ;
        countT cName   = *(countT*)pbc ; pbc += sizeof( countT ) ;
    {
    for( countT idf = 1 ; idf <= cFlavors ; idf ++ )

    countT cFlavors = *(countT*)pbc ; pbc += sizeof( countT ) ;
    idCopyHW = *(countT*)pbc ; pbc += sizeof( countT ) ;

    b_cLever.grabF( tin0P , TAGoR( TAGiDnULL , idLineCt , idiFileCt , pbBitsCt ) ) ;

    const byteT* pbe = pbc + sizeof( countT ) + *(countT*)pbc ; pbc += sizeof( countT ) ;

    }
        if( *(countT*)pbc != 1 ) { BLAMMO ; } pbc += sizeof( countT ) ;
                                              pbc += sizeof( countT ) ;
    {
    if( getNegAM( *(countT*)pbc ) == FINGERnEG_SOULc )
    const byteT* pbc = pbSoulP ;

    }
        if( POOP ) return ;
        __Z( pbSoulP ) ;
        __( ((tin9S&)tin0P).pag1->_masterOldC_.pMePrime != this ) ;
        __( !((tin9S&)tin0P).pag1->_masterOldC_.pMePrime ) ;
        if( POOP ) return ;
    {
    IFbEcAREFUL
    upDnC upDn( tin0P , TAGoR( TAGiDnULL , idLineCt , idiFileCt , pbBitsCt ) , IDFILE , ether ) ;
    scoopC scoop( tin0P , LF , ether ) ;
{
/*1*/voidT masterOldC::ctF( tin0S& tin0P , const byteT* const pbSoulP , const countT cNameInspectP )/*1*/

/**/
*/
\<A HREF=\"5.1490004.1.0.html\"\>definition\</A\>
\<A HREF=\"6.$ctF.0.html\"\>instances\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

