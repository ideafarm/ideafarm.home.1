
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


REST

}
    etThread.loafIF( tin0P ) ;
    etThread.osThreadF( tin0P , countTC() , tmGorillaF ) ;

    //{ countT idAdam = 0x40104b8 ; etThread.ifcHireF( tin0P , T("g orilla.http.ideafarm.2") , idAdam , 0 , flHIRE_DISPLAYaUTO , nicNameC() ) ; }
    TELL( "hiring 8b4" )

    stateS state( tin0P , etThread ) ;
{

TODO

DONE( tmGorillaF )

}
    //}
    //    ++ s ; ether.osSleepF( tin0P , TUCK * 0x20 ) ;
    //    sleepC s( tin0P , TAG( TAGiDnULL ) ) ;
    //{
    CONoUT( TF1(++idTrial)+tb+TF1(cBad)+T("\r\n") ) ;

    }
        cBad ++ ;
        *((tin9S&)tin0P).zEtScratch = 0 ;
    {
    if( *((tin9S&)tin0P).zEtScratch || cbHome != cbHomeWoth )
    if( !cbHomeWoth  ) cbHomeWoth  = cbHome ;   
    { ZE( byteT* , pbHome  ) ; ((tin9S&)tin0P).zEtScratch->boxGetShadowF( tin0P , pbHome  , cbHome  , tHome  ) ; ___( pbHome  ) ; ((tin9S&)tin0P).zEtScratch->delF( tin0P , pbHome  ) ; }
    ZE( countT , cbHome ) ;
{
while( !etThread && !ether )
ZE( countT , cBad ) ;
ZE( countT , cbHomeWoth ) ;
TN( tb , " " ) ;

//TN( tHome  , "www.ideafarm.com//http//" ) ;
TN( tHome  , "127.1.1.1//http//" ) ;

THREADmODE2oN( flTHREADmODE2_QUIETiMPOTENCE )
//etThread.osThreadSwitchingDesireF( tin0P , ifcTHREADpRIORITY_LAZIEST ) ;

TASK( tmGorillaF )

countT idTrial ;

STATE0

/*1*/WAKEhIDE( "tool.g orilla.http.ideafarm.2" )/*1*/
/**/
*/
obsoleted by 5c40104
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

