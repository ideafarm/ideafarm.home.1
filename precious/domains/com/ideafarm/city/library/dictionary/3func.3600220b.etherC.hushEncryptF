
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    delF( tinP , pbSymCypherText ) ;

    soulP.shiftLeftF( tinP , ifcIDtYPEsOULiTEM_byteTptr , pbSymCypherText , cbSymCypherText ) ;
    soulP << cbSymCypherText ;

    soulP.shiftLeftF( tinP , ifcIDtYPEsOULiTEM_byteTptr , pbSeed          , cbSeed         ) ;
    soulP << cbSeed ;

    soulP.shiftLeftF( tinP , ifcIDtYPEsOULiTEM_byteTptr , pbHushedSymKey  , cbHushedSymKey ) ;
    soulP << cbHushedSymKey ;

    hushEncryptF( tinP , pbSymCypherText , cbSymCypherText , pbHushedSymKey , cbHushedSymKey , pbSeed , sizeof pbSeed , pbPlainTextP , cbPlainTextP , handleP  ) ; ___( pbSymCypherText ) ;
    ZE( countT , cbSymCypherText ) ;
    ZE( byteT* , pbSymCypherText ) ;

    countT cbHushedSymKey = sizeof pbHushedSymKey ;
    byteT  pbHushedSymKey[ CBhUSHEDsYMkEY ] ;

    countT cbSeed = sizeof pbSeed ;
    byteT  pbSeed[ CBhUSHsEEDaLLOCATION ] ;

    _IO_

    }
        if( POOP ) return ;
        __Z( cbPlainTextP ) ;
        __Z( pbPlainTextP ) ;
        __( soulP ) ;
        if( POOP ) return ;
    {
    IFbEcAREFUL
    SCOOP
{
/*1*/voidT etherC::hushEncryptF( tinS& tinP , soulC& soulP , byteT* pbPlainTextP , countT cbPlainTextP , handleC& handleP )/*1*/

/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

