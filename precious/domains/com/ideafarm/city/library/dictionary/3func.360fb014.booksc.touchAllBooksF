
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    }
        }
            if( !pbi ) break ;
    
            __NZ( bDelete ) ;
            bDelete = readF( tinBaseP , pbi , cbi , hRead , flBOOKScrEAD_STILLhUNGRYiSoK | flBOOKScrEAD_CURRENTbOOKoNLY , &bQuit ) ;
            cbi = - 1 ;
            pbi = 0 ;

            if( !pbi ) break ;
    
            __NZ( bDelete ) ;
            boolT bDelete = readF( tinBaseP , pbi , cbi , hRead , flBOOKScrEAD_STILLhUNGRYiSoK | flBOOKScrEAD_CURRENTbOOKoNLY , &bQuit ) ; // NEEDED BECAUSE "READ REMAINDER OF CURRENT BOOK" REPEATEDLY WILL NEVER ADVANCE TO THE NEXT BOOK; SO WE BEGIN EACH ITERATION WITH READING THE WOTH BYTE OF THE CURRENT BOOK
            countT cbi = 1 ;

            ZE( const byteT* , pbi ) ;
        {
        while( !POOP && !bQuit )
        handleC hRead( tinBaseP , TAG( TAGiDnULL ) , ifcIDtYPEhANDLE_BOOKS ) ;
        ZE( countT , idBook ) ;

        const boolT& bQuit = pbQuitP ? *pbQuitP : bnu ;
        ZE( boolT , bnu ) ;
    {

    _IO_

    }
        if( POOP ) return ;
    {
    IFbEcAREFUL
    SCOOP
{
/*1*/voidT booksC::touchAllBooksF( tinBaseS& tinBaseP , const boolT* pbQuitP )/*1*/

/**/
*/
i set pcpIdBookScratch1
 tinBaseP
arguments
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

