
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    return *this ;

    }
        LOGrAW( tSay ) ;
        TN( tSay , "" ) ; tSay = TP("soulC trace DUMP : ",0x20)+TF1((countT)this)+T(" \"")+T(psttd)+T("\"\r\n") ;
        dumpIF( tinBaseP , psttd , (const byteT*)*this ) ; ___( psttd ) ;
        ZE( strokeS* , psttd ) ;
    {
    if( F(flTrace) & flTRACEsOULc_DUMP )

    if( ((tin9S&)tinBaseP).pag1->_soulC_.pStkTrace && !cNestTrace && vP.cNestTrace && F(vP.flTrace) & flTRACEsOULc_INHERIT ) traceF( tinBaseP , vP.flTrace , T("=") ) ;

    shiftLeftF( tinBaseP , ifcIDtYPEsOULiTEM_soulC , vP , 0 , 0 , flSOULsHIFTlEFTmODE_UNPACKsOULiMAGE ) ;
    removeAllF( tinBaseP ) ;

    _IO_

    }
        if( !pbv0 ) return *this ;
        const byteT* pbv0 = vP ;
    {
    IFbEcAREFUL    

    if(    postNameJot ) { BLAMMO ; } // IT IS BAD CODING STYLE TO COPY INSTANCES WITH LARGE BACKING DATA ; IF SUCH IS EVER DESIRED, REWRITE THIS FUNCTION
    if( vP.postNameJot ) { BLAMMO ; } // IT IS BAD CODING STYLE TO COPY INSTANCES WITH LARGE BACKING DATA ; IF SUCH IS EVER DESIRED, REWRITE THIS FUNCTION

    SCOOP
    TINSL
{
/*1*/soulC& soulC::operator =( soulC& vP )/*1*/
/**/
*/
\<A HREF=\"5.14e002b.1.0.html\"\>definition\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

