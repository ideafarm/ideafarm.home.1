
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


REST


((tinNormalS&)tinBaseP).monitor.idWhat2 = 0 ;
etThread.etherWhereF( tinBaseP , ifcIDaCTIONwHERE_SHUTDOWN ) ;
etThread.etherWhereF( tinBaseP , ifcIDaCTIONwHERE_UNREGISTERtHREAD ) ;
etThread.etherWhereF( tinBaseP , ifcIDaCTIONwHERE_UNWATCH ) ;
}
    }
        ((tinNormalS&)tinBaseP).monitor.idWhat2 = 0x01000000 ;
        ++ s ; ether.osSleepF( tinBaseP , TUCK * 0x20 ) ;
        ((tinNormalS&)tinBaseP).monitor.idWhat2 = 0x02000000 ;
        CONoUTrAW( !( cTries % 0x40 ) ? ".\r\n" : "." ) ;
        ((tinNormalS&)tinBaseP).monitor.idWhat2 = 0x03000000 ;
    {
    while( cTries -- && !ether )
    countT cTries = TUCK ;
    sleepC s( tinBaseP , TAG( TAGiDnULL ) ) ;
    ((tinNormalS&)tinBaseP).monitor.idWhat2 = 0x04000000 ;
{
etThread.etherWhereF( tinBaseP , ifcIDaCTIONwHERE_WATCH ) ;
etThread.etherWhereF( tinBaseP , ifcIDaCTIONwHERE_REGISTERtHREAD ) ;
etThread.etherWhereF( tinBaseP , ifcIDaCTIONwHERE_SETUP , flETHERwHERE_null , 1 ) ;
((tinNormalS&)tinBaseP).monitor.idWhat2 = - 1 ;


//etherC::loafIF( tinBaseP ) ;
//CONoUTrAW( "\r\n\r\nloafing" ) ;

//etThread.traceF( tinBaseP , T("called  poolC::reportIF") ) ;
//poolC::reportIF( tinBaseP ) ;
//etThread.traceF( tinBaseP , T("calling poolC::reportIF") ) ;

TODO

//20140915@1840: MOVED FROM SCRATCH a TO PERMANENT ADAM ID

/*1*/WAKEsHOWtEXT( "scr" )/*1*/
/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

