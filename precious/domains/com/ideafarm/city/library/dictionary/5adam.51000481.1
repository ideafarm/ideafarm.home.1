
//
// Copyright (c) 1992-2025 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


//VISIBLE

REST

}
    etThread.osSleepF( tin0P , TUCK * 0x80 ) ; //U: SLEEP FOR A TOCK IF WINDOW IS NOT VISIBLE

    }
        etThread.delF( tin0P , psttOldClock ) ;
        etThread.paperTitleF( tin0P , TT4(timeN1,timeN2,3,6) ) ;
        etThread.strokeF( tin0P , tClr+T(psttOldClock) ) ;
    
        etThread.strClockF( tin0P , psttOldClock , time , idc , idr , cc , cr , 1 , 1 , 8 , T("time now in IdeaFarm " "(tm) City: ")+TT4(timeN1,timeN2,3,6) ) ; ___( psttOldClock ) ;
        ZE( strokeS* , psttOldClock ) ;

        countT time = timeN1 >> 0x10 | ( timeN2 << 0x10 ) ;

        offTockLast = offTock ;
    {
    if( offTockLast != offTock )
    countT offTock = offTOCK( timeN1 ) ;

    etThread.osTimeNowF( tin0P , timeN1 , timeN2 ) ;
    ZE( sCountT , timeN2 ) ;
    ZE( countT , timeN1 ) ;
{
while( !ether && !etThread )
ZE( countT , offTockLast ) ;
ZE( countT , idCycle ) ;
TN( tClr , "\f" ) ;

countT cr   = win.cRow - 2 * ( idr - 1 ) ;
countT cc   = win.cCol - 2 * ( idc - 1 ) ;
countT idr  = win.mIdRow ;
countT idc  = win.mIdCol ;
    
windowOldC& win = *thirdC::pWinRootIF() ;

//U: IFF WINDOW IS VISIBLE: //etThread.osThreadSwitchingDesireF( tin0P , ifcTHREADpRIORITY_SPINLOCK ) ;

TODO

/*1*/WAKEhIDE( "tool.clock" )/*1*/
/**/
*/
\<A HREF=\"5.5840104.1.0.html\"\>definition\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2025 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

