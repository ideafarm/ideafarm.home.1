
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    //if( ((tinNormalS&)tinBaseP).pc Utility[ 0 ] ) CONoUTrAW( "~booksC/-\r\n" ) ; //U:: TO FIND A BUG

    THREADmODE4rESTORE

    }
        //if( ((tinNormalS&)tinBaseP).pc Utility[ 0 ] ) CONoUTrAW3( "[heap.cNew-cDel]:    " , processGlobal4S::_processGlobal4I_IF().heap.cNewF()-processGlobal4S::_processGlobal4I_IF().heap.cDelF() , "    psttFindLike\r\n" ) ;
        ((tinNormalS&)tinBaseP).pEther->delF( tinBaseP , psttFindLike ) ;
        //if( ((tinNormalS&)tinBaseP).pc Utility[ 0 ] ) CONoUTrAW3( "[heap.cNew-cDel]:    " , processGlobal4S::_processGlobal4I_IF().heap.cNewF()-processGlobal4S::_processGlobal4I_IF().heap.cDelF() , "    \r\n" ) ;
        }
            //if( ((tinNormalS&)tinBaseP).pc Utility[ 0 ] ) CONoUTrAW3( "[heap.cNew-cDel]:    " , processGlobal4S::_processGlobal4I_IF().heap.cNewF()-processGlobal4S::_processGlobal4I_IF().heap.cDelF() , "    \r\n" ) ;
            }
                if( !bDoneAll  ) ((tinNormalS&)tinBaseP).pEther->traceF( tinBaseP , T("~booksC / could not delete some badking files and am abandoning the effort because this process has been fired") ) ;
                }
                    if( !cFail ) bDoneAll = 1 ;
                    while( ~hFind && !cFail ) ;
                    }
                        DEL( pInfo ) ;
                        }
                            }
                                }
                                    ((tinNormalS&)tinBaseP).pEther->traceF( tinBaseP , T("~booksC / could not delete ; will retry several times [like,path,short]:    ")+T(psttFindLike)+tb4+T(fnLike.pathF())+(!pInfo?T(""):tb4+T(pInfo->psttIfoName)) ) ;
                                    POOPRqUIET ;
                                {
                                else
                                if( !POOP ) bDoneWo = 1 ;

                                ((tinNormalS&)tinBaseP).pEtScratch->diskFileOrDirDeleteF( tinBaseP , pInfo->psttIfoName ) ;
                            {
                            while( !bDoneWo )
                            ZE( boolT , bDoneWo ) ;
                            ZE( boolT , bDoneAll ) ;

                            //((tinNormalS&)tinBaseP).pEther->traceF( tinBaseP , T("~booksC / deleting [short]:    ")+T(pInfo->psttIfoName) ) ;
                        {
                        if( pInfo && !( F(pInfo->flags) & flFILEaTTR1_DIRECTORY ) )

                        }
                            ((tinNormalS&)tinBaseP).pEther->traceF( tinBaseP , T("~booksC / impotence while finding a file [like,path,short]:    ")+T(psttFindLike)+tb4+T(fnLike.pathF())+(!pInfo?T(""):tb4+T(pInfo->psttIfoName)) ) ;
                            cFail ++ ;
                            POOPRqUIET ;
                        {
                        if( POOP )
                        ((tinNormalS&)tinBaseP).pEtScratch->diskFindFileOrDirF( tinBaseP , pInfo , hFind , fnLike.pathF() , &pat ) ; ___( pInfo ) ;
                        ZE( infoFileS* , pInfo ) ;
                    {
                    do
                    handleC hFind( tinBaseP , TAG( TAGiDnULL ) , ifcIDtYPEhANDLE_FILEfIND ) ;
                    ZE( countT , cFail ) ;
                {
                while( cTries -- && !bDoneAll )
                countT cTries = etherC::etPrimeIF() ? 0x10 : TUCK ;     // etherC::etPrimeIF() WILL ALWAYS EXIST SINCE etScratch EXISTS
                ZE( boolT , bDoneAll ) ;

                SCOOPS
            {
            IFsCRATCH
            TN( tb4 , "    " ) ;
            //if( ((tinNormalS&)tinBaseP).pc Utility[ 0 ] ) CONoUTrAW3( "[heap.cNew-cDel]:    " , processGlobal4S::_processGlobal4I_IF().heap.cNewF()-processGlobal4S::_processGlobal4I_IF().heap.cDelF() , "    \r\n" ) ;

            patternC pat( tinBaseP , *((tinNormalS&)tinBaseP).pEther , fnLike , ifcIDtYPEpATTERN_FOREIGNwILDCARDsTRICT ) ;

            //((tinNormalS&)tinBaseP).pEther->traceF( tinBaseP , T("[fnLike.pathF()]:    ")+T(fnLike.pathF()) ) ;
            //((tinNormalS&)tinBaseP).pEther->traceF( tinBaseP , T("        [fnLike]:    ")+T(fnLike) ) ;
            //((tinNormalS&)tinBaseP).pEther->traceF( tinBaseP , T("  [psttFindLike]:    ")+T(psttFindLike) ) ;
            fileNameC fnLike( tinBaseP , *((tinNormalS&)tinBaseP).pEther , psttFindLike ) ;
        {
        if( F(flagsCt) & flBOOKSc_PURGEoNdT && ((tinNormalS&)tinBaseP).pEther )
    {
    else
    }
        }
            while( ~hFind ) ;
            }
                thirdC::dosDeleteIF( tinBaseP , postName ) ;

                }
                    break ;
                    __( ~hFind ) ;
                {
                if( !postName[ 0 ] )
                thirdC::dosFindFileOrDirSimpleIF( tinBaseP , postName , sizeof postName , hFind , postFindLike ) ;
                postName[ 0 ] = 0 ;
                osTextT postName[ TUCK << 1 ] ;
            {
            do
            handleC hFind( tinBaseP , TAG( TAGiDnULL ) , ifcIDtYPEhANDLE_FILEfIND ) ;
        {
        if( F(flagsCt) & flBOOKSc_PURGEoNdT )
    {
    if( F(flagsCt) & flBOOKSc_DOnOTuSEpUSE ) //BOTH FLAVORS ARE RETAINED IN ORDER TO HAVE TRUE UNLIMITED CAPACITY WHEN PUSE EXISTS
    //if( ((tinNormalS&)tinBaseP).pc Utility[ 0 ] ) CONoUTrAW3( "[heap.cNew-cDel]:    " , processGlobal4S::_processGlobal4I_IF().heap.cNewF()-processGlobal4S::_processGlobal4I_IF().heap.cDelF() , "    \r\n" ) ;

    processGlobal4I.heap.delF( tinBaseP , *(byteT**)&ppcpIdBook           ) ;
    processGlobal4I.heap.delF( tinBaseP , *(byteT**)&pcpIdBookScratchMax  ) ;
    processGlobal4I.heap.delF( tinBaseP , *(byteT**)&pcpIdBookScratchMin  ) ;
    processGlobal4I.heap.delF( tinBaseP , *(byteT**)&pcpIdBookScratch1    ) ;
    processGlobal4I.heap.delF( tinBaseP , pbFlagsiBookBackCt              ) ;
    processGlobal4I.heap.delF( tinBaseP , pbBookBack                      ) ;
    processGlobal4I.heap.delF( tinBaseP , postBookNameScratch             ) ;

    }
        DELzOMBIE( pfDoomed ) ;
        DELzOMBIE( pnDoomed ) ;
        fileC*   pfDoomed = (fileC*)pbFileReadCursor ;
        napkinC* pnDoomed = (napkinC*)pbNapReadCursor ;
    {
    if( *(countT*)pbNapReadCursor )

    }
        DELzOMBIEbOOKbACKnOWiF
        processGlobal4I.heap.delF( tinBaseP , *(byteT**)&ppcpIdBook[ offBookBackNow ] ) ;
    {
    for( offBookBackNow = 0 ; offBookBackNow < CbOOKsLOTS ; offBookBackNow ++ )

    else if( this == &processGlobal4I.bksWords        ) processGlobal2I.flDt |= flCTdTg_bksWords        ;
    else if( this == &processGlobal4I.bksWord         ) processGlobal2I.flDt |= flCTdTg_bksWord         ;
    else if( this == &processGlobal4I.bksTelemetryApp ) processGlobal2I.flDt |= flCTdTg_bksTelemetryApp ;
         if( this == &processGlobal4I.bksTelemetrySys ) processGlobal2I.flDt |= flCTdTg_bksTelemetrySys ;

    //if( ((tinNormalS&)tinBaseP).pc Utility[ 0 ] ) CONoUTrAW3( "[heap.cNew-cDel]:    " , processGlobal4S::_processGlobal4I_IF().heap.cNewF()-processGlobal4S::_processGlobal4I_IF().heap.cDelF() , "    \r\n" ) ;

    THREADmODE4oN( flTHREADmODE4_POOLaLLOCATEfROMhEAP )

    //if( ((tinNormalS&)tinBaseP).pc Utility[ 0 ] ) CONoUTrAW( "~booksC/+\r\n" ) ; //U:: TO FIND A BUG

    _IO_

    SCOOP
    TINSL
{
/*1*/booksC::~booksC( voidT )/*1*/

    }
        /*}                                                                                                                                                                                   */    \
        /*    LOGrAW(   ostoSay ) ;                                                                                                                                                           */    \
        /*    OStEXTAK( ostoSay , "\r\n" ) ;                                                                                                                                                  */    \
        /*    OStEXTC(  ostoSay , pbFlagsiBookBackCt[OFFbOOKsLOTnOW/SB]&mask , 0 ) ;                                                                                                          */    \
        /*    OStEXTAK( ostoSay ,"    " ) ;                                                                                                                                                   */    \
        /*    OStEXTC(  ostoSay , *pbFlagsiBookBackCt , 0 ) ;                                                                                                                                 */    \
        /*    OStEXTAK( ostoSay ,"    " ) ;                                                                                                                                                   */    \
        /*    OStEXTCF( ostoSay , pbFlagsiBookBackCt , '0' ) ;                                                                                                                                */    \
        /*    OStEXTAK( ostoSay ,"    " ) ;                                                                                                                                                   */    \
        /*    OStEXTC(  ostoSay , offBookBackNow , 0 ) ;                                                                                                                                      */    \
        /*    OStEXTAK( ostoSay ,"    " ) ;                                                                                                                                                   */    \
        /*    OStEXTC(  ostoSay , PBbOOKbACKnOW , '0' ) ;                                                                                                                                     */    \
        /*    OStEXTAK( ostoSay , "DELzOMBIEbOOKbACKnOWiF / not deleting [pbBook,offBookBackNow,pbFlagsiBookBackCt,*pbFlagsiBookBackCt,pbFlagsiBookBackCt[OFFbOOKsLOTnOW/SB]&mask]:    " ) ;  */    \
        /*    OStEXT(   ostoSay , TUCK << 2 ) ;                                                                                                                                               */    \
        /*{                                                                                                                                                                                   */    \
        /*else                                                                                                                                                                                */    \
        }                                                                                                                                                                                           \
            DELzOMBIE( pDoomed ) ;                                                                                                                                                                  \
            bookC* pDoomed = (bookC*)PBbOOKbACKnOW ;                                                                                                                                                \
            BOOKnOWrESETfLAG                                                                                                                                                                        \
        {                                                                                                                                                                                           \
        if( BOOKnOWeXISTS )                                                                                                                                                                         \
                                                                                                                                                                                                    \
        byteT mask = BOOKnOWmASK ;                                                                                                                                                                  \
    {                                                                                                                                                                                               \
                                                                                                                                                                                                    \
#define DELzOMBIEbOOKbACKnOWiF                                                                                                                                                                      \

#define OFFbOOKsLOTnOW ( offBookBackNow % CbOOKsLOTS )

#define NEWbOOK2sETfLAG pbFlagsiBookBackCt[ OFFbOOKsLOTnOW / SB ] |= mask ;

#define BOOKnOWrESETfLAG pbFlagsiBookBackCt[ OFFbOOKsLOTnOW / SB ] &= ~mask ;

        if( BOOKnOWeXISTS ) { BLAMMO ; }
        byteT mask = BOOKnOWmASK ;                                                          \
                                                                                            \
#define NEWbOOK1bLAMMOiFcT                                                                  \

#define BOOKnOWeXISTS ( pbFlagsiBookBackCt[ OFFbOOKsLOTnOW / SB ] & mask )

#define BOOKnOWmASK ( (byteT)( 1 << OFFbOOKsLOTnOW % SB ) )

/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

