
//
// Copyright (c) 1992-2025 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


//VISIBLE

REST
etThread.osProcessIdPhaseAdamF( tin0P , ifcIDpHASEhANDOFFoLD_SHUTTINGdOWN ) ;

etThread.osSleepF( tin0P , TOCK * 8 ) ;
third.s_shutdown2IF( tin0P ) ;

}
    third.s_writeF( tin0P , handleJob , (byteT*)&cTries , sizeof cTries ) ;
    third.s_acceptF( tin0P , handleJob , idPortPeer , nnPeer , handleServer , countTC() ) ;
    ZE( countT , idPortPeer ) ;
    nicNameC nnPeer ;
    handleC handleJob( tin0P , TAG( TAGiDnULL ) , ifcIDtYPEhANDLE_SOCKET ) ;
{
while( !ether && cTries -- )
countT cTries = 4 ;

{ ZE( countT , tnu ) ; etThread.osThreadF( tin0P , tnu , tmF , 0 , 0  , flTHREADlAUNCH_null , 0 , 0 , idPort ) ; } ;
{ ZE( countT , tnu ) ; etThread.osThreadF( tin0P , tnu , tmF , 0 , 0  , flTHREADlAUNCH_null , 0 , 0 , idPort ) ; } ;
{ ZE( countT , tnu ) ; etThread.osThreadF( tin0P , tnu , tmF , 0 , 0  , flTHREADlAUNCH_null , 0 , 0 , idPort ) ; } ;
{ ZE( countT , tnu ) ; etThread.osThreadF( tin0P , tnu , tmF , 0 , 0  , flTHREADlAUNCH_null , 0 , 0 , idPort ) ; } ;

third.s_listenF( tin0P , handleServer ) ;
countT idPort = third.s_bindF( tin0P , handleServer ) ;
third.s_socketIF( tin0P , handleServer ) ;
handleC handleServer( tin0P , TAG( TAGiDnULL ) , ifcIDtYPEhANDLE_SOCKET ) ;
third.s_setupIF( tin0P ) ;

thirdC& third = ether ;

TODO

DONE( tmF )
etThread.strokeF( tin0P , T("secondary thread received the value ")+TF1(cTries)+T(" by connecting to port ")+TF1(idPort)+T("\r\n") ) ;
__( sizeof cTries != third.s_readF( tin0P , (byteT*)&cTries , sizeof cTries , handleClient ) ) ;
ZE( countT , cTries ) ;
third.s_connectF( tin0P , handleClient , idPort ) ;
third.s_socketIF( tin0P , handleClient ) ;
handleC handleClient( tin0P , TAG( TAGiDnULL ) , ifcIDtYPEhANDLE_SOCKET ) ;

thirdC& third = ether ;
const countT idPort = pTaskP ? pTaskP->c1 : 0 ;
TASK( tmF )

/*1*/WAKEhIDE( "example.simplest.func.1020040.thirdC.s_readF" )/*1*/
/**/
*/
\<A HREF=\"5.ae00104.1.0.html\"\>definition\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2025 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

