
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//

#undef ADORN

#undef OPENSSL_Applink

#undef app_stdin
#undef app_stdout
#undef app_stderr
#undef fprintf
#undef fgets
#undef fread
#undef fwrite
#undef app_fsetmod
#undef app_feof
#undef fclose
#undef fopen
#undef fseek
#undef ftell
#undef fflush
#undef app_ferror
#undef app_clearerr
#undef app_fileno
#undef _open
#undef _read
#undef _write
#undef _lseek
#undef _close

#undef APPLINK_NO_INCLUDES
#include "\ideafarm.home.1\precious\domains\com\ideafarm\city\workshop\openssl\include\applink.c"
#define APPLINK_NO_INCLUDES

#define app_stdin ADORN( app_stdin )
#define app_stdout ADORN( app_stdout )
#define app_stderr ADORN( app_stderr )
#define fprintf ADORN( fprintf )
#define fgets ADORN( fgets )
#define fread ADORN( fread )
#define fwrite ADORN( fwrite )
#define app_fsetmod ADORN( app_fsetmod )
#define app_feof ADORN( app_feof )
#define fclose ADORN( fclose )
#define fopen ADORN( fopen )
#define fseek ADORN( fseek )
#define ftell ADORN( ftell )
#define fflush ADORN( fflush )
#define app_ferror ADORN( app_ferror )
#define app_clearerr ADORN( app_clearerr )
#define app_fileno ADORN( app_fileno )
#define _open ADORN( _open )
#define _read ADORN( _read )
#define _write ADORN( _write )
#define _lseek ADORN( _lseek )
#define _close ADORN( _close )

#define OPENSSL_Applink c_openSslAppLinkInnerIF

#define ADORN(postP) c_##postP##_cdecl_IF

void** _export __cdecl c_openSslAppLinkInnerIF( void ) ;

size_t   _export __cdecl c_fwrite_cdecl_IF(       const void* ptr , size_t size , size_t nmemb , FILE* stream ) { return fwrite(       ptr , size , nmemb , stream ) ; }
long int _export __cdecl c_ftell_cdecl_IF(        FILE* fp                                                    ) { return ftell(        fp                          ) ; }
int      _export __cdecl c_fseek_cdecl_IF(        FILE* fp , long int offset , int where                      ) { return fseek(        fp , offset , where         ) ; }
size_t   _export __cdecl c_fread_cdecl_IF(        void* ptr , size_t size , size_t nmemb , FILE* stream       ) { return fread(        ptr , size , nmemb , stream ) ; }
int      _export __cdecl c_fprintf_cdecl_IF(      FILE* fp , const char* format                               ) { return fprintf(      fp , format                 ) ; }
FILE*    _export __cdecl c_fopen_cdecl_IF(        const char* filename , const char* mode                     ) { return fopen(        filename , mode             ) ; }
char*    _export __cdecl c_fgets_cdecl_IF(        char* buf , int n , FILE* fp                                ) { return fgets(        buf , n , fp                ) ; }
int      _export __cdecl c_fflush_cdecl_IF(       FILE* fp                                                    ) { return fflush(       fp                          ) ; }
int      _export __cdecl c_fclose_cdecl_IF(       FILE* fp                                                    ) { return fclose(       fp                          ) ; }
int      _export __cdecl c__write_cdecl_IF(       int handle , void* buffer , unsigned len                    ) { return _write(       handle , buffer , len       ) ; }
int      _export __cdecl c__read_cdecl_IF(        int handle , void* buffer , unsigned len                    ) { return _read(        handle , buffer , len       ) ; }
int      _export __cdecl c__open_cdecl_IF(        const char* path , int access                               ) { return _open(        path , access               ) ; } //WILL FAIL IF O_CREAT FLAG IS SET IN access
off_t    _export __cdecl c__lseek_cdecl_IF(       int handle , off_t offset , int origin                      ) { return _lseek(       handle , offset , origin    ) ; }
int      _export __cdecl c__close_cdecl_IF(       int handle                                                  ) { return _close(       handle                      ) ; }

/*1*//*c_openSslAppLinkInnerIF*//*1*/

#include <stdio.h>
#include <io.h>
#include <fcntl.h>


*/
 the renaming is so that a wrapper with the expected name can be linked into the exe module (*gate4*)
this is "glue code" that OpenSSL requires when built for MS Windows so that its file I/O (e.g. writing and reading PEM files) will work
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

