
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//

                            
REST

CONoUTrAW( "\r\n" ) ;
}
    pcCircle[ cPush ++ % CeLTS ] = ++ vvLath ;
    while( cPush >= cPull + CeLTS ) Sleep( 100 ) ;
{
while( !ether )
countT vvLath = - 1 ;
CONoUTrAW( "\r\n" ) ;

etThread.osThreadF( TaRG1( tmPullF ) ) ;

TODO

DONE( tmPullF )
}
    }
        }
            }
                thirdC::dosWriteStdOutIF( ostoBuf ) ;
                OStEXTA(  ostoBuf , "    " ) ;
                OStEXTCF( ostoBuf , cPull , '0' ) ;
                OStEXTA(  ostoBuf , "\r\n" ) ;
                OStEXT(   ostoBuf , 0x140 )
            {
            if( *post2 == 'z' )
            CONoUTrAW( post2 ) ;
            *post2 = (osTextT)( 'a' + vvGot % 26 ) ;
            countT vvGot = pcCircle[ cPull ++ % CeLTS ] ;
        {
        if( !ether )
        while( !ether && cPush == cPull ) { Sleep( 0 ) ; }          // NAP ONLY IF EQUALS (THIS WILL HANDLE WRAPPING CORRECTLY)
    {
    while( !ether )
    osTextT post2[] = { 0 , 0 } ;
{
if( pTaskP )
TASK( tmPullF )

countT cPull ;
countT cPush ;
countT pcCircle[ CeLTS ] ;

#define CeLTS ( TOCK )

/*1*/WAKEhIDE( "doodle.circular.buffer.fifo" )/*1*/
/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
