
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


//VISIBLE

REST
etThread.osProcessIdPhaseAdamF( tin0P , ifcIDpHASEhANDOFFoLD_SHUTTINGdOWN ) ;

HEAReNTER( ether )
etThread.strokeF( tin0P , T("press the enter key") ) ;
sDone4.waitF( tin0P ) ;
sDone3.waitF( tin0P ) ;
sDone2.waitF( tin0P ) ;
sDone1.waitF( tin0P ) ;

{ ZE( countT , tnu ) ; etThread.osThreadF( tin0P , tnu , tmF , &sDone4 ) ; }
{ ZE( countT , tnu ) ; etThread.osThreadF( tin0P , tnu , tmF , &sDone3 ) ; }
{ ZE( countT , tnu ) ; etThread.osThreadF( tin0P , tnu , tmF , &sDone2 ) ; }
{ ZE( countT , tnu ) ; etThread.osThreadF( tin0P , tnu , tmF , &sDone1 ) ; }

signC sDone4( tin0P , TAG( TAGiDnULL ) ) ;
signC sDone3( tin0P , TAG( TAGiDnULL ) ) ;
signC sDone2( tin0P , TAG( TAGiDnULL ) ) ;
signC sDone1( tin0P , TAG( TAGiDnULL ) ) ;

etThread.strokeF( tin0P , T("the operating system knows my   primary   thread by its thread id: ")+TF3(idThread,0,8)+T("\r\n") ) ;
const countT idThread = third.osTidIF() ;

thirdC& third = ether ;

TODO

DONE( tmF )
etThread.strokeF( tin0P , T("the operating system knows this secondary thread by its thread id: ")+TF3(idThread,0,8)+T("\r\n") ) ;
const countT idThread = third.osTidIF() ;
thirdC& third = ether ;
TASK( tmF )

/*1*/WAKEhIDE( "example.simplest.func.102002b.thirdC.osTidIF" )/*1*/
/**/
*/
\<A HREF=\"5.0e00104.1.0.html\"\>definition\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

