
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


REST

etherC::loafIF( tin0P ) ;
etThread.traceF( tin0P , T("ok") ) ;

etThread.traceF( tin0P , T("E:    ")+TT(timeE.time1,timeE.time2) ) ;

etThread.traceF( tin0P , T("R:    ")+TT(timeR.time1,timeR.time2) ) ;
etThread.traceF( tin0P , T("A:    ")+TT(timeA.time1,timeA.time2) ) ;

etThread.osTimeSubtractF( tin0P , timeE.time1 , timeE.time2 , timeA.time1 , timeA.time2 ) ;
timeS timeE = timeR ;

}
    thirdC::getFileTimeIF( tin0P , fir , &timeR , 0 , 0 ) ;
    fileC fir( tin0P , (strokeS*)T("///e/from.hdd4.arc.2021062201/ideafarm.archives.rejects/000b46c6.d81f7fef.3c259f6f.cec10000.0fc10000/wo.ideafarm/2021/!ideafarm.a.2.00000000.00000001.20211024@1700.20220622@2047.4e9c2fdb49e1466c327acaad6f36156d.001.fset.zip") , ifcOPENaCCESS_R , ifcOPENsHARE_R , flOPENdETAILS_LOCsEQ , ifcOPENhOW_nFeO , flFILEaTTR1_null, flFILEaTTR2_null , flFILEc_null , 0 , 0 ) ;
{
}
    thirdC::getFileTimeIF( tin0P , fir , &timeA , 0 , 0 ) ;
    fileC fir( tin0P , (strokeS*)T("///e/ideafarm.archives/wo.ideafarm/2021/!ideafarm.a.2.00000000.00000001.20211024@1700.20220622@2047.4e9c2fdb49e1466c327acaad6f36156d.001.fset.zip") , ifcOPENaCCESS_R , ifcOPENsHARE_R , flOPENdETAILS_LOCsEQ , ifcOPENhOW_nFeO , flFILEaTTR1_null , flFILEaTTR2_null , flFILEc_null , 0 , 0 ) ;
{
timeS timeR = timeS() ;
timeS timeA = timeS() ;

TODO

/*1*/WAKEsHOWtEXT( "test.file.time.reporting.apis" )/*1*/
/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
