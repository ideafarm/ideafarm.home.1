
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


REST

}
    etThread.delF( tin0P , postBuffer ) ;

    etThread.boxPutF( tin0P , T("///d/tmp/desk/alphabet.stream.")+tId+T(".inflated.ttt") , postBuffer , info1.total_out ) ;

    etThread.delF( tin0P , posti ) ;

    rc = (*pg1.zlib_pInflateEndF)(   &info1 ) ;
    rc = (*pg1.zlib_pInflateF)(      &info1 ,  Z_FINISH ) ;
    rc = (*pg1.zlib_pInflateInit2F)( &info1 , 15 + 32 , "1.2.11" , sizeof info1 ) ;            // WRONG VERSION, BUT THE EARLY DLL DOESN'T CARE

    info1.avail_out = costBuffer ;
    info1.next_out  = (Bytef*)postBuffer ;
    info1.avail_in  = costi ;
    info1.next_in   = (Bytef*)posti ;

    static z_stream info1 ;

    ZE( countT , rc ) ;

    processGlobal2S& pg1 = processGlobal2S::_processGlobal2I_IF() ;

    etThread.boxGetShadowF( tin0P , posti , costi , T("///d/tmp/desk/alphabet.stream.")+tId+T(".ttt") ) ; ___( posti ) ;
    ZE( countT   , costi ) ;
    ZE( osTextT* , posti ) ;

    etThread.newF( tin0P , LF , postBuffer , costBuffer ) ; ___( postBuffer ) ;
    const countT   costBuffer = TOCK ;
    ZE( osTextT* , postBuffer ) ;

    TN( tId , "" ) ; tId = TF2(ii,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED) ;
{
for( countT ii = 1 ; ii <= 3 ; ii ++ )

TODO

/*1*/WAKEsHOWtEXT( "scratch" )/*1*/
/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
