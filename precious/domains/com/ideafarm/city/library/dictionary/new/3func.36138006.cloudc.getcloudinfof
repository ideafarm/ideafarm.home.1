
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    }
        //}
        //    //ether.traceF( tin0P , tIn ) ;
        //    //ether.boxPutF( tin0P , T("///d/tmp/x/goo.ttt") , tIn , tIn.csF( tin0P ) ) ;
        //    }
        //        }
        //            tIn = T(postJson) ;
        //
        //            }
        //                }
        //                    case '}' : { if( !( -- idLevel ) ) bNix = 1 ; break ; }
        //                    case ']' :
        //
        //                    case '{' : {        ++ idLevel              ; break ; }
        //                    case '[' :
        //                {
        //                switch( *postc )
        //
        //                }
        //                    break ;
        //                    *postc = 0 ;
        //                {
        //                if( bNix )
        //            {
        //            for( osTextT* postc = postJson ; *postc ; postc ++ )
        //            ZE( boolT  , bNix ) ;
        //            ZE( countT , idLevel ) ;
        //        {
        //        if( postJson )
        //
        //        if( postJsonSq && postJsonSq < postJson ) postJson = postJsonSq ;
        //        osTextT* postJson   = thirdC::c_strstrIF( tin0P , postBody , "{" ) ;
        //        osTextT* postJsonSq = thirdC::c_strstrIF( tin0P , postBody , "[" ) ;
        //    {
        //    if( postBody )
        //    osTextT* postBody = thirdC::c_strstrIF( tin0P , postHear , "\r\n\r\n" ) ;
        //    TN( tIn , "" ) ; // WILL CONTAIN A SINGLE, TRIMMED JSON WORD
        //{

        if( POOP ) etherC::etRockIF( tin0P ).traceF( tin0P , T("authorization refused") ) ;
        __Z( thirdC::c_memcmpIF( tin0P , tReplyCode401_Unauthorized , postHear , tReplyCode401_Unauthorized.csF( tin0P ) ) ) ;
    {
    if( !POOP )

    //ether.boxPutF( tin0P , T("///d/tmp/x/foo.ttt") , postHear , costHear ) ;
    //ether.traceF( tin0P , T(postHear) ) ;
    countT costHear = ss.readF( tin0P , postHear , sizeof postHear , flSOCKETcrEAD_STILLhUNGRYiSoK ) ;
    thirdC::c_memsetIF( tin0P , postHear , sizeof postHear ) ;
    char postHear[ TOCK ] ; 

    ss.writeF( tin0P , (osTextT*)tSay , (countT)tSay.csF( tin0P ) ) ;
    ss.connectF( tin0P , 443 , socketC::nicNameIF( tin0P , ether , tHost ) ) ;
    socketC ss( tin0P , ether , TAG( TAGiDnULL ) , ifcSOCKETtYPE_STREAM , flSOCKETc_CRYPTfOREIGNsSL ) ;

    //ether.traceF( tin0P , tSay ) ;

    }
        bHandle.ungrabF( tin0P ) ;
        tSay = T("GET ")+tUrlCloudAgent+T("?format=json HTTP/1.1\r\nHost: ")+tHost+T("\r\nX-Auth-Token: ")+rAuthP.tRackspaceAccessToken+T("\r\n\r\n") ;
        cloudInfoS& rAuthP = *(cloudInfoS*)hCloud.osF( ifcIDtYPEhANDLE_CLOUD ) ;
        bHandle.grabF( tin0P , TAG( TAGiDnULL ) ) ;

        // X-Auth-Token: f064c46a782c444cb4ba4b6434288f7c
        // Host: storage.clouddrive.com
        // GET /v1/MossoCloudFS_0672d7fa-9f85-4a81-a3ab-adb66a880123?format=json HTTP/1.1
        // EXAMPLE OF QUERY (NO BODY IS SENT)
    {
    TN( tSay , "" ) ;

    _IO_

    }
        if( POOP ) return ;
    {
    IFbEcAREFUL

    SCOOP
{
/*1*/voidT cloudC::getCloudInfoF( tin0S& tin0P )/*1*/

/**/
*/
/*


//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

