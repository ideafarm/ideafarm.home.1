
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


REST

etThread.strokeF( tin0P , T("psttBody: \"")+T(psttBody)+T("\"")+te ) ;
sOrder >> psttBody ; ___( psttBody ) ;
ZE( strokeS* , psttBody ) ;

etThread.strokeF( tin0P , T("idAdamTo: ")+TF1(idAdamTo)+te ) ;
sOrder >> idAdamTo ;
ZE( countT , idAdamTo ) ;

etThread.strokeF( tin0P , T("psttFrom: \"")+(psttFrom?T(psttFrom):T("[NULL]"))+T("\"")+te ) ;
sOrder >> psttFrom ; ___( psttFrom ) ;
ZE( strokeS* , psttFrom ) ;

etThread.strokeF( tin0P , T("idJobType: ")+TF1(idJobType)+T("expected value: ")+TF1(ifcIDcMDjOBoRDER_MAIL)+te ) ;
sOrder >> idJobType ;
ZE( countT , idJobType ) ;

souIn >> sOrder ;
soulC sOrder( tin0P , TAG( TAGiDnULL ) ) ;

etThread.strokeF( tin0P , T("idAdam: ")+TF1(idAdam)+te ) ;
souIn >> idAdam ;
ZE( countT , idAdam ) ;

__( (countT)souIn - 2 ) ;
etThread.delF( tin0P , pbs ) ;
souIn.shiftLeftF( tin0P , ifcIDtYPEsOULiTEM_soulC , pbs , 0 , 0 , flSOULsHIFTlEFTmODE_UNPACKsOULiMAGE ) ;
soulC souIn( tin0P , TAG( TAGiDnULL ) ) ;

__( cbs - sizeof( countT ) - *(countT*)pbs ) ;
etThread.boxGetShadowF( tin0P , pbs , cbs , T("///d/oldSoul") ) ; ___( pbs ) ;
ZE( countT , cbs ) ;
ZE( byteT* , pbs ) ;

TN( te , "\r\n" ) ;

TODO

/*1*/WAKEhIDE( "tool.debug.mail" )/*1*/
/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

