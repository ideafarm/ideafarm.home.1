
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    ether.strFromF( tin0P , psttMe , valueP , flagsFormatP , csP , radixP ) ; ___( psttMe ) ;

    else            thirdC::c_memsetIF( tin0P , (byteT*)pbBitsCt , sizeof pbBitsCt ) ;
    if( pbBitsCtP ) thirdC::c_memcpyIF( tin0P , (byteT*)pbBitsCt , (byteT*)pbBitsCtP , sizeof pbBitsCt ) ;
    puseC puse( tin0P , ifcIDpOOL_ADAMtEMP ) ;
    
    _IO_

    }
        if( ether ) return ;
    {
    IFbEcAREFUL    
{
bConvertible( 1 )
psttLower( 0 ) ,
puntMe( 0 ) ,
postMe( 0 ) ,
psttMe( 0 ) ,
ether( etherC::etTextIF( tin0P ) ) ,
flags( flagsP ) ,
idiFileCt( idiFileCtP ) ,
idLineCt( idLineCtP ) ,
/*1*/textC::textC( tin0S& tin0P , const countT idLineCtP , const countT idiFileCtP , const byteT* const pbBitsCtP , const flagsT flagsP , const sCountT valueP , const flagsT flagsFormatP , const countT csP , const countT radixP )/*1*/ :

/**/
*/
 radixP
  if more strokes are needed to represent the number, psttP will be longer than csP
  minimum length of the final string
 csP
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/1snip.001004c.flFORMAT!||
 flagsFormatP
 valueP
 etherP
arguments
equivalent in function to etherC::strFromF
  \<A HREF=\"5.6b20104.1.1.0.html\"\>6b20104:  WAKEsHOW( "example.simplest.func.1050009.textC.textC" )\</A\>
 simplest
examples
\<A HREF=\"5.1050009.1.0.html\"\>definition\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

