
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


//VISIBLE

REST

etherC::loafIF( tin0P ) ;
etThread.traceF( tin0P , T("ok") ) ;

third.s_writeF( tin0P , handleJob , (byteT*)&value , sizeof value ) ;
countT value = 0x33333333 ;

third.s_acceptF( tin0P , handleJob , idPortPeer , nnPeer , handleServer , countTC() ) ;
ZE( countT , idPortPeer ) ;
nicNameC nnPeer ;
handleC handleJob( tin0P , TAG( TAGiDnULL ) , ifcIDtYPEhANDLE_SOCKET ) ;

etThread.osThreadF( tin0P , countTC() , tmClientF ) ;

third.s_listenF( tin0P , handleServer ) ;
idPort = third.s_bindF( tin0P , handleServer ) ;
third.s_socketIF( tin0P , handleServer ) ;
handleC handleServer( tin0P , TAG( TAGiDnULL ) , ifcIDtYPEhANDLE_SOCKET ) ;

thirdC& third = ether ;

TODO

DONE( tmClientF )
}
    etThread.traceF( tin0P , T("value: ")+TF1(value) ) ;
    thThread.s_readF( tin0P , (byteT*)&value , sizeof value , handleClient ) ;
    ZE( countT , value ) ;
    thThread.s_connectF( tin0P , handleClient , idPort , nnServer ) ;
    thThread.s_socketIF( tin0P , handleClient ) ;
    handleC handleClient( tin0P , TAG( TAGiDnULL ) , ifcIDtYPEhANDLE_SOCKET ) ;

    nicNameC nnServer = socketC::nicNameIF( tin0P , etThread , T("::1") ) ;

    Sleep( 4000 ) ;

    thirdC& thThread = etThread ;
{
if( pTaskP )
TASK( tmClientF )

countT idPort ;

// OBSOLETES (CORRECTS) 48b_

/*1*/WAKEhIDE( "example.simplest.func.102003b.thirdC.s_connectF" )/*1*/
/**/
*/
\<A HREF=\"5.f840104.1.0.html\"\>definition\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

