
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    //NOT NEEDED: thirdC::c_memsetIF( tin0P , (byteT*)pPoint , sizeof( cPoint2S  ) * cPointP ) ;
    //NOT NEEDED: thirdC::c_memsetIF( tin0P , (byteT*)pPointTail , sizeof( cPoint2S ) * cGlyphP ) ;
    thirdC::c_memsetIF( tin0P , (byteT*)pFlagsTail , sizeof( flagsT   ) * cGlyphP ) ; //INTENTIONAL ILLEGAL FLAG VALUES, FOR SPEED ; DO NOT USE FV()
    thirdC::c_memsetIF( tin0P , (byteT*)pcSize     , sizeof( countT   ) * cGlyphP ) ;

    PUSE.newF( tin0P , LF , *(byteT**)&pPoint , sizeof( cPoint2S ) * cPointP ) ; ___( pPoint ) ;
    PUSE.newF( tin0P , LF , *(byteT**)&pPointTail , sizeof( cPoint2S ) * cGlyphP ) ; ___( pPointTail ) ;
    PUSE.newF( tin0P , LF , *(byteT**)&pFlagsTail , sizeof( flagsT   ) * cGlyphP ) ; ___( pFlagsTail ) ;
    PUSE.newF( tin0P , LF , *(byteT**)&pcSize , sizeof( countT   ) * cGlyphP ) ; ___( pcSize ) ;
{
offop( 0 )
offos( 0 ) ,
pPoint( 0 ) ,
cPoint( cPointP ) ,
pPointTail( 0 ) ,
pFlagsTail( 0 ) ,
pcSize( 0 ) ,
cGlyph( cGlyphP ) ,
/*1*/paperS::paperS( tin0S& tin0P , const countT cGlyphP , const countT cPointP ) :/*1*/

/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

