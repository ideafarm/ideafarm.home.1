
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    return cKids ;
    grab.ungrabF( tin0P ) ;
    }
        }
            }
                cKids = 1 ;
                pCursor = (branchHeaderOldS*)&(*pCursor->pSwsKids)[ 0 ] ;
            {
            else
            if( bQueryP ) cKids = *pCursor->pSwsKids ;
        {
        else
        }
            pCursor = pSave ;
            cKids = upF( tin0P , bQueryP , cRepeatP - 1 ) ;
            pCursor = (branchHeaderOldS*)&(*pCursor->pSwsKids)[ 0 ] ;
            branchHeaderOldS* pSave = pCursor ;
        {
        if( cRepeatP )

        SET_psttLeverKids( pCursor )
    {
    if( pCursor && pCursor->pSwsKids )
    ZE( countT , cKids ) ;
    PcURSOR
    *sw_pCursor.pLeverLathRefF( tin0P ) = cLeverCursor ;
    grab.grabF( tin0P , TAG( TAGiDnULL ) ) ;
{
/*1*/countT treeOldC::upF( tin0S& tin0P , const boolT bQueryP , const countT cRepeatP )/*1*/

/**/
*/
 cRepeaT
  if 1 then pCursor is not updated and i evaluate to the number of kids that pCursor has
  if 0 then pCursor is updated if possible and i evaluate to 1 if pCursor changed or to 0 if pCursor did not change
 bQueryP
 tin0P
arguments
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

