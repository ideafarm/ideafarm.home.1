
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


REST

etherC::loafIF( tin0P ) ;

etThread.osThreadSwitchingDesireF( tin0P , idDesireWas ) ;

grabx.ungrabF( tin0P ) ;
grabx.ungrabF( tin0P ) ;
grabx.ungrabF( tin0P ) ;
grabx.ungrabF( tin0P ) ;

grabx.aimF( tin0P , flGRABITcaIMmASK_offP , 0 , 0 ) ;

grabx.ungrabF( tin0P ) ;
grabx.ungrabF( tin0P ) ;
grabx.ungrabF( tin0P ) ;
grabx.ungrabF( tin0P ) ;

grabx.grabF( tin0P , TAG( TAGiDnULL ) ) ;
grabx.grabF( tin0P , TAG( TAGiDnULL ) ) ;
grabx.grabF( tin0P , TAG( TAGiDnULL ) ) ;
grabx.grabF( tin0P , TAG( TAGiDnULL ) ) ;

grabx.aimF( tin0P , flGRABITcaIMmASK_offP , 0 , 1 ) ;

grabx.grabF( tin0P , TAG( TAGiDnULL ) ) ;
grabx.grabF( tin0P , TAG( TAGiDnULL ) ) ;
grabx.grabF( tin0P , TAG( TAGiDnULL ) ) ;
grabx.grabF( tin0P , TAG( TAGiDnULL ) ) ;

countT idDesireWas = etThread.osThreadSwitchingDesireF( tin0P , ifcTHREADpRIORITY_SPINLOCK ) ;

grabitC grabx( tin0P , TAG( TAGiDnULL ) , reg.pbBitGrab , 0 , reg.pcGrabberOsTid , reg.pcGrabberRecurse , flGRABITc_IMAGEiSvISIBLEtOoTHERpROCESSES | flGRABITc_IMAGEiSvISIBLEtOoTHERtHREADS ) ;

poolRegistrationS& reg = *(poolRegistrationS*)home.pb_pPoolReg ;
//homeS& home = homeS::homeIF() ;

homeS home( tin0P ) ;

TODO

/*1*/WAKEsHOWtEXT( "example.other.3func.360e400c.grabitC.aimF" )/*1*/
/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

