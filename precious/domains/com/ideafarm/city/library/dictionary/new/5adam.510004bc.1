
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


//VISIBLE

REST

ungrabF( tin0P , gPopular ) ;
etThread.loafIF( tin0P ) ;

while( cTries -- ) etThread.osThreadF( tin0P , countTC() , tmWantF , 0 , 0  , flTHREADlAUNCH_null , 0 , 0 , (countT)&gPopular ) ;
countT cTries = CgRABwANTmAX + 1 ;

grabF( tin0P , gPopular ) ;
grabOldS gPopular( tin0P , TAG( TAGiDnULL ) ) ;

TODO

DONE( tmWantF )
}
    ungrabF( tin0P , gPopular ) ;
    grabF( tin0P , gPopular ) ;
    grabOldS& gPopular = *(grabOldS*)pTaskP->c1 ;
{
if( pTaskP && pTaskP->c1 )
TASK( tmWantF )

/*1*/WAKEhIDE( "gorilla.grabloop.wantslot.exhaustion" )/*1*/
/**/
*/
kid threads all want X
main thread has X and goes to sleep forever
i intentionally create a grab loop that involves want slot exhaustion
\<A HREF=\"5.1c40104.1.0.html\"\>definition\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

