
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    }
        }
            *pEcP = ifcIDeXCEPTIONoPENsSL_encryptIF ;
        {
        _except( EXCEPTION_EXECUTE_HANDLER )
        }
            }
                }
                    }
                        }
                            }
                                *pcbSymCypherTextP = cbOutAllBlob ;
                                cbOutAllBlob += *pcbSymCypherTextP ;
                                EVP_CIPHER_CTX_free( pContext ) ; pContext = 0 ;
                            {
                            else
                            if( !rc ) *pEcP |= 0x800000 ;
                            rc = EVP_SealFinal( pContext , pbSymCypherTextP + cbOutAllBlob , pcbSymCypherTextP ) ;
                            cbOutAllBlob += *pcbSymCypherTextP ;
                        {
                        else
                        if( !rc ) *pEcP |= 0x1000000 ;
                        rc = EVP_SealUpdate( pContext , pbSymCypherTextP , pcbSymCypherTextP , pbPlainTextP , cbPlainTextP ) ;
                    {
                    else
                    if( rc != 1 ) *pEcP |= 0x2000000 | rc ;
                    rc = EVP_SealInit( pContext , EVP_aes_128_cbc() , ppbInnerKey , pcbInnerKeyP , pbSeedP , &pKeyPublicP , 1 ) ;

                    EVP_CIPHER_CTX_init( pContext ) ;
                {
                else
                if( !pContext ) *pEcP |= 0x4000000 ;
                EVP_CIPHER_CTX* pContext = EVP_CIPHER_CTX_new() ;
            {
            else
            if( cbInnerKeyNeeded > *pcbInnerKeyP ) *pEcP |= 0x8000000 | cbInnerKeyNeeded ;
            unsigned cbInnerKeyNeeded = EVP_PKEY_size( pKeyPublicP ) ;
        {
        _try

        memset( pbSeedP , 0 , cbSeedP ) ; //U:: ALLOW CALLER TO INITIALIZE SEED, BUT NEED TO ENSURE THAT INITIAL VALUE IS TRULY RANDOM RATHER THAN JUST E.G. UNINITIALIZED STACK MEMORY
    {
    if( !*pEcP )

    if(  cbSeedP < EVP_MAX_IV_LENGTH ) *pEcP |= 0x10000000 ;
    if( !pbSeedP                     ) *pEcP |= 0x20000000 ;
    if( !pbInnerKeyP                 ) *pEcP |= 0x40000000 ;
    if( !pKeyPublicP                 ) *pEcP |= 0x80000000 ;

    ppbInnerKey[ 0 ] = &pbInnerKeyP[ 0 ] ;
    *pEcP = 0 ;

    int cbOutAllBlob = 0 ;
    unsigned rc = 0 ;
    FILE* osh = 0 ;
    unsigned char* ppbInnerKey[ 1 ] ;
    EVP_PKEY* pKeyPublicP = (EVP_PKEY*)c_pKeyPublicP ;
{
/**//*1*/void __watcall c_openSslCrypto_encryptIF( unsigned* pEcP , unsigned char* pbSymCypherTextP , int* pcbSymCypherTextP , unsigned char* pbInnerKeyP , int* pcbInnerKeyP , unsigned char* pbSeedP , int cbSeedP , unsigned char* pbPlainTextP , int cbPlainTextP , unsigned c_pKeyPublicP )/*1*/



*/
the entire input to be encrypted must be in pbPlainTextP, of length cbPlainTextP, so i do not support streaming
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

