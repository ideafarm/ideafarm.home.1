
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    handle.resetF() ;
    }
        //DISABLED SO UTILITY APIS CAN SUSPEND/RESUME ARBITRARY THREADS IN THE PROCESS: __( ((tin1S&)tin0P).brcLath > 1 ) ;
        __( !((tin1S&)tin0P).brcQuery ) ;

        //if( !((tin1S&)tin0P).brcQuery ) { CONoUTrAW( "NOT FROZEN\r\n" ) ; }

        #endif
            BOS( WHATgbo , BOSmAXcOUNTT , ResumeThread( (HANDLE)osh ) )
        #if defined( __NT__ )

        countT osh = handle.osF( ifcIDtYPEhANDLE_THREAD ) ;
    {
    if( ~handle )
    __Z( handle ) ;
    ((tin1S&)tin0P).pag4->_thirdC_grab_lOsTid.ungrabF( tin0P ) ;
    handle.osF( ifcIDtYPEhANDLE_THREAD , *((tin1S&)tin0P).pag1->_thirdC_.pSwThreadHandle ) ;
    handleC handle( tin0P , TAG( TAGiDnULL ) , ifcIDtYPEhANDLE_THREAD ) ;
    ((tin1S&)tin0P).pag1->_thirdC_.lOsTid = tidP ;
    ((tin1S&)tin0P).pag4->_thirdC_grab_lOsTid.grabF( tin0P , TAG( TAGiDnULL ) ) ;

    _IO_

    //}
    //    if( POOP ) return ;
    //    __Z( tidP ) ;
    //    __( !((tin1S&)tin0P).pag1->_thirdC_.pSwThreadHandle ) ;
    //    if( POOP ) return ;
    //{
    //IFbEcAREFUL
    //WORKS UNCONDITIONALLY SO THAT GRABBING/UNGRABBING WILL WORK
    SCOOP
{
/*1*/voidT thirdC::dosResumeThreadF( tin0S& tin0P , const countT tidP )/*1*/

/**/
*/
\<A HREF=\"5.1020105.1.0.html\"\>definition\</A\>
\<A HREF=\"6.$dosResumeThreadF.0.html\"\>instances\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

