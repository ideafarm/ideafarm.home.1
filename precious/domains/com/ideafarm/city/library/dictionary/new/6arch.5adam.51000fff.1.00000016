
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//

                            
REST

THREADmODE2rESTORE
}
    //listC::deleteIF( tin0P , count2S( LISTnAMEsYS_ROOTsYSTEM2 , 0 ) ) ;
    //CONoUTrAW( "================== DELETING SYSTEM1 LIST ==============================\r\n" ) ;

    //listC::deleteIF( tin0P , count2S( LISTnAMEsYS_ROOTsYSTEM3 , 0 ) ) ;
    //CONoUTrAW( "================== DELETING SYSTEM2 LIST ==============================\r\n" ) ;

    //listC::chatterIF( tin0P , count2S( LISTnAMEsYS_ROOTsYSTEM3 , 0 ) ) ;
    //CONoUTrAW( "================== CHATTERING SYSTEM2 ==============================\r\n" ) ;

    //listC::deleteIF( tin0P , count2S( LISTnAMEsYS_ROOTaPPLICATION , 0 ) ) ;
    //CONoUTrAW( "================== DELETING APPLICATION LIST ==============================\r\n" ) ;

    listC::chatterIF( tin0P , count2S( LISTnAMEsYS_ROOTaPPLICATION , 0 ) ) ;
    CONoUTrAW( "================== CHATTERING APPLICATION  ==============================\r\n" ) ;
    listC::chatterIF( tin0P , count2S( LISTnAMEsYS_ROOTsYSTEM3 , 0 ) ) ;
    CONoUTrAW( "================== CHATTERING SYSTEM2 ==============================\r\n" ) ;
    listC::chatterIF( tin0P , count2S( LISTnAMEsYS_ROOTsYSTEM2 , 0 ) ) ;
    CONoUTrAW( "================== CHATTERING SYSTEM1 ==============================\r\n" ) ;

    //}
    //    listC::deleteIF( tin0P , pczList ) ;
    //    listC::dictionaryReplaceOsTextIF( tin0P , pczList ) ;
    //    countT pczList[] = { LISTnAMEsYS_ROOTaPPLICATION , (countT)"persons" , BM_HIGH + TUCK + 3 , 0 } ;
    //{
    //CONoUTrAW( "================== DELETING LATH PERSON ============================\r\n" ) ;
    //}
    //    listC::deleteIF( tin0P , pczList ) ;
    //    listC::dictionaryReplaceOsTextIF( tin0P , pczList ) ;
    //    countT pczList[] = { LISTnAMEsYS_ROOTaPPLICATION , (countT)"persons" , BM_HIGH + TUCK + 2 , 0 } ;
    //{
    //CONoUTrAW( "================== DELETING MIDDLE PERSON ============================\r\n" ) ;
    //}
    //    listC::deleteIF( tin0P , pczList ) ;
    //    listC::dictionaryReplaceOsTextIF( tin0P , pczList ) ;
    //    countT pczList[] = { LISTnAMEsYS_ROOTaPPLICATION , (countT)"persons" , BM_HIGH + TUCK + 1 , 0 } ;
    //{
    //CONoUTrAW( "================== DELETING WOTH PERSON ============================\r\n" ) ;

    }
        }
            //SAYfIELDoUT( "favoriteseries" ) ;
            //listC::fieldIF( tin0P , pOut , hRec , "favoriteseries" , _fe_modeAllC() +  _fe_queryC() , LF ) ;
            //
            //SAYfIELDoUT( "favoritewords" ) ;
            //listC::fieldIF( tin0P , pOut , hRec , "favoritewords" , _fe_modeAllC() +  _fe_queryC() , LF ) ;
            
            SAYfIELDoUT( "favoritenumbers" ) ;
            listC::fieldIF( tin0P , pOut , hRec , pczField , _fe_modeAllC() +  _fe_queryC() , LF ) ;
            CONoUTrAW( "================== \"favoritenumbers\" , _fe_modeAllC() +  _fe_queryC() ============================\r\n" ) ;
        
            //SAYfIELDoUT( "favoritenumbers" ) ;
            //listC::fieldIF( tin0P , pOut , hRec , pczField , _fe_modeAllC() + _fe_deleteC() , LF ) ;
            //CONoUTrAW( "================== \"favoritenumbers\" , _fe_modeAllC() + _fe_deleteC() ============================\r\n" ) ;
        
            //SAYfIELDoUT( "favoritenumbers" ) ;
            //listC::fieldIF( tin0P , pOut , hRec , pczField , _fe_deleteC() , LF ) ;
            //CONoUTrAW( "================== \"favoritenumbers\" , _fe_deleteC() ============================\r\n" ) ;
        
            SAYfIELDoUT( "favoritenumbers" ) ;
            listC::fieldIF( tin0P , pOut , hRec , pczField , _fe_purgeC( 0 ) , LF ) ;
            CONoUTrAW( "================== \"favoritenumbers\" , _fe_purgeC( 3 ) ============================\r\n" ) ;
        
            SAYfIELDoUT( "favoritenumbers" ) ;
            listC::fieldIF( tin0P , pOut , hRec , pczField , _fe_modeAllC() +  _fe_queryC() , LF ) ;
            CONoUTrAW( "================== \"favoritenumbers\" , _fe_modeAllC() +  _fe_queryC() ============================\r\n" ) ;
        
            }
                //}
                //    }
                //        PUSE( tin0P , *(byteT**)&pczv ) ;
                //        DELlIST( fieldEditParamOutC , pOut ) ;
                //        puseC puseat( tin0P , ifcIDpOOL_ADAMtEMP ) ;
                //    {
                //    listC::fieldIF( tin0P , pOut , hRec , "favoriteseries" , _fe_pushC( pczv ) + _fe_modePushSinkC() , LF ) ;
                //
                //    pczv[ offo ] = 0 ;
                //    for( countT offo = 0 ; offo < vv ; offo ++ ) pczv[ offo ] = vv ;
                //
                //    }
                //        pczv = (countT*)PUSE.newF( tin0P , LF , ( 1 + vv ) * sizeof( countT ) ) ; ___( pczv ) ;
                //        puseC puseat( tin0P , ifcIDpOOL_ADAMtEMP ) ;
                //    {
                //    ZE( countT* , pczv ) ;
                //{
                //for( vv = 1 ; vv <= 0x1 ; vv ++ )
                //
                //}
                //    DELlIST( fieldEditParamOutC , pOut ) ;
                //    listC::fieldIF( tin0P , pOut , hRec , "favoritewords" , _fe_pushC( postv[ offv ] ) + _fe_modePushSinkC() , LF ) ;
                //{
                //for( countT offv = 0 ; offv < sizeof postv / sizeof postv[ 0 ] ; offv ++ )
                //
                //} ;
                //    //"dddd" ,
                //    //"ccc" ,
                //    //"bb" ,
                //    "a" ,
                //{
                //osTextT* postv[] =

                //DELlIST( fieldEditParamOutC , pOut ) ;
                //listC::fieldIF( tin0P , pOut , hRec , pczField , _fe_pushC( favorite2 ) + _fe_modePushSinkC() , LF ) ;
                DELlIST( fieldEditParamOutC , pOut ) ;
                listC::fieldIF( tin0P , pOut , hRec , pczField , _fe_pushC( favorite1 ) + _fe_modePushSinkC() , LF ) ;
                countT pczField[] = { (countT)"favoritenumbers" , 0 } ;
            {
            
            listC::openIF( tin0P , hRec , pczList ) ;
            handleC hRec( tin0P , TAG( TAGiDnULL ) , ifcIDtYPEhANDLE_LISTING ) ;
        {
        ZE( fieldEditParamOutC* , pOut ) ;
        
        listC::dictionaryReplaceOsTextIF( tin0P , pczList ) ;
        countT pczList[] = { LISTnAMEsYS_ROOTaPPLICATION , (countT)"persons" , idSerial , 0 } ;

        CONoUTrAW7( "[offByte,favorite1,favorite2]: " , offByte , " " , favorite1 , " " , favorite2 , "\r\n" ) ;
        countT favorite2 = 0x11 + offByte % 2 ;
        countT favorite1 = 1 + offByte / 2 ;
        countT offByte = ( idSerial & 0xff ) - 1 ;
        countT idSerial = ++ idSerialLath ;
    {
    while( cToDo -- )
    countT cToDo = 1 ;
    
    //puseC puseMaster( tin0P , ifcIDpOOL_HOMEtEMP ) ;
{
THREADmODE2oN( flTHREADmODE2_UNLOCKpOOLiDENTITY )

countT idSerialLath = BM_HIGH + TUCK ;

grabitC grabitx( tin0P , TAG( TAGiDnULL ) ) ;


// }
//     THREADmODE2rESTORE
//     }
//         listC lFoo( tin0P , 0xffffffff ) ;
//     {
//     grabitC grabitx( tin0P , TAG( TAGiDnULL ) ) ;
//     THREADmODE2oN( flTHREADmODE2_ALLOWdESTRUCTIONoFlISTINGc | flTHREADmODE2_ALLOWcONSTRUCTIONoFlISTINGc )
//     
//     countT cb8 = sizeof( list_countTstrz_C ) ;
//     countT cb7 = sizeof( list_blob_C ) ;
//     countT cb6 = sizeof( list_countT_C ) ;
//     countT cb5 = sizeof( listC ) ;
//     countT cb4 = sizeof( listing_countTstrz_C ) ;
//     countT cb3 = sizeof( listing_blob_C ) ;
//     countT cb2 = sizeof( listing_countT_C ) ;
//     countT cb1 = sizeof( listingC ) ;
// 
// 
//     byteT bCheck = getNeg8AM( bTo ) ;
// 
//     putNeg8AM( bTo , bFrom ) ;
//     byteT& bTo = *(byteT*)&cTo ;
//     countT cTo = 0 ;
//     byteT bFrom = 2 ;
// 
// {
// 
// }
//     ZE( countT , idFoo ) ;
// 
//     }
//         }
//             }
//                 fooC foo4( &foo3 ) ;
//             {
//             fooC foo3( &foo2 ) ;
//         {
//         fooC foo2( &foo1 ) ;
//     {
//     fooC foo1 ;
// {
// 
// }
//     THREADmODE2rESTORE
//     }
//         ZE( countT , foo ) ;
//     
//         }
//             }
//                 }
//                     }
//                         listingVSP spl4( &listing1 ) ;
//                     {
//                     listingVSP spl3( &listing1 ) ;
//                 {
//                 listingVSP spl2( &listing1 ) ;
//             {
//             listingVSP spl1( &listing1 ) ;
//         {
//     
//         listingC listing1( tin0P ) ;
//     {
//     THREADmODE2oN( flTHREADmODE2_ALLOWcONSTRUCTIONoFlISTINGc | flTHREADmODE2_ALLOWdESTRUCTIONoFlISTINGc )
// {

TODO

// countT fooC::idMeLath ;
// 
// ;
// }
//     }
//         CONoUTrAW3( "say  " , idMe , "\r\n" ) ;
//     {
//     inline voidT sayF( voidT )
// 
//     }
//         CONoUTrAW3( "cry  " , idMe , "\r\n" ) ;
//     {
//     idMe( 1 + incv02AM( idMeLath ) )
//     link Old2C( pFooP ) ,
//     inline fooC( fooC* pFooP = 0 ) :
// 
//     }
//         CONoUTrAW3( "GASP " , idMe , "\r\n" ) ;
//     {
//     inline ~fooC( voidT )
// 
//     public :
// 
//     countT        idMe ;
//     static countT idMeLath ;
// {
// class fooC : public link Old2C

/*1*/WAKEsHOWtEXT( "scratch" )/*1*/
/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

