
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    grab.ungrabF( tin0P ) ;

    }
        }
            mStock += mQuantityP ;
        
            mMoney  -= mTake ;
            mMoneyP += mTake ;
        
            measure04T mTake = mQuantityP * pmPrice[ offBucket ] ;
        {
        if( mQuantityP )
    
        if( mQuantityP > mQuantityMax ) mQuantityP = mQuantityMax ;
        measure04T mQuantityMax = mMoney / pmPrice[ offBucket ] ;
    
        if( mMoney < mMoneyNeeded ) mMoney = mMoneyNeeded ; //U::GET REAL MONEY FROM SOMEWHERE
        measure04T mMoneyNeeded = mQuantityP * pmPrice[ offBucket ] ;
    
        if( !( F(flagsP) & flMARKETsELL_RETRYING ) ) pmSupply[ offBucket ] += mQuantityP ;
    {
    if( mQuantityP )

    if( F(flagsP) & flMARKETsELL_IFpRICEiNrANGE && !( mPriceMinP <= pmPrice[ offBucket ] && pmPrice[ offBucket ] <= mPriceMaxP ) ) mQuantityP = 0.0 ;

    adjustPriceF( tin0P , etherP ) ;

    grab.grabF( tin0P , TAG( TAGiDnULL ) ) ;
{
/*1*/voidT marketC::sellF( tin0S& tin0P , etherC& etherP , measure04T& mMoneyP , measure04T& mQuantityP , const flagsT flagsP , const measure04T mPriceMinP , const measure04T mPriceMaxP )/*1*/

/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

