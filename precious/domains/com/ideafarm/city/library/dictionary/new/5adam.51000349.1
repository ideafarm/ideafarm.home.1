
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


//VISIBLE

REST
etThread.osProcessIdPhaseAdamF( tin0P , ifcIDpHASEhANDOFFoLD_SHUTTINGdOWN ) ;

}
    fooF( tin0P , etThread ) ;
    cC cc1( tin0P , TAG( TAGiDnULL ) , "todo: about to call fooF" ) ;
{

TODO

}
    }
        foo2F( tin0P , ether ) ;
        cC cc1( tin0P , TAG( TAGiDnULL ) , "fooF: about to call foo2F" ) ;
    {
    _IO_
{
voidT fooF( tin0S& tin0P , etherC& ether )

}
    }
        ether.delF( tin0P , postr ) ;
        ether.boxPutF( tin0P , T("///d/tins.ttt") , postr , costr ) ;
        countT costr = ether.strMakeF( tin0P , LF , postr , psttr ) ; ___( postr ) ;
        ZE( osTextT* , postr ) ;
        ((tin123S&)tin0P).strFuseF( tin0P , ether , psttr /* , 0 , 0 , flTINrPT1_pIdLineStepAll | flTINrPT1_pIdLineStepLast01*/ ) ; ___( psttr ) ;
        ZE( strokeS* , psttr ) ;

        cC cc1( tin0P , TAG( TAGiDnULL ) , "foo2F: about to call ((tin123S&)tin0P).strFuseF" ) ;
    {
    _IO_
{
voidT foo2F( tin0S& tin0P , etherC& ether )

/*1*/WAKEhIDE( "example.simplest.tin123S.strFuseF.and.cC.cC" )/*1*/
/**/
*/
\<A HREF=\"5.b430104.1.0.html\"\>definition\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

