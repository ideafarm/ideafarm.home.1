
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


//VISIBLE

REST
etThread.osProcessIdPhaseAdamF( tin0P , ifcIDpHASEhANDOFFoLD_SHUTTINGdOWN ) ;

etThread.delF( tin0P , psttnu ) ;
etThread.faceHearF( tin0P , psttnu ) ;
ZE( strokeS* , psttnu ) ;

}
    default                             : { __1                                        ; break ; }
    case ifcPROCESSdEATH_HARDWAREfAILURE : { etThread.strokeF( tin0P , T("hardware failure"             )+tEnter ) ; break ; }
    case ifcPROCESSdEATH_SOFTWAREfAILURE : { etThread.strokeF( tin0P , T("software failure"             )+tEnter ) ; break ; }
    case ifcPROCESSdEATH_MURDERED        : { etThread.strokeF( tin0P , T("murdered"                     )+tEnter ) ; break ; }
    case ifcPROCESSdEATH_NORMAL          : { etThread.strokeF( tin0P , T("old age (or hired on windows)")+tEnter ) ; break ; }
{
switch( idDeathType )
TN( tEnter , "\r\npress the enter key now" ) ;

etThread.delF( tin0P , psttIdDeathType ) ;
etThread.delF( tin0P , psttValue ) ;
etThread.strokeF( tin0P , T("\r\nvalue = ")+T(psttValue)+T("\r\nidDeathType = ")+T(psttIdDeathType)+T("\r\n") ) ;
etThread.strFromF( tin0P , psttIdDeathType , idDeathType ) ;
etThread.strFromF( tin0P , psttValue , value ) ;
ZE( strokeS* , psttIdDeathType ) ;
ZE( strokeS* , psttValue ) ;

etThread.osProcessWaitF( tin0P , value , idDeathType , tid , pid ) ;
ZE( countT , idDeathType ) ;
ZE( countT , value ) ;
{ ZE( countT , tnu ) ; etThread.osThreadF( tin0P , tnu , tmKillF , 0 , 0  , flTHREADlAUNCH_null , 0 , 0 , pid ) ; }

etThread.osSessionF( tin0P , tid , pid , 0x4010024 , 0 , 100 , 100 , 400 , 200 ) ;
ZE( countT , pid ) ;
ZE( countT , tid ) ;

TODO

DONE( tmKillF )

etThread.osProcessKillF( tin0P , pid ) ;
etThread.osSleepF( tin0P , TOCK * 2 , 0 , flSLEEP_TALK ) ;

const countT pid = pTaskP ? pTaskP->c1 : 0 ;
TASK( tmKillF )

/*1*/WAKEhIDE( "example.simplest.snip.0010018.ifcPROCESSdEATH.2of2.killer" )/*1*/
/**/
*/
on os/2, "murdered" is reported (which is correct)
on windows, "old age" is reported
the ifcPROCESSdEATH value is not available on windows
\<A HREF=\"5.5200104.1.0.html\"\>definition\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

