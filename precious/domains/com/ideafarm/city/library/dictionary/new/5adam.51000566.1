
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//

    
REST

etThread.delF( tin0P , pbAll ) ;

}
    etThread.delF( tin0P , psttw ) ;
    etThread.strokeF( tin0P , T("decoded: \"")+T(psttw)+T("\"\r\n") ) ;
    pbc += etThread.strDecodeF( tin0P , psttw , pbc ) ; ___( psttw ) ;
{
while( pbc < pbe )
ZE( strokeS* , psttw ) ;
pbc = pbAll ;

pbe = pbc ;
pbc += etThread.strEncodeF( tin0P , pbc , tD , pbe ) ;
pbc += etThread.strEncodeF( tin0P , pbc , tC , pbe ) ;
pbc += etThread.strEncodeF( tin0P , pbc , tB , pbe ) ;
pbc += etThread.strEncodeF( tin0P , pbc , tA , pbe ) ;
byteT* pbc = pbAll ;

const byteT* pbe = pbAll + cbAll ;
etThread.newF( tin0P , LF , pbAll , cbAll ) ; ___( pbAll ) ;
const countT cbAll = TOCK ;
ZE( byteT* , pbAll ) ;

TN( tD , "dddddddd" ) ;
TN( tC , "cccccccc" ) ;
TN( tB , "bbbbbbbb" ) ;
TN( tA , "aaaaaaaa" ) ;

TODO

/*1*/WAKEsHOW( "example.other.func.10301ef.etherC.strEncodeF.aggregated.data" )/*1*/
/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

