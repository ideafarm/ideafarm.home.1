
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


//VISIBLE

REST
etThread.osProcessIdPhaseAdamF( tin0P , ifcIDpHASEhANDOFFoLD_SHUTTINGdOWN ) ;

HEAReNTER( ether )
etThread.strokeF( tin0P , T("\r\n\r\npress the enter key") ) ;

}
    }
        etThread.strokeF( tin0P , TF1(cv)+T("\r\n") ) ;
        sws >> cv ;
        ZE( countT , cv ) ;
    {
    while( sws )

    etThread.strokeF( tin0P , T("for lever value ")+TF1(lever)+T(", sws contains"":\r\n") ) ;
    lever = sws.leverF( tin0P , idf ) ;
{
for( countT idf = 1 ; idf <= cFlavors ; idf ++ )
countT cFlavors = sws.cFlavorsF( tin0P ) ;
sws.replaceLeverF( tin0P , lever ) ;
ZE( countT , lever ) ;
etThread.strokeF( tin0P , T(USCORE79 "\r\n\r\n") ) ;

while( etThread.os_cAllKidThreadsI_IF( tin0P ) > cKidsBefore ) etThread.osSleepF( tin0P , TUCK * 32 ) ;

while( cTries -- ) { ZE( countT , tnu ) ; etThread.osThreadF( tin0P , tnu , tmF , 0 , 0  , flTHREADlAUNCH_null , 0 , 0 , (countT)&sws ) ; }
countT cTries = 0x4 ;
const countT cKidsBefore = etThread.os_cAllKidThreadsI_IF( tin0P ) ;

switchStackC sws( ether , tin0P , TAG( TAGiDnULL ) ) ;

TODO

DONE( tmF )
}
    sws.ungrabF( tin0P ) ;

    sws.replaceLeverF( tin0P ) ;
    }
        while( handle ) ;
        }
            etThread.strokeF( tin0P , TF1(cv)+T("\r\n") ) ;
            countT cv = sws.downF( tin0P , handle ) ;
        {
        do
        handleC handle( tin0P , TAG( TAGiDnULL ) , ifcIDtYPEhANDLE_FILE ) ;

        etThread.strokeF( tin0P , T("for lever value ")+TF1(lever)+T(", sws contains"":\r\n") ) ;
        lever = sws.leverF( tin0P , idf ) ;
    {
    for( countT idf = 1 ; idf <= cFlavors ; idf ++ )
    countT cFlavors = sws.cFlavorsF( tin0P ) ;
    sws.replaceLeverF( tin0P , lever ) ;
    ZE( countT , lever ) ;

    for( countT idTry = 1 ; idTry <= 3 ; idTry ++ ) sws << idTry ;

    sws.grabF( tin0P , TAG( TAGiDnULL ) ) ;

    switchStackC& sws = *(switchStackC*)pTaskP->c1 ;
{
if( pTaskP && pTaskP->c1 )
TASK( tmF )

/*1*/WAKEhIDE( "example.simplest.func.1210032.switchStackC.replaceLeverF" )/*1*/
/**/
*/
\<A HREF=\"5.f030104.1.0.html\"\>definition\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

