
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    }
        etherC::etRockIF( tin0P ).traceF( tin0P , (const strokeS*)(const osTextT*)ostoSay , flTRACE_PARAMETERiSoStEXT ) ;

        OStEXTC(  ostoSay , idSubType , ' ' ) ;
        OStEXTAK( ostoSay , "    " ) ;
        OStEXTC(  ostoSay , idiFileGrunt , ' ' ) ;
        OStEXTAK( ostoSay , "    " ) ;
        OStEXTC(  ostoSay , idLineGrunt , ' ' ) ;
        OStEXTAK( ostoSay , "    " ) ;
        OStEXTC(  ostoSay , idiFileP , ' ' ) ;
        OStEXTAK( ostoSay , "    " ) ;
        OStEXTC(  ostoSay , idLineP , ' ' ) ;
        OStEXTA(  ostoSay , ( F(flags) & flPOOP_SMELLY ? "poopC sniff sniff [idLineChatter,idiFileChatter,idLineGrunt,idiFileGrunt,idSubType]:    " : "poopC [idLineChatter,idiFileChatter,idLineGrunt,idiFileGrunt,idSubType]:    " ) ) ;
        OStEXT(   ostoSay , TUCK << 2 ) ;
    {
    if( ((tin1S&)tin0P).pEther )

    //((tin1S&)tin0P).pc Utility[ 4 ] = idSubType ;
    //((tin1S&)tin0P).pc Utility[ 3 ] = idiFileGrunt ;
    //((tin1S&)tin0P).pc Utility[ 2 ] = idLineGrunt ;
    //((tin1S&)tin0P).pc Utility[ 1 ] = idiFileP ;
    //((tin1S&)tin0P).pc Utility[ 0 ] = idLineP ;

    //POPUP( "chatterF: sniff sniff" ) ;
    //LOGrAW3( "sniff sniff poopC object grunt " , idSubType , "\r\n" ) ;
{
/*1*/voidT poopC::chatterF( tin0S& tin0P , const countT idLineP , const countT idiFileP ) const/*1*/

/**/
*/
arguments
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

