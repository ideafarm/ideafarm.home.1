
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


REST
etThread.osProcessIdPhaseAdamF( tin0P , ifcIDpHASEhANDOFFoLD_SHUTTINGdOWN ) ;

}
    ((thirdC&)etThread).logF( tin0P , T("with tin0P at ")+TF1((countT)&tin0P)+T(", cTries = ")+TF1(CtRIES)+T("; time = ")+TT(time1e,time2e)+T("; mean time = ")+TT(time1m,0) ) ;

    countT time1m = time1e / CtRIES ;
    __( time2e ) ;

    etThread.osTimeSubtractF( tin0P , time1e , time2e , time1s , time2s ) ;    
    etThread.osTimeNowF( tin0P , time1e , time2e ) ;
    ZE( sCountT , time2e ) ;
    ZE(  countT , time1e ) ;

    myEther.flagsWatch &= ~( F(flWATCH_EMPLOYERS) ) ;

    while( cTries -- ) myEther.osDoNothingF( tin0P ) ;
    countT cTries = CtRIES ;

    myEther.flagsWatch |= flWATCH_EMPLOYERS ;

    etThread.osTimeNowF( tin0P , time1s , time2s ) ;
    ZE( sCountT , time2s ) ;
    ZE(  countT , time1s ) ;

    etherC myEther( tin0P , TAG( TAGiDnULL ) , ether ) ;
{

TODO

#define CtRIES 0x10000

/*1*/WAKEhIDE( "tachometer" )/*1*/
/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

