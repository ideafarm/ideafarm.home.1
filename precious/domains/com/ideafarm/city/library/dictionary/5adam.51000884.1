
//
// Copyright (c) 1992-2025 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


//VISIBLE

REST

etherC::loafIF( tin0P ) ;
etThread.traceF( tin0P , T("ok") ) ;

third.s_writeF( tin0P , handleJob , (byteT*)&value , sizeof value ) ;
countT value = 0x33333333 ;

third.s_acceptF( tin0P , handleJob , idPortPeer , nnPeer , handleServer , countTC() , 0 , &pp ) ;

ZE( countT , idPortPeer ) ;
nicNameC nnPeer ;
handleC handleJob( tin0P , TAG( TAGiDnULL ) , ifcIDtYPEhANDLE_SOCKET ) ;

Sleep( 4000 ) ;

etThread.osThreadF( TaRG1( tmClientF   ) ) ;
etThread.osThreadF( TaRG1( tmAcceptorF ) , (countT)&pp ) ;

s_acceptF_parametersS pp( tin0P , cFifoPushed , pFifo , CsLOTS , cFifoPulled , handleServer ) ;
ZE( countT , cFifoPulled ) ;
ZE( countT , cFifoPushed ) ;

third.s_listenF( tin0P , handleServer ) ;
idPort = third.s_bindF( tin0P , handleServer ) ;
third.s_socketIF( tin0P , handleServer ) ;
handleC handleServer( tin0P , TAG( TAGiDnULL ) , ifcIDtYPEhANDLE_SOCKET ) ;

thirdC& third = ether ;

TODO

oshSocketAcceptedS pFifo[ CsLOTS ] ;

#define CsLOTS ( TUCK )

DONE( tmAcceptorF )
}
    }
        third.s_acceptF( ppP ) ;
    {
    while( !ether )
    thirdC& third = ether ;

    s_acceptF_parametersS& ppP = *(s_acceptF_parametersS*)pTaskP->c1 ;
{
if( pTaskP && pTaskP->c1 )
TASK( tmAcceptorF )

DONE( tmClientF )
}
    etThread.traceF( tin0P , T("value: ")+TF1(value) ) ;
    thThread.s_readF( tin0P , (byteT*)&value , sizeof value , handleClient ) ;
    ZE( countT , value ) ;
    thThread.s_connectF( tin0P , handleClient , idPort , nnServer ) ;
    thThread.s_socketIF( tin0P , handleClient ) ;
    handleC handleClient( tin0P , TAG( TAGiDnULL ) , ifcIDtYPEhANDLE_SOCKET ) ;

    nicNameC nnServer = socketC::nicNameIF( tin0P , etThread , T("::1") ) ;

    thirdC& thThread = etThread ;
{
if( pTaskP )
TASK( tmClientF )

countT idPort ;

// BASELINE: 883_

/*1*/WAKEhIDE( "example.simplest.1snip.150001d0.s_acceptF_parametersS" )/*1*/
/**/
*/
i demonstrate how to optimize for bursts of client connections by using a dedicated thread and a circular fifo buffer
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2025 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

