
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


                _IO_
            {                                                                                                                                                                       \
                                                                                                                                                                                    \
            ((tinNormalS&)tinBaseP).pSgnUtility = &_sgnUtility ;                                                                                                                    \
            signC _sgnUtility( tinBaseP , TAG( TAGiDnULL ) ) ;                                                                                                                      \
            }                                                                                                                                                                       \
                if( ((tinNormalS&)tinBaseP).idPhase1 < ifcIDpHASEtHREAD_WORKING ) ((tinNormalS&)tinBaseP).idPhase1 = ifcIDpHASEtHREAD_WORKING ;                                     \
                    thirdC::third_idPhaseAdam_IF( tinBaseP ) = ifcIDpHASEaDAM_DLLwORKING1 ;                                                                                         \
                if( thirdC::third_idPhaseAdam_IF( tinBaseP ) < ifcIDpHASEaDAM_DLLwORKING1 )                                                                                         \
            {                                                                                                                                                                       \
            if( !( F(((tinNormalS&)tinBaseP).flagsThreadMode2) & flTHREADmODE2_DRIVERaDAM ) )                                                                                       \
            /*(countT&)_tlsBlobStackTop = espAM() ;                      */                                                                                                         \
            /*tlsBlobC _tlsBlobStackTop( tinBaseP , "appStackTop" , "tin" ) ;*/                                                                                                     \
            /*tlsAllocStackExp_7_C tlsForMe( tinBaseP ) ;                    */                                                                                                     \
            TELL( "MAINF: entering application code" ) ;                                                                                                                            \
            /*U:{ countT idio = DDNUMB ; if( idio != 0x 4010354 && idio != 0x 4010405 && idio != 0x 40103c1 && idio != 0x 40103d1 ) etThread.ifcPortNewProcessF( tinBaseP ) ; }*/   \
            /*U:REPLACE THESE HARDCODED idAdam VALUES WITH ifcIDaDAM SYMBOLS*/                                                                                                      \
            etThread.ifcDatumF( tinBaseP , flDATUM1_CLASStRACEaLWAYShIREdLL , flDATUM2_null , 0 , 0 , 0 , (voidT*)DDNAME ) ;                                                        \
            etThread.osTimeNowF( tinBaseP , timeBorn.time1 , timeBorn.time2 ) ;                                                                                                     \
            /*etRock.traceF( tinBaseP , T("osTid: ")+TF4(((tinNormalS&)tinBaseP).osTid,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED|flFORMAT_FOREIGN,0,0xa) ) ;*/                       \
            handleC& hDll = pmp->hDll ;                                                                                                                                             \
            etherC& etThread = pmp->etThread ;                                                                                                                                      \
            timeS timeBorn ;                                                                                                                                                        \
            etherC& etRock = etherC::etRockIF( tinBaseP ) ;                                                                                                                         \
            etherC& ether = pmp->ether ;                                                                                                                                            \
            thirdC::osTraceWrongNodeIF( tinBaseP , (byteT*)mainF , "mainF" ) ;                                                                                                      \
            TELL( "MAINF/+" ) ;                                                                                                                                                     \
            _IO_                                                                                                                                                                    \
            tinBaseS& tinBaseP = pmp->tinBase ;                                                                                                                                     \
        {                                                                                                                                                                           \
        if( pmp )                                                                                                                                                                   \
        mainS* const& pmp = pMainParametersP ;                                                                                                                                      \
    {                                                                                                                                                                               \
    extern "C" rTypeP _export cTypeP mainF( mainS* const pMainParametersP )                                                                                                         \
                                                                                                                                                                                    \
#define MAINF(rTypeP,cTypeP)                                                                                                                                                        \
/*1*//*MAINF(rTypeP,cTypeP)*//*1*/
/**/
*/
it is illegal to refer to this symbol in the definition of an adam
\<A HREF=\"5.11000002.1.0.html\"\>definition\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

