
//
// Copyright (c) 1992-2025 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


DONE( tmWatchRudeF )

}
    }
        ++ s ; etThread.osSleepF( tin0P , TOCK >> 2 ) ;

        }
            else if( scDozeChange < 0 ) { etRock.traceF( tin0P , T("---- DOZEmAYBE off ----") ) ; thirdC::third_flagsModeProcess2I_IF() &= ~F(flMODEpROCESS2_DOZEmAYBE) ; }
                 if( scDozeChange > 0 ) { etRock.traceF( tin0P , T("++++ DOZEmAYBE ON  ++++") ) ; thirdC::third_flagsModeProcess2I_IF() |=    flMODEpROCESS2_DOZEmAYBE  ; }

            }
                }                                                                                                                                               //
                    if( !( F(thirdC::third_flagsModeProcess2I_IF()) & flMODEpROCESS2_DOZEmAYBE ) ) scDozeChange = 1 ;                                           //     IF CLEAR THEN SET
                {                                                                                                                                               //
                else if( offPeriodModulo == processGlobal2I.cDozeSprint )                                                                                       //  IF END OF SPRINT
                }                                                                                                                                               //
                    else if(  processGlobal2I.cDozeSprint &&    F(thirdC::third_flagsModeProcess2I_IF()) & flMODEpROCESS2_DOZEmAYBE   ) scDozeChange = - 1 ;    //     ELSE IF     SPRINT AND SET   THEN CLEAR
                         if( !processGlobal2I.cDozeSprint && !( F(thirdC::third_flagsModeProcess2I_IF()) & flMODEpROCESS2_DOZEmAYBE ) ) scDozeChange =   1 ;    //          IF NOT SPRINT AND CLEAR THEN SET
                {                                                                                                                                               //
                if( !offPeriodModulo )                                                                                                                          //  IF ZE'TH PERIOD
            {                                                                                                                                                   //
            else                                                                                                                                                // ELSE (ENABLED)
            }                                                                                                                                                   //
                if( F(thirdC::third_flagsModeProcess2I_IF()) & flMODEpROCESS2_DOZEmAYBE ) scDozeChange = - 1 ;                                                  //   IF SET THEN CLEAR
            {                                                                                                                                                   //
            if( !( F(thirdC::third_flagsModeProcess2I_IF()) & flMODEpROCESS2_ENABLEdOZING ) )                                                                   // IF NOT ENABLED
                                                                                                                                                                //
            ZE( sCountT , scDozeChange ) ;
            countT offPeriodModulo = ++ idPeriod % PERIODSpERdOZEcYCLE ;
        {

        _IO_
    {
    )
        )
            ((tin1S&)tin0P).pag1->ctWatch > 1
            ||
            !ether
        (
        &&
        !etThread
    (
    while
    sleepC s( tin0P , TAG( TAGiDnULL ) ) ;
    ZE( countT , idPeriod ) ;

    //   
    //   
    //   
    //   
    //     ELSE IF OFFSET == cDozeSprint THEN   SET DOZEmAYBE
    // 
    //       IF cDozeSprint THEN                CLEAR DOZEMAYBE
    //   
    //     ELSE IF !OFFSET
    //   
    //     IF NOT ENABLED THEN                  CLEAR DOZEmAYBE
    //   
    //   FOR EACH PERIOD
    //   
    // RECIPE
    //   
    //   IF !processGlobal2I.cDozeSprint THEN DOZEmAYBE IS ON FOR EVERY PERIOD
    //   
    //   01 PERIODS PER "CYCLE" (4 PERIODS PER TOCK)
    //   
    //   A CYCLE IS 4 TOCK
    //   
    // OBJECTIVE

    etThread.osThreadSwitchingDesireF( tin0P , ifcTHREADpRIORITY_RUDE ) ;

    }
        sgnWatchRudeReady.giveF( tin0P ) ;
        sgnWindowsReady.waitF( tin0P ) ;

        signC& sgnWindowsReady   = *(signC*)pTaskP->c2 ;
        signC& sgnWatchRudeReady = *(signC*)pTaskP->c1 ;
    {
    //I CANNOT JUST LAUNCH tmWatchF LATER BECAUSE THAT WOULD CHANGE idThread VALUES FOR SYSTEM THREADS (MY idThread WOULD DEPEND UPON WINDOWING AND PROBABLY ALSO ON A RACE CONDITION INVOLVING THREAD STARTUP)
    //THIS BLOCK IS TO ENSURE THAT tmWindowsF AND tmAnimateSadamsF GET STARTED BEFORE I CHECK FOR THEIR PRESENCE

    _IO_
{
if( pTaskP && pTaskP->c1 && pTaskP->c2 )
/*1*/TASK( tmWatchRudeF )/*1*/

/**/
*/
/*

/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2025 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

