
//
// Copyright (c) 1992-2025 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


DONE( tmWatchRudeF )

}
    }
        ++ s ; etThread.osSleepF( tin0P , !ether ? TOCK : TOCK >> 3 ) ;
        TELL( "napping for a tock" ) ;

        }
            }
                                                                                                   thirdC::third_flagsModeProcess2I_IF()  &= ~F(flMODEpROCESS2_DOZEmAYBE) ;
                idCycleDoze = 0 ;
                etRock.traceF( tin0P , T("---- DOZEmAYBE off ----") ) ;
            {
            else if( ++ idCycleDoze == 9 )
            }
                                                                                                   thirdC::third_flagsModeProcess2I_IF()  |=    flMODEpROCESS2_DOZEmAYBE  ;
                idCycleDoze = 1 ;
                etRock.traceF( tin0P , T("++++ DOZEmAYBE ON ++++") ) ;
            {
            else if( !( idCycle % 0x10 ) )
                 if( !( F(thirdC::third_flagsModeProcess2I_IF()) & flMODEpROCESS2_ENABLEdOZING ) ) thirdC::third_flagsModeProcess2I_IF()  &= ~F(flMODEpROCESS2_DOZEmAYBE) ;
        {

        ++ idCycle ;

        _IO_
    {
    )
        )
            ((tin1S&)tin0P).pag1->ctWatch > 1
            ||
            !ether
        (
        &&
        !etThread
    (
    while
    sleepC s( tin0P , TAG( TAGiDnULL ) ) ;
    ZE( countT , idCycleDoze ) ;
    ZE( countT , idCycle     ) ;

    etThread.osThreadSwitchingDesireF( tin0P , ifcTHREADpRIORITY_RUDE ) ;

    }
        sgnWatchRudeReady.giveF( tin0P ) ;
        sgnWindowsReady.waitF( tin0P ) ;

        signC& sgnWindowsReady   = *(signC*)pTaskP->c2 ;
        signC& sgnWatchRudeReady = *(signC*)pTaskP->c1 ;
    {
    //I CANNOT JUST LAUNCH tmWatchF LATER BECAUSE THAT WOULD CHANGE idThread VALUES FOR SYSTEM THREADS (MY idThread WOULD DEPEND UPON WINDOWING AND PROBABLY ALSO ON A RACE CONDITION INVOLVING THREAD STARTUP)
    //THIS BLOCK IS TO ENSURE THAT tmWindowsF AND tmAnimateSadamsF GET STARTED BEFORE I CHECK FOR THEIR PRESENCE

    _IO_
{
if( pTaskP && pTaskP->c1 && pTaskP->c2 )
/*1*/TASK( tmWatchRudeF )/*1*/
/**/
*/
/*

/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2025 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

