
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


REST

etThread.delF( tin0P , posti ) ;
etThread.boxPutF( tin0P , tOut , posti , costi ) ;

etThread.delF( tin0P , pstti ) ;
costi = etThread.strMakeF( tin0P , LF , posti , pstti ) ; ___( posti ) ;

etThread.strReplaceF( tin0P , pstti , 0 , T("\r\n@") , T("\r\n#$") ) ; ___( pstti ) ;
etThread.delF( tin0P , posti ) ;
etThread.strMakeFromOsTextF( tin0P , pstti , posti ) ; ___( pstti ) ;
ZE( strokeS* , pstti ) ;

etThread.boxGetShadowF( tin0P , posti , costi , tIn ) ; ___( posti ) ;
ZE( countT   , costi ) ;
ZE( osTextT* , posti ) ;

TN( tOut , "///d/tmp/sor" ) ;
TN( tIn , "///d/tmp/uns" ) ;





//etThread.delF( tin0P , psttns ) ;
//etThread.delF( tin0P , psttos ) ;
//etThread.delF( tin0P , psttnb ) ;
//etThread.delF( tin0P , psttob ) ;
//
//etThread.strReplaceAnyF( tin0P , psttnb , psttob , psttos , psttns , 0 , flSTRrEPLACE_null ) ; ___( psttnb ) ;
//
//ZE( strokeS* , psttns ) ; etThread.strMakeF( tin0P , LF , psttns , T("12345678") ) ; ___( psttns ) ;
//ZE( strokeS* , psttos ) ; etThread.strMakeF( tin0P , LF , psttos , T("dcba") ) ; ___( psttos ) ;
//ZE( strokeS* , psttnb ) ;
//ZE( strokeS* , psttob ) ; etThread.strMakeF( tin0P , LF , psttob , T("abcdefghabcd") ) ; ___( psttob ) ;

TODO

/*1*/WAKEsHOWtEXT( "doodle.replace.osTextT.in.ascii.file" )/*1*/
/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

