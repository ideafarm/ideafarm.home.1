
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    ((tinFullS&)tinBaseP).pag5->frPaper.grab.ungrabF( tinBaseP ) ;
    purgeF( tinBaseP ) ;

    x1.pPulp->x1.back.backOldCtPaperF( tinBaseP , *x1.pPulp , *this ) ;

    }
        default                         : { BLAMMO                                                                                                                                         ; break ; }
        case ifcIDtYPEpAPERbACK_eyeOldC    : { x1.pPulp = new( 0 , tinBaseP , LF ) eyePulpOldC( tinBaseP , ether , *this , backP ,                    pPaperToBackCBFP , cPaperToBackArgP ) ; ___( x1.pPulp ) ; break ; }
        case ifcIDtYPEpAPERbACK_windowOldC : { x1.pPulp = new( 0 , tinBaseP , LF ) winPulpOldC( tinBaseP , ether , *this , backP , *(handleC*)cArgP , pPaperToBackCBFP , cPaperToBackArgP ) ; ___( x1.pPulp ) ; break ; }
    {
    switch( backP.backIdTypeF() )

    }
        if( !ids ) { BLAMMO ; }
        ((tinFullS&)tinBaseP).pag1->_paperOldC_.pStInstances->sinkF( tinBaseP , ids , (countT)this , flSTACKsINK_UNIQUE ) ;
        ZE( countT , ids ) ;
    {

    }
        if( ((tinFullS&)tinBaseP).pag1->_paperOldC_.pSgnDone_tmAnimateSadamsOnPaperF ) etRock.osThreadF( tinBaseP , countTC() , tmAnimateSadamsOnPaperF , ((tinFullS&)tinBaseP).pag1->_paperOldC_.pSgnDone_tmAnimateSadamsOnPaperF ) ;

        ((tinFullS&)tinBaseP).pag1->_paperOldC_.pSwHotKey    = new( 0 , tinBaseP , LF ) switchC( tinBaseP , etRock , TAG( TAGiDnULL ) , flSTACKc_DOnOTsERIALIZE | flSTACKc_ALLOWmULTIPLEuNSERIALIZED , ((tinFullS&)tinBaseP).pag1->_paperOldC_.psttlBody ) ; ___( ((tinFullS&)tinBaseP).pag1->_paperOldC_.pSwHotKey ) ;
        etherC& etRock = etherC::etRockIF( tinBaseP ) ;
    
        ((tinFullS&)tinBaseP).pag1->_paperOldC_.pSgnDone_tmAnimateSadamsOnPaperF = new( 0 , tinBaseP , LF ) signC( tinBaseP , TAG( TAGiDnULL ) ) ; ___( ((tinFullS&)tinBaseP).pag1->_paperOldC_.pSgnDone_tmAnimateSadamsOnPaperF ) ;
        ether( tinBaseP , ((tinFullS&)tinBaseP).pag1->_paperOldC_.pStInstances , TAG( TAGiDnULL ) , flSTACKc_DOnOTsERIALIZE | flSTACKc_ALLOWmULTIPLEuNSERIALIZED ) ; ___( ((tinFullS&)tinBaseP).pag1->_paperOldC_.pStInstances ) ;
    {
    if( !((tinFullS&)tinBaseP).pag1->_paperOldC_.pStInstances )
    ((tinFullS&)tinBaseP).pag5->frPaper.grab.grabF( tinBaseP , TAG( TAGiDnULL ) ) ;

    //APP CODE CAN DRAW, SWITCH, DRAW, SWITCH, ETC TO CONCEAL INTERMEDIATE DRAWING RESULTS
    //INITIALLY, PAPER 1 IS BOTH THE PRIMARY SHOW AND THE PRIMARY DRAW PAPER
    //PAPERS 1 2 ARE THE PRIMARY PAPERS

    putNegAM( *(countT*)&finger , FINGERnEG_PAPERc ) ;
    //20180312@0844: DISABLED THESE == TESTS BECAUSE THEY CAN HAPPEN AS RARE SPUROUS EVENTS:  if( getNegAM( finger ) == FINGERnEG_PAPERc ) { BLAMMO ; }
{
stDef( tinBaseP , ether , TAG( TAGiDnULL ) , flSTACKc_BLOB | flSTACKc_DOnOTsERIALIZE | flSTACKc_ALLOWmULTIPLEuNSERIALIZED | flSTACKc_GIVEsIGNdELpLATE | flSTACKc_GIVEsIGNnEWpLATE | flSTACKc_XRAY , sizeof( strokeS ) )
poop( etherP ) ,
ether( etherP ) ,
finger( finger ) ,
/*1*/paperOldC::paperOldC( tinBaseS& tinBaseP , etherC& etherP , const countT cArgP , backOldC& backP , paperToBackCBFT pPaperToBackCBFP , countT cPaperToBackArgP ) :/*1*/

/**/

*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

