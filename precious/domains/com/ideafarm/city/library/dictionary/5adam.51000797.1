
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//

                            
REST

ether.loafIF( tinBaseP ) ;
etThread.traceF( tinBaseP , T("ok") ) ;

//#endif

}
    etThread.traceF( tinBaseP , T("destroyed cache") ) ;
    DEL( pCache ) ;
    etThread.traceF( tinBaseP , T("destroying cache") ) ;

    pCache->reportF( tinBaseP , T("cache report after query") ) ;
    }
        etThread.traceF( tinBaseP , T("found: ")+T(pFound->psttName) ) ;
    {
    if( pFound )
    cachedS* pFound = (*pCache)( T("name 6") , maxAgeMs ) ;
    etThread.traceF( tinBaseP , T("querying cache") ) ;

    pCache->reportF( tinBaseP , T("cache report after purge") ) ;

    pCache->purgeF( tinBaseP , 5 ) ;

    pCache->reportF( tinBaseP , T("cache report after ct") ) ;

    }
        ++ s ; etThread.osSleepF( tinBaseP , TOCK ) ;
        sleepC s( tinBaseP , TAG( TAGiDnULL ) ) ;

        pCache->pushF( tinBaseP , psttName , pbBlob , cbBlob ) ;

        ether.memCopyF( tinBaseP , pbBlob , "abcd" , cbBlob ) ;
        countT cbBlob = 4 ;

        ether.newF( tinBaseP , LF , pbBlob , 4 ) ; ___( pbBlob ) ;
        ZE( byteT* , pbBlob ) ;

        ether.traceF( tinBaseP , psttName ) ;
        ether.strMakeF( tinBaseP , LF , psttName , T("name ")+TF2(8-cDo,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED) ) ; ___( psttName ) ;
        ZE( strokeS* , psttName ) ;
    {
    while( cDo -- )
    countT cDo = 8 ;

    TN( tb4 , "    " ) ;

    cacheC* pCache = new( 0 , tinBaseP , LF ) cacheC( tinBaseP , etThread ) ; ___( pCache ) ;
{

static countT maxAgeMs = etThread.osTimeToOldTimeMsF( tinBaseP , TICK ) ;

//#if defined( NEVERdEFINED )


TODO





/*1*/WAKEsHOWtEXT( "scratch.3.example.other.stackC.dynamic.resorting" )/*1*/
/**/
*/
 this is done by extracting and resinking items
i demonstrate how to use stackC to maintain a list of most recently used blobs
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
