
//
// Copyright (c) 1992-2025 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


REST

}
    etThread.diskWaitDirF( tin0P , hDirChange , ether , tDepository , 1000 , flWAITdIR_FILEnAME | flWAITdIR_DIRnAME ) ;
    ((tin1S&)tin0P).pEtScratch->strokeF( tin0P , T("waiting for a deposit\r\n") ) ;

    }
        BOSdOnOTtEST( WHATgbo , getche() )
        if( !((tin1S&)tin0P).brcRaw ) break ;
        BOSdOnOTtEST( WHATgbo , kbhit() )
    {
    for(;;)

    etThread.delF( tin0P , pstt1m ) ;
    }
        }
            etThread.delF( tin0P , psttNameShort ) ;

            }
                ((tin1S&)tin0P).pEtScratch->delF( tin0P , pstt1e ) ;
                }
                    if( POOP ) { POOPR }

                    etThread.strokeF( tin0P , T("body\r\n") ) ;
                    etThread.osClipboardLetGoF( tin0P ) ;
                    etThread.osClipboardWriteF( tin0P , tBody1+tUrl ) ;
                    etThread.osClipboardGrabF( tin0P ) ;
                    BOSdOnOTtEST( WHATgbo , getch() )
                
                    etThread.strokeF( tin0P , T("subject\r\n") ) ;
                    etThread.osClipboardLetGoF( tin0P ) ;
                    etThread.osClipboardWriteF( tin0P , tSubject ) ;
                    etThread.osClipboardGrabF( tin0P ) ;
                    BOSdOnOTtEST( WHATgbo , getch() )
                
                    etThread.strokeF( tin0P , T("to\r\n") ) ;
                    etThread.osClipboardLetGoF( tin0P ) ;
                    etThread.osClipboardWriteF( tin0P , tTo ) ;
                    etThread.osClipboardGrabF( tin0P ) ;
                    BOSdOnOTtEST( WHATgbo , getch() )
    
                    ((tin1S&)tin0P).pEtScratch->delF( tin0P , psttw ) ;
                    tUrl = T(psttw) ;
                    ((tin1S&)tin0P).pEtScratch->strokeF( tin0P , T(" url: \"")+T(psttw)+T("\"\r\n") ) ;
                    ((tin1S&)tin0P).pEtScratch->strTrimF( tin0P , psttw , 0 , T(TbLACKnEWlINE) ) ;
                    ((tin1S&)tin0P).pEtScratch->strWordF( tin0P , psttw , psttc2 , sttq , S1C(',') , 2 ) ; ___( psttw ) ;

                    ((tin1S&)tin0P).pEtScratch->delF( tin0P , psttw ) ;
                    tTo = T(psttw) ;
                    ((tin1S&)tin0P).pEtScratch->strokeF( tin0P , T(" to: \"")+T(psttw)+T("\"\r\n") ) ;
                    ((tin1S&)tin0P).pEtScratch->strTrimF( tin0P , psttw , 0 , T(TbLACKnEWlINE) ) ;
                    ((tin1S&)tin0P).pEtScratch->strWordF( tin0P , psttw , psttc2 , sttq , S1C(',') , 1 ) ; ___( psttw ) ;
                    strokeS sttq( (countT)0 , sc_IGNOREqUOTES ) ;
                    ZE( strokeS* , psttw ) ;

                    //((tin1S&)tin0P).pEtScratch->strokeF( tin0P , T("entry: \"")+T(psttc2)+T("\"\r\n") ) ;
                {
                FORsTRINGSiN2( pstt1e )
                ((tin1S&)tin0P).pEtScratch->delF( tin0P , posti ) ;
                countT cLines = ((tin1S&)tin0P).pEtScratch->strWordsOldF( tin0P , pstt1e , T(posti) , sttq , T("\r\n") ) ; ___( pstt1e ) ;
                strokeS sttq( (countT)0 , sc_IGNOREqUOTES ) ;
                ZE( strokeS* , pstt1e ) ;

                ((tin1S&)tin0P).pEtScratch->diskMoveFileOrDirF( tin0P , tDoneAok+T(psttNameShort) , psttc1 ) ;
                ((tin1S&)tin0P).pEtScratch->boxGetShadowF( tin0P , posti , costi , psttc1 ) ; ___( posti ) ;
                ZE( countT   , costi ) ;
                ZE( osTextT* , posti ) ;
            {
            else
            }
                ((tin1S&)tin0P).pEtScratch->diskMoveFileOrDirF( tin0P , tDoneFail+T(psttNameShort) , psttc1 ) ;
                POOPR
            {
            if( POOP )

            __( 1 != ((tin1S&)tin0P).pEtScratch->strIdF( tin0P , T("ideafarm.email.") , psttNameShort ) ) ;
            __( psttNameShort && !psttNameShort->idAdam ) ;
            __Z( psttNameShort ) ;
            __( bDir ) ;
    
            ((tin1S&)tin0P).pEtScratch->strConvertToLowerCaseF( tin0P , psttNameShort ) ;
            }
                }
                    etThread.strMakeF( tin0P , LF , psttNameShort , T("rejected") ) ; ___( psttNameShort ) ;
                    etThread.delF( tin0P , psttNameShort ) ;
                {
                if( !psttNameShort || !psttNameShort->idAdam )

                ((tin1S&)tin0P).pEtScratch->strWordF( tin0P , psttNameShort , psttc1 , sttq , S1C('/') , - 2 ) ; ___( psttNameShort ) ;
                etThread.delF( tin0P , psttNameShort ) ;
            {
            if( bDir )
            boolT bDir = psttNameShort && !psttNameShort->idAdam ;
            ((tin1S&)tin0P).pEtScratch->strWordF( tin0P , psttNameShort , psttc1 , sttq , S1C('/') , - 1 ) ; ___( psttNameShort ) ;
            strokeS sttq ;
            ZE( strokeS* , psttNameShort ) ;
    
            SCOOPS
        {
        IFsCRATCHoK
    {
    FORsTRINGSiN1( pstt1m )
    etThread.boxMenuF( tin0P , soul , tDepository+T("*") ) ; ___( pstt1m ) ;
    ZE( strokeS* , pstt1m ) ;
{
while( !ether )
handleC hDirChange( tin0P , TAG( TAGiDnULL ) ) ;

TN( tInDir , "///desk/IdeaFarm " "(tm) Email List Depository" ) ;
TN( tUrl , "http://www.egg.foo.young" ) ;
TN( tBody1 , post1 ) ;
TN( tSubject , "IdeaFarm " "(tm) City" ) ;
TN( tTo , "Wo'O Ideafarm <" ifcEMAIL_WEBsITEcONTACT ">" ) ;

etThread.diskMakeDirIfNeededF( tin0P , tDoneFail ) ;
etThread.diskMakeDirIfNeededF( tin0P , tDoneAok ) ;
etThread.diskMakeDirIfNeededF( tin0P , tDepository ) ;
}
    tDoneFail = tDesk+tDoneFailShort+T("/") ;
    tDoneAok  = tDesk+tDoneAOKShort+T("/") ;
    tDepository = tDesk+tDepositoryShort+T("/") ;
    etThread.delF( tin0P , psttm ) ;
    tDesk = T(psttm) ;
    etThread.diskMapFileNameF( tin0P , psttm , T("///desk/") ) ; ___( psttm ) ;
    ZE( strokeS* , psttm ) ;
{
TN( tDepository , "" ) ;
TN( tDoneFail , "" ) ;
TN( tDoneAok , "" ) ;
TN( tDesk , "" ) ;
TN( tDepositoryShort , "IdeaFarm " "(tm) Email List Depository") ;

TN( tDoneFailShort , "IdeaFarm " "(tm) Email List Done Fail") ;
TN( tDoneAOKShort , "IdeaFarm " "(tm) Email List Done AOK") ;

TODO

;

    "I obtained it from:  "
    "I will not disclose your email to anyone.\r\n"
    "I will not contact you again.\r\n"
    "    http://www.ideafarm.com/id10.html\r\n\r\n"
    "It is worth doing.\r\n\r\n"
    "Please lift your finger to help me.\r\n"
    "The link will explain why I contacted you.\r\n"

osTextT post1[] = 

/*1*/WAKEsHOW( "tool.email.out" )/*1*/
/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2025 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

