

//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    return c4Result ;

    count4S c4Result( osTid , osPid , value , idDeathType ) ;

    }
        }
            }
                #endif
            
                    }
                        ifcJobF( tinP , stCourses , ifcIDaDAM_2GLASS2 , sOrder , stOrders , psttOldCommentP , cTriesP , nicNameP ) ;
                        //ifcSayIF( T("hiring a ")+TF1(idAdamP)+T(" cell on ")+T(nicNameP) , flSAY_APPEND | flSAY_LOG ) ;
                        if( !nicNameP ) nicNameP = socketC::nicNameIF( tinP , *this ) ;
                    
                        stOrders << new( 0 , tinP , LF ) soulC( tinP , TAG( TAGiDnULL ) ) ;
                        stackC stOrders( tinP , third , TAG( TAGiDnULL ) , flSTACKc_FIFO | flSTACKc_GIVEsIGNnEWpLATE , ifcSTACKtYPE_PTR_soulC ) ;
                        sOrder << (countT)time2LimitP ;
                        sOrder << time1LimitP ;
                        sOrder << flagsP ;
                        sOrder << psttArgsP ;
                        sOrder << idAdamP ;
                        soulC sOrder( tinP , TAG( TAGiDnULL ) , flSOUL_null , ifcIDcMDjOBoRDER_CONSTRUCTlOCALcELL ) ;
                        stackC stCourses( tinP , third , TAG( TAGiDnULL ) , flSTACKc_FIFO | flSTACKc_GIVEsIGNnEWpLATE , ifcSTACKtYPE_PTR_soulC ) ;
                    {
                    else
                    if( !third.ifc CellIsWorkingIF( tinP , ifcIDaDAM_2GLASS2 , ".monitored" ) )
                    //THIS CODE IS OBSOLETE NOW THAT 6a4 IS NOT USED
            
                #if defined( NEVERdEFINED )

                }
                    else                                     osProcessF( tinP , osTid , osPid , idAdamP                           , T("!idHome ")+TF1(processGlobal2I.idHome)+tPostscript+tb+(F(flProcessHire)&flPROCESShIRE_VISIBLE?T(psttArgsP):T("!quietConsole ")+T(psttArgsP)) , flProcessHire ) ;
                    if( F(flagsP) & flHIRE_DISPLAYgRAPHICS ) osSessionF( tinP , osTid , osPid , idAdamP                           , T("!idHome ")+TF1(processGlobal2I.idHome)+tb+T(psttArgsP) , 0 , 0 , 0 , 0 , flSESSION_REGISTERpROCESShANDLE | flSESSION_REGISTERtHREADhANDLE | flSESSION_MAXIMIZE/*flSESSION_MINIMIZE*/ ) ;
                {
                else
                }
                    else                                     osProcessF( tinP , osTid , osPid , value , idDeathType , idAdamP , T("!idHome ")+TF1(processGlobal2I.idHome)+tPostscript+tb+(F(flProcessHire)&flPROCESShIRE_VISIBLE?T(psttArgsP):T("!quietConsole ")+T(psttArgsP)) , flProcessHire ) ;
                    if( F(flagsP) & flHIRE_DISPLAYgRAPHICS ) osSessionF( tinP , osTid , osPid , value , idDeathType , idAdamP , T("!idHome ")+TF1(processGlobal2I.idHome)+tb+T(psttArgsP) , 0 , 0 , 0 , 0 , flSESSION_REGISTERpROCESShANDLE | flSESSION_REGISTERtHREADhANDLE | flSESSION_MAXIMIZE/*flSESSION_MINIMIZE*/ ) ;
                {
                else if( F(flagsP) & flHIRE_WAIT )
                }
                    delF( tinP , psttMapped ) ;
                    osProcessF( tinP , osTid , osPid , T("wdw") , T(osfn)+T(" ")+TF3(idAdamP,flFORMAT_UNSIGNED|flFORMAT_FILLzE|flFORMAT_FOREIGN,8)+T(" !debug !idHome ")+TF1(processGlobal2I.idHome)+tPostscript+tb+(psttArgsP?T(" ")+T(psttArgsP):T("")) , flProcessHire ) ;
                    osFileNameC osfn( tinP , *this , T(psttMapped) ) ;
                    }
                        delF( tinP , psttm ) ;
                        diskMapFileNameHoverF( tinP , psttMapped , psttm ) ; ___( psttMapped ) ;
                        else                                     { diskMapFileNameF( tinP , psttm , T("///ideafarm/ephemeral/domains/com/ideafarm/city/park/exedll/1/hover/ideafarm.41000002.ipdos-we") ) ; ___( psttm ) ; }
                        if( F(flagsP) & flHIRE_DISPLAYgRAPHICS ) { diskMapFileNameF( tinP , psttm , T("///ideafarm/ephemeral/domains/com/ideafarm/city/park/exedll/1/hover/ideafarm.41000003.ipdos-we") ) ; ___( psttm ) ; }
                        ZE( strokeS* , psttm ) ;
                    {
                    ZE( strokeS* , psttMapped ) ;
                {
                if( F(flagsP) & flHIRE_DEBUG )
                TN( tb , " " ) ;
                TN( tPostscript , "" ) ; //NORMALLY NULL STRING; CONVENIENT FOR DEBUGGING
            
                //if( idAdamP == ifcIDaDAM_SECRETsERVICE                 && processGlobal2I.idHome != 3 ) flProcessHire &= ~( F(flPROCESShIRE_VISIBLE) ) ;
                //if( idAdamP == ifcIDaDAM_3BANG   && processGlobal2I.idHome != 2 && processGlobal2I.idHome != 3 ) flProcessHire &= ~( F(flPROCESShIRE_VISIBLE) ) ;

                }
                    if( F(flagsP) & flHIRE_MONITORkIDS ) flProcessHire |= flPROCESShIRE_MONITORkIDS ;
                    flProcessHire |= flPROCESShIRE_MONITORtHIS ;
                    traceF( tinP , T("ifcHireF: setting process flags to emit monitoring (debug) events") ) ;
                {
                if( F(flagsP) & flHIRE_MONITORtHIS )

                ;
                        : flPROCESShIRE_REGISTERpROCESShANDLE | flPROCESShIRE_REGISTERtHREADhANDLE | flPROCESShIRE_VISIBLE
                        ? flPROCESShIRE_REGISTERpROCESShANDLE | flPROCESShIRE_REGISTERtHREADhANDLE | flPROCESShIRE_VISIBLE /*| flHIRE_DEBUG*/
                    : idAdamP == ifcIDaDAM_TIME
                    ? flPROCESShIRE_REGISTERpROCESShANDLE | flPROCESShIRE_REGISTERtHREADhANDLE
                flagsT flProcessHire = F(flagsP) & flHIRE_DISPLAYnONE && !bSandbox

                boolT bSandbox = etherC::ifc_idHomeI_IF() & fliIDhOME_HOMELESS ;
            {
            if( !POOP )
        
            }
                }
                    }
                        flagsP &= ~( F(flHIRE_DEBUG) ) ;
                        )
                            )
                                // )
                                //     ( processGlobal2I.idHome & 0x00ffffff ) != 2
                                //     &&
                                //     idAdamP == ifcIDaDAM_SUPERrANDOMnUMBERS
                                // (
                                // ||
                                !( processGlobal2I.idHome & 0xff000000 )
                            (
                            &&
                            ( F(flagsP) & flHIRE_DEBUG )
                        (
                        if
            
                        //flagsP |= flHIRE_DISPLAYtEXT     ;    // DISABLE IN PRODUCTION.
                        //flagsP |= flHIRE_DEBUG ;            // DISABLE IN PRODUCTION.  ENABLE TO ALWAYS HIRE USING wdw
            
                        else if( !strCompareF( tinP , tDisplay , T("none"   ) ) ) flagsP |= flHIRE_DISPLAYnONE     ;
                        else if( !strCompareF( tinP , tDisplay , T("text"   ) ) ) flagsP |= flHIRE_DISPLAYtEXT     ;
                             if( !strCompareF( tinP , tDisplay , T("strokes") ) ) flagsP |= flHIRE_DISPLAYgRAPHICS ;
                             if( !strCompareF( tinP , tDebug   , T("yes"    ) ) ) flagsP |= flHIRE_DEBUG           ;
            
                        tDisplay = T(info2.psttDirectivesReplied) ;
                        tDebug   = T(info1.psttDirectivesReplied) ;
                        (*pPeekF)( &info2 ) ;
                        (*pPeekF)( &info1 ) ;
            
                        peekS info2( tinP , *this , T("!display") ) ;
                        peekS info1( tinP , *this , T("!debug") ) ;
                    {
                    if( pPeekF )
                    __Z( pPeekF ) ;
                    dllEntryF( tinP , pPeekF , hDll , T("peekF") ) ;
                    ZE( peekFT , pPeekF ) ;
                {
                if( !POOP )

                __( !hDll ) ;
                dllOpenF( tinP , hDll , T("///ideafarm/ephemeral/domains/com/ideafarm/city/park/exedll/1/hover/ideafarm.")+TF3(idAdamP,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED|flFORMAT_FILLzE|flFORMAT_FOREIGN,8)+T(".ipdos-wd") , cTriesP ) ;
                TN( tDisplay , "" ) ;
                TN( tDebug , "" ) ;

                flagsP &= ~( F( flHIRE_DEBUG | flHIRE_DISPLAYgRAPHICS | flHIRE_DISPLAYtEXT | flHIRE_DISPLAYnONE ) ) ;  // THESE ARE THE FLAGS THAT WILL BE SET "AUTOMATICALLY" I.E. BY QUERYING THE DLL
            {
            if( F(flagsP) & flHIRE_DISPLAYaUTO )
        
            handleC hDll( tinP , TAG( TAGiDnULL ) , ifcIDtYPEhANDLE_DLL ) ; //LEAVE THIS OPEN UNTIL AFTER osSessionF/osProcessF RETURNS, SO BASE OS DOES NOT LOAD IT 2 TIMES
        {
        if( /*tinP.pag1->idSerialAdam == 1 &&*/ !( F(thirdC::third_flagsModeProcess1I_IF()) & flMODEpROCESS1_DOnOThIREaDAMS ) ) // SUPPRESSED FOR IN PROCESS KID ADAMS IN ORDER TO MAKE IT EASY TO SWITCH A SYSTEM'S RECONFIGURATON FROM SINGLEPROCESS TO MULTIPROCESS

        }
            POPUP( "I am trying to hire ifcIDaDAM_SMUDGEsOIXLoLDdEFS!" ) ;
            CONoUTrAW( "I am trying to hire ifcIDaDAM_SMUDGEsOIXLoLDdEFS!" ) ;
        {
        if( idAdamP == ifcIDaDAM_SMUDGEsOIXLoLDdEFS ) //U:: REMOVE AFTER TESTING FULL BUILD
    {
    //U:: TO FIND A BUG: if( !( F(thirdC::third_flagsModeProcess1I_IF()) & flMODEpROCESS1_DEBUG ) )
    ZE( countT , idDeathType ) ;
    ZE( countT , value       ) ;
    ZE( countT , osPid       ) ;
    ZE( countT , osTid       ) ;

    //flagsP |= flHIRE_DEBUG ; //TO FIND A BUG

    if( !idAdamP ) idAdamP = tinP.pag1->idAdam ;

    _IO_

    }
        if( POOP ) return count4S() ;
        __( !psttOldCommentP->idAdam ) ;
        if( POOP ) return count4S() ;
        FV( flHIRE , flagsP ) ;
        __Z( psttOldCommentP ) ;
        if( POOP ) return count4S() ;
    {
    IFbEcAREFUL
    SCOOP
{
/*1*/count4S etherC::ifcHireF( tinS& tinP , const strokeS* const psttOldCommentP , countT idAdamP , const strokeS* const psttArgsP , flagsT flagsP , const countT time1LimitP , const sCountT time2LimitP , const countT cTriesP , nicNameC nicNameP )/*1*/

/**/
*/
  defaults to nicNameC(), which implies the local host
 nicNameP
 cTriesP
 time2LimitP
 time1LimitP
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/1snip.0010160.flHIRE!||
 flagsP
  can be 0
 psttArgsP
  if 0 then i hire myself
 idAdamP
  this title or comment is intended to facilitate debugging of ifc chat and can appear on ifc chat logs and console displays
  place the most unique and important words woth, as reports will truncate
  can be made unique by including time
  should be an informative short title for the current job
  must not be 0 and must not be null length
 psttOldCommentP
 tinP
arguments
\<A HREF=\"5.1030170.1.0.html\"\>definition\</A\>
\<A HREF=\"6.$ifcHireF.0.html\"\>instances\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

