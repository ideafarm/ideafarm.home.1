
//
// Copyright (c) 1992-2025 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    diskMoveFileOrDirF( tin0P , psttNewP , psttOldP , cTriesP ) ;

    }
        delF( tin0P , psttShort ) ;
        delF( tin0P , psttPath ) ;

        strFuseF( tin0P , psttNewP , tNewShort ) ;
    
        if( !psttNewP ) { strMakeF( tin0P , LF , psttNewP , T(psttPath) , tNewShort.csF( tin0P ) ) ; ___( psttNewP ) ; }

        if( bDirOld ) tNewShort += T("/") ;                            //20221205@1059: BUGFIX WITHOUT ANALYSIS.  ADDED THIS LINE SO TRAILING SLASH IS PRESERVED
        ;
            :                  T(psttShort)+T(".!.")+tUnique           //20180501@1309: CHANGED "." TO ".!." WITHOUT ANALYSIS TO FACILITATE PARSING; SHOULD NOT BREAK EXISTING CODE BECAUSE THE CHANGE PRECEDES THE UNIQUIFIER WHICH I THINK IS NEVER PARSED
            ? tUnique+T(".!.")+T(psttShort)
        tNewShort = bPrefixP
        TN( tNewShort , "" ) ;

        if( bDirOld && psttShort->idAdam ) psttShort->idAdam -- ; // TRUNCATE AWAY THE TRAILING SLASH
        strBisectF( tin0P , psttPath , psttShort , psttNewLikeP ? psttNewLikeP : psttOldP , T("/") , - 1 - bDirOld , flSTRbISECT_APPENDdELIMITER ) ; ___( psttPath ) ; ___( psttShort ) ;
        ZE( strokeS* , psttShort ) ;
        ZE( strokeS* , psttPath ) ;
    
        }
            delF( tin0P , psttu ) ;
            tUnique = T(psttu) ;
            strUniqueF( tin0P , psttu ) ; ___( psttu ) ;
            ZE( strokeS* , psttu ) ;
        {
        if( !tUnique.csF( tin0P ) )
        TN( tUnique , psttUniqueP ) ;
    {

    _IO_

    }
        if( POOP ) return ;
        __( psttNewLikeP && !bDirOld != !bDirNewLike ) ;
        if( POOP ) return ;
        __Z( psttOldP ) ;
        if( POOP ) return ;
    {
    IFbEcAREFUL

    boolT bDirNewLike = !psttNewLikeP ? 0 : psttNewLikeP[ CSpREFIX - 1 + psttNewLikeP->idAdam ].idAdam == '/' ;
    boolT bDirOld     =                     psttOldP[     CSpREFIX - 1 +     psttOldP->idAdam ].idAdam == '/' ;

    SCOOP
{
/**//*1*/voidT etherC::diskMoveFileOrDirUniqueF( tin0S& tin0P , strokeS*& psttNewP , const strokeS* const psttOldP , const strokeS* const psttNewLikeP , const countT cTriesP , const strokeS* const psttUniqueP , const boolT bPrefixP )/*1*/
*/
  if 0 then will retry forever
 cTriesP
  else unique string will be inserted into psttNewLikeP
  if 0 then unique string will be inserted into psttOldP
 psttNewLikeP
   example: T("///ideafarm/ephemeral/tmpold/old")
  file name
 psttOldP
    this example -would- work, however, on Linux
    psttNewP: T("///d/new")
    psttOldP: T("///c" "/old")
   here is an example that would -not- work (on os/2 and on windows) because two devices (c : and d :) are involved
  must be on the same device as psttOldP
   example: T("///ideafarm/ephemeral/tmpnew/new")
  on return, will contain the new file name
  if not 0 then must point to the name of a directory and must have enough extra strokes to accomodate the file name plus a string returned by strUniqueF plus wo (or oo if directory) additional stroke(s)
  normally is 0
 psttNewP
arguments
  \<A HREF=\"5.6210104.1.1.0.html\"\>6210104:  WAKEsHOW( "example.simplest.func.1030013.etherC.diskMoveFileOrDirF" )\</A\>
 simplest
examples
\<A HREF=\"5.1030013.1.0.html\"\>definition\</A\>
\<A HREF=\"6.$diskMoveFileOrDirF.0.html\"\>instances\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2025 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

