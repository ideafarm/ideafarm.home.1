
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    }
        delF( tinBaseP , psttSlash ) ;
        delF( tinBaseP , psttw ) ;
        }
            }
                if( idf ) { strSubstringF( tinBaseP , psttw , idf , sttq , S1C('/') , psttRawP ) ; ___( psttw ) ; }
                strFuseF( tinBaseP , psttP , psttSlash ) ; ___( psttP ) ;
            {
            if( idf || bEndWithSlash )

            delF( tinBaseP , psttw ) ;
            else { strFuseF( tinBaseP , psttP , psttw ) ; ___( psttP ) ; }                                      // OTHERWISE
            }
                }
                    }
                        delF( tinBaseP , pstts ) ;
                        strFuseF( tinBaseP , psttP , pstts ) ; ___( psttP ) ;
                        delF( tinBaseP , psttHome ) ;
                        strSubstringF( tinBaseP , pstts , idf2 , idl2 , psttHome ) ; ___( pstts ) ;
                        ZE( strokeS* , pstts ) ;
                        countT idl2 = psttHome->idAdam - 1 ;
                        countT idf2 = 4 ;
                    {
                    if( !POOP )
    
                    __( psttHome && psttHome[ CSpREFIX - 1 + psttHome->idAdam ].idAdam - '/' ) ;
                    __Z( psttHome ) ;
                    diskChooseSiteF( tinBaseP , psttHome , psttw ) ; ___( psttHome ) ;
                    ZE( strokeS* , psttHome ) ;
                {
                else
                }
                    delF( tinBaseP , psttd ) ;
                    strFuseF( tinBaseP , psttP , psttd , 0 , 0 , strokeS() , 0 , 0 ,/*U::SOUL?*/ psttRawP->idAdam + third.dosQuerySysInfoMaxPathLengthIF( tinBaseP ) ) ; ___( psttP ) ;
                    strSubstringF( tinBaseP , psttd , idf , idl , tIdf ) ; ___( psttd ) ;
                    countT idl = tIdf.csF( tinBaseP ) - 1 ;
                    countT idf = 1 ;
                    TN( tIdf , "" ) ; tIdf = T(iff) ;

                    delF( tinBaseP , psttP ) ;
                    delF( tinBaseP , psttd ) ;
                    ifFileNameC iff( tinBaseP , *this , T(psttd)+T("\\Desktop\\") ) ;
                    osEnvironmentVariableF( tinBaseP , psttd , T("ALLUSERSPROFILE") ) ; ___( psttd ) ;
                    ZE( strokeS* , psttd ) ;
                {
                if( !strCompareF( tinBaseP , psttw , T("desk") ) )
            {
            )
                )
                    )
                        !( psttw[ CSpREFIX ] >= S1C('A') && psttw[ CSpREFIX ] <= S1C('Z') )
                        !( psttw[ CSpREFIX ] >= S1C('a') && psttw[ CSpREFIX ] <= S1C('z') ) &&
                        (countT)psttw[ CSpREFIX ]                                           &&
                        psttw->idAdam == 1                                                  &&
                    (
                    psttw->idAdam > 1                                                       ||
                (
                idWord == 4 &&
            (
            if                                                                                              // IT IS WORD 4 AND IS AN IDENTIFIER OTHER THAN A DRIVE LETTER
            idWord ++ ;
        {
        while( !POOP && psttw )
        ZE( countT , idWord ) ;
        strSubstringF( tinBaseP , psttw , idf , sttq , S1C('/') , psttRawP ) ; ___( psttw ) ;
        strokeS sttq( (countT)0 , sc_IGNOREqUOTES ) ;
        countT idf = 1 ;
        ZE( strokeS* , psttw ) ;
        strMakeF( tinBaseP , LF , psttSlash , T("/") ) ; ___( psttSlash ) ;
        ZE( strokeS* , psttSlash ) ;
        strMakeF( tinBaseP , LF , psttP , T("") , psttRawP->idAdam + third.dosQuerySysInfoMaxPathLengthIF( tinBaseP ) + 2 ) ; // THERE ARE A FEW EXTRA BYTES

        boolT bEndWithSlash = psttRawP[ CSpREFIX - 1 + psttRawP->idAdam ] == S1C('/') ;
    {
    _IO_

    }
        if( POOP ) return ;
        __( psttRawP->idCaste != sc_PREFIXlENGTH ) ;
        if( POOP ) return ;
        __Z( psttRawP ) ;
        __NZ( psttP ) ;
        if( POOP ) return ;
    {
    IFbEcAREFUL
    SCOOP
{
/*1*/voidT etherC::diskMapFileNameF( tinBaseS& tinBaseP , strokeS*& psttP , const strokeS* const psttRawP )/*1*/

/**/
*/
   dir  name: T("///desk/foo/")
   file name: T("///desk/foo")
   dir  name: T("///ideafarm/ephemeral/foo/")
   file name: T("///ideafarm/ephemeral/foo")
  can be either a file name or a directory name
 psttRawP
 psttP
arguments
  \<A HREF=\"5.2310104.1.1.0.html\"\>2310104:  WAKEsHOW( "example.simplest.func.1030024.etherC.diskMapFileNameF" )\</A\>
 simplest
examples
\<A HREF=\"5.1030024.1.0.html\"\>definition\</A\>
\<A HREF=\"6.$diskMapFileNameF.0.html\"\>instances\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

