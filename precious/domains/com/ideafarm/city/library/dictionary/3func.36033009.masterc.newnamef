
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    }
        newNameF( tinBaseP , cNameP , stUses , flagsP , idCopyP ) ;

        }
            }
                pczc ++ ;
                stUses << *pczc ;
            {
            while( *pczc )
            const countT* pczc = pczUsesP ;
        {
        if( pczUsesP )

        stackC stUses( tinBaseP , ether , TAGoR( TAGiDnULL , idLineCt , idiFileCt , pbBitsCt ) , flSTACKc_FIFO ) ;
    {
    else
    if( ((tinFullS&)tinBaseP).pag1->_masterOldC_.pMePrime != this ) ((tinFullS&)tinBaseP).pag1->_masterOldC_.pMePrime->newNameF( tinBaseP , cNameP , pczUsesP , flagsP , idCopyP ) ;

    }
        if( POOP ) return ;
        FV( flMASTERc , flagsP ) ;
        __Z( cNameP ) ;
        __( !((tinFullS&)tinBaseP).pag1->_masterOldC_.pMePrime ) ;
        if( POOP ) return ;
    {
    IFbEcAREFUL
    upDnC upDn( tinBaseP , TAGoR( TAGiDnULL , idLineCt , idiFileCt , pbBitsCt ) , IDFILE , ether ) ;
    scoopC scoop( tinBaseP , LF , ether ) ;
{
/*1*/voidT masterOldC::newNameF( tinBaseS& tinBaseP , const countT cNameP , const countT* const pczUsesP , const flagsT flagsP , const countT idCopyP )/*1*/

/**/
*/
\<A HREF=\"5.1490009.1.0.html\"\>definition\</A\>
\<A HREF=\"6.$newNameF.0.html\"\>instances\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

