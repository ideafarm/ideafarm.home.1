
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//

        DONE1
                                                                                                                                                                                                                                                                       \
        }                                                                                                                                                                                                                                                              \
            }                                                                                                                                                                                                                                                          \
                dec02AM( cAllThreads ) ; /* MUST BE THE VERY LAST THING THAT THIS THREAD DOES */                                                                                                                                                                       \
                if( ((tinNormalS&)tinBaseP).monitor.idThread <= ClOWtHREADS ) processGlobal2S::_processGlobal2I_IF().pcPhaseLow[ ((tinNormalS&)tinBaseP).monitor.idThread ] = - 1 ;                                                                                    \
                TELL( "DONE0: i am outa here" )                                                                                                                                                                                                                        \
                                                                                                                                                                                                                                                                       \
                }                                                                                                                                                                                                                                                      \
                    DEL( pTaskP ) ;                                                                                                                                                                                                                                    \
                    /* THE PROCESS MUST SLEEP AFTER RECEIVING THIS SIGN BEFORE ENDING, SO THAT THIS THREAD CAN COMPLETE */                                                                                                                                             \
                    /* MUST BE AS LATE AS POSSIBLE BECAUSE IT GIVES THE SIGN THAT THE THREAD IS DONE.                   */                                                                                                                                             \
                {                                                                                                                                                                                                                                                      \
                if( !bFake )                                                                                                                                                                                                                                           \
                boolT bFake = pTaskP ? !!( F(pTaskP->flags) & flTHREADlAUNCH_FAKE ) : 0 ;                                                                                                                                                                              \
                                                                                                                                                                                                                                                                       \
                }                                                                                                                                                                                                                                                      \
                    THREADmODE5oFF( flTHREADmODE5_TINiSnOTiNpOOL ) ;                                                                                                                                                                                                   \
                {                                                                                                                                                                                                                                                      \
                if( pTaskP && F(pTaskP->flags) & flTHREADlAUNCH_NOtINiNpOOL )                                                                                                                                                                                          \
                                                                                                                                                                                                                                                                       \
                ;                                                                                                                                                                                                                                                      \
                    : thirdC::os_cAllKidThreadsI_IF( tinBaseP )                                                                                                                                                                                                        \
                    ? thirdC::os_cAllOrphanThreadsI_IF( tinBaseP )                                                                                                                                                                                                     \
                countT& cAllThreads = bOrphan                                                                                                                                                                                                                          \
                boolT bOrphan = pTaskP ? !!( F(pTaskP->flags) & flTHREADlAUNCH_ORPHAN ) : 0 ;                                                                                                                                                                          \
                TELL( "DONE0: deregistering myself from either cAllOrphanThreadsI or cAllKidThreadsI (my final act)" )                                                                                                                                                 \
                TINSL /*THIS IS NEEDED BECAUSE tinBaseP WAS DELETED IF I AM tmWindowsF */                                                                                                                                                                              \
            {                                                                                                                                                                                                                                                          \
                                                                                                                                                                                                                                                                       \
            }                                                                                                                                                                                                                                                          \
                }                                                                                                                                                                                                                                                      \
                    }                                                                                                                                                                                                                                                  \
                        }                                                                                                                                                                                                                                              \
                            /*TINSL*/                                                                                                                                                                                                                                  \
                            /*DELzOMBIE( pEtThread ) ;*/ /* tinBaseP IS DESTROYED HERE */                                                                                                                                                                              \
                        {                                                                                                                                                                                                                                              \
                        /*if( *(countT*)&pEtThread )*/                                                                                                                                                                                                                 \
                        /*DELzOMBIE( ((tinNormalS&)tinBaseP).pEtScratch ) ;*/                                                                                                                                                                                          \
                        /*DELzOMBIE( ((tinNormalS&)tinBaseP).pScoopEtThread ) ;*/ /*CODEsYNC: 0010056 1020171 */                                                                                                                                                       \
                        TELL( "DONE0: deleting etThread (and tinBaseP)" ) ;                                                                                                                                                                                            \
                        ((tinNormalS&)tinBaseP).pEther = 0 ;                                                                                                                                                                                                           \
                        TELL( "DONE0: testing poolOld" ) ;                                                                                                                                                                                                             \
                                                                                                                                                                                                                                                                       \
                        }                                                                                                                                                                                                                                              \
                            ((tinNormalS&)tinBaseP).pEtScratch->delF( tinBaseP , psttThreadFile ) ;                                                                                                                                                                    \
                            ((tinNormalS&)tinBaseP).pEtScratch->boxZapF( tinBaseP , psttThreadFile ) ;                                                                                                                                                                 \
                            TELL( "DONE0: deleting thread file" ) ;                                                                                                                                                                                                    \
                        {                                                                                                                                                                                                                                              \
                        if( psttThreadFile )                                                                                                                                                                                                                           \
                    {                                                                                                                                                                                                                                                  \
                    /*if( pEtThread )*/ /*THREADS THAT DELETE etThread EARLY: tmWindowsF*/                                                                                                                                                                             \
                    TINSL /*THIS IS NEEDED BECAUSE tinBaseP WAS DELETED IF I AM tmWindowsF */                                                                                                                                                                          \
                {                                                                                                                                                                                                                                                      \
                                                                                                                                                                                                                                                                       \
                ((tinNormalS&)tinBaseP).pSgnUtility = 0 ;                                                                                                                                                                                                              \
                                                                                                                                                                                                                                                                       \
                }                                                                                                                                                                                                                                                      \
                    }                                                                                                                                                                                                                                                  \
                        if( ((tinNormalS&)tinBaseP).monitor.idThread <= ClOWtHREADS && !( ++ processGlobal2S::_processGlobal2I_IF().pcPhaseLow[ ((tinNormalS&)tinBaseP).monitor.idThread ] ) ) { BLAMMO ; }                                                            \
                        if( ((tinNormalS&)tinBaseP).idPhase1 < ifcIDpHASEtHREAD_EPILOGnOkIDS ) ((tinNormalS&)tinBaseP).idPhase1 = ifcIDpHASEtHREAD_EPILOGnOkIDS ;                                                                                                      \
                        }                                                                                                                                                                                                                                              \
                            TELL( "DONE0: destroying all adam objects that remain on the thread stack" ) ;                                                                                                                                                             \
                            }                                                                                                                                                                                                                                          \
                                }                                                                                                                                                                                                                                      \
                                    ++ s ; thirdC::dosSleepRawIF( tinBaseP , 250 ) ;                                                                                                                                                                                   \
                                    etherC::etRockIF( tinBaseP ).traceF( tinBaseP , T("DONE0 / napping a wink for my kids to end [((tinNormalS&)tinBaseP).cKidThreads]:    ")+TF2(((tinNormalS&)tinBaseP).cKidThreads,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED) ) ;    \
                                {                                                                                                                                                                                                                                      \
                                while( ((tinNormalS&)tinBaseP).cKidThreads )                                                                                                                                                                                           \
                                sleepC s( tinBaseP , TAG( TAGiDnULL ) ) ; /* WILL BLAMMO IF ANYTHING IS GRABBED (THIS IS DESIRABLE BEHAVIOR) */                                                                                                                        \
                            {                                                                                                                                                                                                                                          \
                            TELL( "DONE0: waiting for my kid threads to end" ) ;                                                                                                                                                                                       \
                                                                                                                                                                                                                                                                       \
                            /*if( F(thirdC::third_flagsModeAdam1I_IF(tinBaseP)) & flADAMmODE1_WHEREaLL && !( F(((tinNormalS&)tinBaseP).monitor.flagsThreadMode1) & flTHREADmODE1_NOwHERE ) ) etThread.etherWhereF( tinBaseP , ifcIDaCTIONwHERE_UNWATCH ) ;*/           \
                            TELL( "DONE0: conditionally calling etherWhereF" ) ;                                                                                                                                                                                       \
                        {                                                                                                                                                                                                                                              \
                        /*else*/                                                                                                                                                                                                                                       \
                        /*if( !pEtThread ) ;*/ /*THIS IS NEEDED BECAUSE tinBaseP WAS DELETED IF I AM tmWindowsF */                                                                                                                                                     \
                                                                                                                                                                                                                                                                       \
                        }                                                                                                                                                                                                                                              \
                            /*etThread.traceF( tinBaseP , (strokeS*)(const osTextT*)ostoSay , flTRACE_PARAMETERiSoStEXT ) ;*/                                                                                                                                          \
                            OStEXTC(  ostoSay , ((tinNormalS&)tinBaseP).cOsHandles , '0' ) ;                                                                                                                                                                           \
                            OStEXTAK( ostoSay , "." ) ;                                                                                                                                                                                                                \
                            OStEXTC(  ostoSay , ((tinNormalS&)tinBaseP).cSpins4 , '0' ) ;                                                                                                                                                                              \
                            OStEXTAK( ostoSay , "." ) ;                                                                                                                                                                                                                \
                            OStEXTC(  ostoSay , ((tinNormalS&)tinBaseP).cSpins3 , '0' ) ;                                                                                                                                                                              \
                            OStEXTAK( ostoSay , "." ) ;                                                                                                                                                                                                                \
                            OStEXTC(  ostoSay , ((tinNormalS&)tinBaseP).cSpins2 , '0' ) ;                                                                                                                                                                              \
                            OStEXTAK( ostoSay , "." ) ;                                                                                                                                                                                                                \
                            OStEXTC(  ostoSay , ((tinNormalS&)tinBaseP).cSpins1 , '0' ) ;                                                                                                                                                                              \
                            OStEXTAK( ostoSay , "    " ) ;                                                                                                                                                                                                             \
                            OStEXTC(  ostoSay , ((tinNormalS&)tinBaseP).pag1->cYieldHighWater , 0 ) ;                                                                                                                                                                  \
                            OStEXTAK( ostoSay , "    " ) ;                                                                                                                                                                                                             \
                            OStEXTC(  ostoSay , ((tinNormalS&)tinBaseP).pag1->idAdam , 0 ) ;                                                                                                                                                                           \
                            OStEXTAK( ostoSay , "DONE0     [idAdam,cYieldHighWater,cSpins1,cSpins2,cSpins3,cSpins4,cOsHandles]:    " ) ;                                                                                                                               \
                            OStEXT(   ostoSay , TUCK << 2 ) ;                                                                                                                                                                                                          \
                        {                                                                                                                                                                                                                                              \
                        if( ((tinNormalS&)tinBaseP).pag1->cYieldHighWater )                                                                                                                                                                                            \
                                                                                                                                                                                                                                                                       \
                        TELL( "DONE0: after returning from application code" ) ;                                                                                                                                                                                       \
                        ((tinNormalS&)tinBaseP).idPhase2 = 0 ;                                                                                                                                                                                                         \
                        if( ((tinNormalS&)tinBaseP).idPhase1 < ifcIDpHASEtHREAD_EPILOGkIDS ) ((tinNormalS&)tinBaseP).idPhase1 = ifcIDpHASEtHREAD_EPILOGkIDS ;                                                                                                          \
                        if( ((tinNormalS&)tinBaseP).monitor.idThread <= ClOWtHREADS && !( ++ processGlobal2S::_processGlobal2I_IF().pcPhaseLow[ ((tinNormalS&)tinBaseP).monitor.idThread ] ) ) { BLAMMO ; }                                                            \
                        TINSL /*THIS IS NEEDED BECAUSE tinBaseP WAS DELETED IF I AM tmWindowsF */                                                                                                                                                                      \
                    {                                                                                                                                                                                                                                                  \
                                                                                                                                                                                                                                                                       \
                    ether.osThreadSwitchingDesireF( tinBaseP , ifcTHREADpRIORITY_PUSHY ) ; /*TO PREVENT LAME DUCK THREADS FROM ACCUMULATING AND CLOGGING SYS*/                                                                                                         \
                                                                                                                                                                                                                                                                       \
                    /*DO NOT CLOSE THE CODE BLOCK HERE BECAUSE KID THREADS MIGHT BE USING OBJECTS THAT WOULD DT HERE*/                                                                                                                                                 \
                                                                                                                                                                                                                                                                       \
#define DONE0nOeTHERS                                                                                                                                                                                                                                                  \
    
//INDENTATION SHOULD CORRESPOND TO THAT IN snip.001*.TASK0

//CODEsYNC: 0010055 0010056

/*1*//*DONE0nOeTHERS*//*1*/
/**/
*/
it is illegal to refer to this symbol in the definition of an adam
\<A HREF=\"5.11000024.1.0.html\"\>definition\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

