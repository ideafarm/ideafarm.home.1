
//
// Copyright (c) 1992-2025 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


REST

}
    }
        param.stButtonList >> pb_bList ;
        byteT* pb_bList = (byteT*)&bList ;
        buttonListS bList ;
    {
    while( param.stButtonList )
    
    etThread.delF( tin0P , pbContent ) ;
    
    etThread.strokeF( tin0P , T("\f") ) ;
    param.win.selectPaperF( tin0P , ifcIDcMDpAPERsELECT_SETsHOW , ifcIDpAPER_NOTsHOW ) ;
    //napF( tin0P , etThread , TOCK * 1 ) ; //SIMILATES TIME SPENT SHUTTING DOWN
    etThread.strokeF( tin0P , T("\f") ) ;
    param.win.selectPaperF( tin0P , ifcIDcMDpAPERsELECT_SETsHOW , ifcIDpAPER_NOTsHOW ) ;
    //etThread.strokeF( tin0P , T("")+S3(64.0,scOld_mmFRAMEcELLS,8.0)+T("IPDOS is shutting down")+S2(0,scOld_POPfRAME) ) ;
    
    //param.win.baton.ungrabF( tin0P ) ;
    paperOldC::setBeforeAnimatingIF( tin0P ) ;
    //param.win.baton.grabF( tin0P , TAG( TAGiDnULL ) ) ;
    paperOldC::fireAnimatorIfIF( tin0P ) ; //U::ELIMINATE NEED FOR THIS IN APPLICATION CODE
    
    ether.loafIF( tin0P ) ;

    param.eye.setModeFlagsF( tin0P , flPAPERbACKmODE_null , flPAPERbACKmODE_ABSENT ) ; //U::
    
    //etThread.osThreadF( TaRG1( tmTestF ) , (countT)&param ) ;
    
    //LOGrAW( "--------------------------- WAITING TO BE FIRED -------------------------------------------------------------\r\n" )
    param.win.selectPaperF( tin0P , ifcIDcMDpAPERsELECT_SETsHOW , ifcIDpAPER_NOTsHOW ) ;
    
    param.bBegin = 1 ;
    setFloorF( tin0P , etThread , (countT)&param , ifcIDfLOOR_BANNER ) ;
    
    //param.win.baton.ungrabF( tin0P ) ;
    paperOldC::setBeforeAnimatingIF( tin0P , animateCBF , (countT)&param ) ;
    //param.win.baton.grabF( tin0P , TAG( TAGiDnULL ) ) ;
    
    param.win.selectPaperF( tin0P , ifcIDcMDpAPERsELECT_SETrENDERdEFAULT , ifcIDpAPER_NOTsHOW ) ;
    
    resizeIfF( tin0P , (countT)&param , etThread ) ;
    loadContentF( tin0P , etThread , (countT)&param , pbContent , countTC() ) ;
    ZE( byteT* , pbContent ) ;
    
    paramS param( tin0P , etThread ) ;
{

//etherC::ether_cUtility_IF( tin0P , 0 ) ++ ; //U::TO FIND A BUG

TODO

DONE( tmTestF )

}
    //buEscapeCBF( tin0P , etThread , (countT)&paramP , ifcIDtYPEsTROKEcALLbACK_HOTkEY , 0 , 0 , 0 , 0 , *(sadamStateOldS*)0 ) ; //U::TO FIND A BUG
    //}
    //    ++ s ; etThread.osSleepF( tin0P , TOCK * thirdC::third_idTrialI_IF( tin0P ) ) ;
    //    sleepC s( tin0P , TAG( TAGiDnULL ) ) ;
    //{

    }
          buF1CBF( tin0P , etThread , (countT)&paramP , ifcIDtYPEsTROKEcALLbACK_HOTkEY , 0 , 0 , 0 , 0 , *(sadamStateOldS*)0 ) ; //U::TO FIND A BUG
          }
              ++ s ; etThread.osSleepF( tin0P , TOCK * 6 ) ;
              sleepC s( tin0P , TAG( TAGiDnULL ) ) ;
          {
          buF1CBF( tin0P , etThread , (countT)&paramP , ifcIDtYPEsTROKEcALLbACK_HOTkEY , 0 , 0 , 0 , 0 , *(sadamStateOldS*)0 ) ; //U::TO FIND A BUG
          }
              ++ s ; etThread.osSleepF( tin0P , TOCK * 6 ) ;
              sleepC s( tin0P , TAG( TAGiDnULL ) ) ;
          {
    {
    while( !ether )
    ZE( countT , idLoop ) ;

    paramS& paramP = *(paramS*)pTaskP->c1 ;
{
if( pTaskP && pTaskP->c1 )
TASK( tmTestF )

;
}
    eye.setHullAimTiltF( tin0P , angh , angv , angt ) ;
    measureT angt = - 1.0 + 2.0 * offHullAimtTick / cHullAimtTicks ;
    measureT angv = - 1.0 + 2.0 * offHullAimvTick / cHullAimvTicks ;
    measureT angh = - 1.0 + 2.0 * offHullAimhTick / cHullAimhTicks ;

    eye.setHullLocationF( tin0P , xHullAt , yHullAt , zHullAt ) ;

    }
        vtHoverPad.setF( tin0P , tHoverPad ) ;

        ;
    
            S2(0,scOld_POPfRAME)
                S2(0,scOld_POPfRAME)+
                    S2(0,scOld_POPfRAME)+
                        S2(0,scOld_POPfRAME)+
                            S2(0,scOld_POPcOLOR)+
                            tIdeaFarm+
                            S2(ifcRGB_CYAN,scOld_cPUSHcOLOR)+
                        S3(10.0,scOld_mmFRAMEcELLS,1.0)+
                    S3(1.0,scOld_mmFRAMEcELLS,3.0)+
                S3(1,scOld_ccFRAMEfORsADAMfRAMES,1)+
                S3(0.0,scOld_mmMOVEtO,0.0)+
                S2(0,scOld_POPrIPPLES)+
                S2(0,scOld_POPfRAMEdETACH)+
                vtHoverPadAnimation+
                S2(0,scOld_FRAMEdETACH)+
                S2(0,scOld_cPUSHrIPPLES)+
            S3(1.0,scOld_mmFRAMEtO,1.0)+
            T("")+
    
        tHoverPadDrag =

        ;

            S2(0,scOld_POPfRAME)
                S2(0,scOld_POPfRAME)+
                    S2(0,scOld_POPfRAME)+
                        S2(0,scOld_POPfRAME)+
                            vtButtonsPad+
                        S3(1.0,scOld_mmFRAMEtO,2.0)+
                        T("\r\n")+
                        S2(0,scOld_POPfRAME)+
                            S2(0,scOld_POPcOLOR)+
                            tIdeaFarm+
                            S2(ifcRGB_CYAN,scOld_cPUSHcOLOR)+
                        S3(10.0,scOld_mmFRAMEcELLS,1.0)+
                    S3(1.0,scOld_mmFRAMEcELLS,3.0)+
                S3(1,scOld_ccFRAMEfORsADAMfRAMES,1)+
                S3(0.0,scOld_mmMOVEtO,0.0)+
                S2(0,scOld_POPrIPPLES)+
                S2(0,scOld_POPfRAMEdETACH)+
                vtHoverPadAnimation+
                S2(0,scOld_FRAMEdETACH)+
                S2(0,scOld_cPUSHrIPPLES)+
            S3(1.0,scOld_mmFRAMEtO,1.0)+
            T("")+
    
        tHoverPad =

        TN( tIdeaFarm  , "" ) ; tIdeaFarm  = T("IdeaFarm")+S3(2.0,scOld_mmFRAMEtO,0.25)+S2(saA1_TRADEmARK,sc_cALPHABET1)+S2(0,scOld_POPfRAME)+T("  ") ;
    {

    vtView.setF( tin0P , T("[thisTextNotUsedButMustBeNonNullInitially]") ) ;

    }
        }
            if( pbvt ) ppvtClock[ off ] = new( 0 , tin0P , pbvt , sizeof( vTextC ) ) vTextC( tin0P , "ppvtClock" , 0 , 1 ) ;
            etherP.newF( tin0P , LF , pbvt , sizeof( vTextC ) ) ; ___( pbvt ) ;
            ZE( byteT* , pbvt ) ;
        {
        for( countT off = 0 ; off < cpvtClock ; off ++ )
        const countT cpvtClock = sizeof ppvtClock / sizeof ppvtClock[ 0 ] ;
    {
    }
        }
            if( pbvt ) ppvtClockBanner[ off ] = new( 0 , tin0P , pbvt , sizeof( vTextC ) ) vTextC( tin0P , "ppvtClockBanner" , 0 , 1 ) ;
            etherP.newF( tin0P , LF , pbvt , sizeof( vTextC ) ) ; ___( pbvt ) ;
            ZE( byteT* , pbvt ) ;
        {
        for( countT off = 0 ; off < cpvtClockBanner ; off ++ )
        const countT cpvtClockBanner = sizeof ppvtClockBanner / sizeof ppvtClockBanner[ 0 ] ;
    {

    tHintDefault = vtHintClockBanner ;
    thirdC::c_memsetIF( tin0P , (byteT*)ppsttLoginSecret , sizeof ppsttLoginSecret ) ;
    thirdC::c_memsetIF( tin0P , (byteT*)ppvtClock , sizeof ppvtClock ) ;
    thirdC::c_memsetIF( tin0P , (byteT*)ppvtClockBanner , sizeof ppvtClockBanner ) ;
    win.letRefF() ; //U::KLUDGE
{
offLoginSecret( 0 )
buLoginKey8(          tin0P , "buLoginKey8"        , buLoginKeyCBF          , (countT)this , flTCfEATURE_defaultButton             | flTCfEATURE_FLYOVER | flTCfEATURE_FLYOVERhIGHLIGHT | flTCfEATURE_TABpARTICIPANT , 0 , T("") , 0x10 , ifcRGB_BROWN , 2 , 9 ) ,
buLoginKey7(          tin0P , "buLoginKey7"        , buLoginKeyCBF          , (countT)this , flTCfEATURE_defaultButton             | flTCfEATURE_FLYOVER | flTCfEATURE_FLYOVERhIGHLIGHT | flTCfEATURE_TABpARTICIPANT , 0 , T("") , 0x10 , ifcRGB_BROWN , 2 , 9 ) ,
buLoginKey6(          tin0P , "buLoginKey6"        , buLoginKeyCBF          , (countT)this , flTCfEATURE_defaultButton             | flTCfEATURE_FLYOVER | flTCfEATURE_FLYOVERhIGHLIGHT | flTCfEATURE_TABpARTICIPANT , 0 , T("") , 0x10 , ifcRGB_BROWN , 2 , 9 ) ,
buLoginKey5(          tin0P , "buLoginKey5"        , buLoginKeyCBF          , (countT)this , flTCfEATURE_defaultButton             | flTCfEATURE_FLYOVER | flTCfEATURE_FLYOVERhIGHLIGHT | flTCfEATURE_TABpARTICIPANT , 0 , T("") , 0x10 , ifcRGB_BROWN , 2 , 9 ) ,
buLoginKey4(          tin0P , "buLoginKey4"        , buLoginKeyCBF          , (countT)this , flTCfEATURE_defaultButton             | flTCfEATURE_FLYOVER | flTCfEATURE_FLYOVERhIGHLIGHT | flTCfEATURE_TABpARTICIPANT , 0 , T("") , 0x10 , ifcRGB_BROWN , 2 , 9 ) ,
buLoginKey3(          tin0P , "buLoginKey3"        , buLoginKeyCBF          , (countT)this , flTCfEATURE_defaultButton             | flTCfEATURE_FLYOVER | flTCfEATURE_FLYOVERhIGHLIGHT | flTCfEATURE_TABpARTICIPANT , 0 , T("") , 0x10 , ifcRGB_BROWN , 2 , 9 ) ,
buLoginKey2(          tin0P , "buLoginKey2"        , buLoginKeyCBF          , (countT)this , flTCfEATURE_defaultButton             | flTCfEATURE_FLYOVER | flTCfEATURE_FLYOVERhIGHLIGHT | flTCfEATURE_TABpARTICIPANT , 0 , T("") , 0x10 , ifcRGB_BROWN , 2 , 9 ) ,
buLoginKey1(          tin0P , "buLoginKey1"        , buLoginKeyCBF          , (countT)this , flTCfEATURE_defaultButton             | flTCfEATURE_FLYOVER | flTCfEATURE_FLYOVERhIGHLIGHT | flTCfEATURE_TABpARTICIPANT , 0 , T("") , 0x10 , ifcRGB_BROWN , 2 , 9 ) ,
prPrompt(            tin0P , etherP , "prPrompt" , psttPromptValue , T("key: ") , 0 , 0 , flTCfEATURE_defaultPrompt | flTCfEATURE_FLYOVER | flTCfEATURE_FLYOVERhIGHLIGHT , 8 , prPromptCBF , (countT)this , 0 , 1 , 0 , ifcRGB_BROWN , 2 , 7 ) ,
buStartGame(         tin0P , "buStartGame" , buStartGameCBF         , (countT)this , flTCfEATURE_defaultButton             | flTCfEATURE_FLYOVER | flTCfEATURE_FLYOVERhIGHLIGHT | flTCfEATURE_TABpARTICIPANT , 0 , T("start the game!") ) ,
buContent1bigitfU(   tin0P , "buContent1bigitfU" , buContent1bigitfUCBF   , (countT)this , flTCfEATURE_ACTIONhIGHLIGHT | flTCfEATURE_FLYOVERhIGHLIGHT | flTCfEATURE_HOTkEY | flTCfEATURE_MOUSE | flTCfEATURE_HOTkEYbIGIT | flTCfEATURE_FLYOVER | flTCfEATURE_TABpARTICIPANT , 0 , T("fU") ) ,
buContent1bigitEe(   tin0P , "buContent1bigitEe" , buContent1bigitEeCBF   , (countT)this , flTCfEATURE_ACTIONhIGHLIGHT | flTCfEATURE_FLYOVERhIGHLIGHT | flTCfEATURE_HOTkEY | flTCfEATURE_MOUSE | flTCfEATURE_HOTkEYbIGIT | flTCfEATURE_FLYOVER | flTCfEATURE_TABpARTICIPANT , 0 , T("Ee") ) ,
buContent1bigitDe(   tin0P , "buContent1bigitDe" , buContent1bigitDeCBF   , (countT)this , flTCfEATURE_ACTIONhIGHLIGHT | flTCfEATURE_FLYOVERhIGHLIGHT | flTCfEATURE_HOTkEY | flTCfEATURE_MOUSE | flTCfEATURE_HOTkEYbIGIT | flTCfEATURE_FLYOVER | flTCfEATURE_TABpARTICIPANT , 0 , T("De") ) ,
buContent1bigitCe(   tin0P , "buContent1bigitCe" , buContent1bigitCeCBF   , (countT)this , flTCfEATURE_ACTIONhIGHLIGHT | flTCfEATURE_FLYOVERhIGHLIGHT | flTCfEATURE_HOTkEY | flTCfEATURE_MOUSE | flTCfEATURE_HOTkEYbIGIT | flTCfEATURE_FLYOVER | flTCfEATURE_TABpARTICIPANT , 0 , T("Ce") ) ,
buContent1bigitBe(   tin0P , "buContent1bigitBe" , buContent1bigitBeCBF   , (countT)this , flTCfEATURE_ACTIONhIGHLIGHT | flTCfEATURE_FLYOVERhIGHLIGHT | flTCfEATURE_HOTkEY | flTCfEATURE_MOUSE | flTCfEATURE_HOTkEYbIGIT | flTCfEATURE_FLYOVER | flTCfEATURE_TABpARTICIPANT , 0 , T("Be") ) ,
buContent1bigitAy(   tin0P , "buContent1bigitAy" , buContent1bigitAyCBF   , (countT)this , flTCfEATURE_ACTIONhIGHLIGHT | flTCfEATURE_FLYOVERhIGHLIGHT | flTCfEATURE_HOTkEY | flTCfEATURE_MOUSE | flTCfEATURE_HOTkEYbIGIT | flTCfEATURE_FLYOVER | flTCfEATURE_TABpARTICIPANT , 0 , T("Ay") ) ,
buContent1bigitNi(   tin0P , "buContent1bigitNi" , buContent1bigitNiCBF   , (countT)this , flTCfEATURE_ACTIONhIGHLIGHT | flTCfEATURE_FLYOVERhIGHLIGHT | flTCfEATURE_HOTkEY | flTCfEATURE_MOUSE | flTCfEATURE_HOTkEYbIGIT | flTCfEATURE_FLYOVER | flTCfEATURE_TABpARTICIPANT , 0 , T("Ni") ) ,
buContent1bigitTa(   tin0P , "buContent1bigitTa" , buContent1bigitTaCBF   , (countT)this , flTCfEATURE_ACTIONhIGHLIGHT | flTCfEATURE_FLYOVERhIGHLIGHT | flTCfEATURE_HOTkEY | flTCfEATURE_MOUSE | flTCfEATURE_HOTkEYbIGIT | flTCfEATURE_FLYOVER | flTCfEATURE_TABpARTICIPANT , 0 , T("Ta") ) ,
buContent1bigitVe(   tin0P , "buContent1bigitVe" , buContent1bigitVeCBF   , (countT)this , flTCfEATURE_ACTIONhIGHLIGHT | flTCfEATURE_FLYOVERhIGHLIGHT | flTCfEATURE_HOTkEY | flTCfEATURE_MOUSE | flTCfEATURE_HOTkEYbIGIT | flTCfEATURE_FLYOVER | flTCfEATURE_TABpARTICIPANT , 0 , T("Ve") ) ,
buContent1bigitSe(   tin0P , "buContent1bigitSe" , buContent1bigitSeCBF   , (countT)this , flTCfEATURE_ACTIONhIGHLIGHT | flTCfEATURE_FLYOVERhIGHLIGHT | flTCfEATURE_HOTkEY | flTCfEATURE_MOUSE | flTCfEATURE_HOTkEYbIGIT | flTCfEATURE_FLYOVER | flTCfEATURE_TABpARTICIPANT , 0 , T("Se") ) ,
buContent1bigitfI(   tin0P , "buContent1bigitfI" , buContent1bigitfICBF   , (countT)this , flTCfEATURE_ACTIONhIGHLIGHT | flTCfEATURE_FLYOVERhIGHLIGHT | flTCfEATURE_HOTkEY | flTCfEATURE_MOUSE | flTCfEATURE_HOTkEYbIGIT | flTCfEATURE_FLYOVER | flTCfEATURE_TABpARTICIPANT , 0 , T("fI") ) ,
buContent1bigitFo(   tin0P , "buContent1bigitFo" , buContent1bigitFoCBF   , (countT)this , flTCfEATURE_ACTIONhIGHLIGHT | flTCfEATURE_FLYOVERhIGHLIGHT | flTCfEATURE_HOTkEY | flTCfEATURE_MOUSE | flTCfEATURE_HOTkEYbIGIT | flTCfEATURE_FLYOVER | flTCfEATURE_TABpARTICIPANT , 0 , T("Fo") ) ,
buContent1bigitRe(   tin0P , "buContent1bigitRe" , buContent1bigitReCBF   , (countT)this , flTCfEATURE_ACTIONhIGHLIGHT | flTCfEATURE_FLYOVERhIGHLIGHT | flTCfEATURE_HOTkEY | flTCfEATURE_MOUSE | flTCfEATURE_HOTkEYbIGIT | flTCfEATURE_FLYOVER | flTCfEATURE_TABpARTICIPANT , 0 , T("Re") ) ,
buContent1bigitOo(   tin0P , "buContent1bigitOo" , buContent1bigitOoCBF   , (countT)this , flTCfEATURE_ACTIONhIGHLIGHT | flTCfEATURE_FLYOVERhIGHLIGHT | flTCfEATURE_HOTkEY | flTCfEATURE_MOUSE | flTCfEATURE_HOTkEYbIGIT | flTCfEATURE_FLYOVER | flTCfEATURE_TABpARTICIPANT , 0 , T("Oo") ) ,
buContent1bigitWo(   tin0P , "buContent1bigitWo" , buContent1bigitWoCBF   , (countT)this , flTCfEATURE_ACTIONhIGHLIGHT | flTCfEATURE_FLYOVERhIGHLIGHT | flTCfEATURE_HOTkEY | flTCfEATURE_MOUSE | flTCfEATURE_HOTkEYbIGIT | flTCfEATURE_FLYOVER | flTCfEATURE_TABpARTICIPANT , 0 , T("Wo") ) ,
buContent1bigitZe(   tin0P , "buContent1bigitZe" , buContent1bigitZeCBF   , (countT)this , flTCfEATURE_ACTIONhIGHLIGHT | flTCfEATURE_FLYOVERhIGHLIGHT | flTCfEATURE_HOTkEY | flTCfEATURE_MOUSE | flTCfEATURE_HOTkEYbIGIT | flTCfEATURE_FLYOVER | flTCfEATURE_TABpARTICIPANT , 0 , T("Ze") ) ,
buHoverPad(          tin0P , "buHoverPad" , buHoverPadCBF          , (countT)this , flTCfEATURE_FLYOVER | flTCfEATURE_MOUSE | flTCfEATURE_DRAGGABLE                                 , 0 , vtHoverPad ) ,
buClockBannerLabel(  tin0P , "buClockBannerLabel" , buClockBannerLabelCBF  , (countT)this ,                     flTCfEATURE_MOUSE | flTCfEATURE_FLYOVER                                                             , 0 , 0 , 1 ) ,
buClockLaunch(       tin0P , "buClockLaunch" , buClockLaunchCBF       , (countT)this ,                     flTCfEATURE_MOUSE | flTCfEATURE_FLYOVER                                                             , 0 , 0 , 1 ) ,
buSubscribe(         tin0P , "buSubscribe" , buSubscribeCBF         , (countT)this , flTCfEATURE_defaultButton             | flTCfEATURE_FLYOVER | flTCfEATURE_FLYOVERhIGHLIGHT | flTCfEATURE_TABpARTICIPANT , 0 , T("subscribe") , 0 , ifcRGB_BROWN , 2 , 2 ) ,
buClockBanner(       tin0P , "buClockBanner" , buClockBannerCBF       , (countT)this ,                     flTCfEATURE_MOUSE | flTCfEATURE_FLYOVER                                                             , 0 , 0 , 1 ) ,
buClock(             tin0P , "buClock" , buClockCBF             , (countT)this ,                     flTCfEATURE_MOUSE | flTCfEATURE_FLYOVER                                                             , 0 , 0 , 1 ) ,
buEyeTiltRight(      tin0P , "buEyeTiltRight" , buEyeTiltRightCBF      , (countT)this , flTCfEATURE_defaultButton             | flTCfEATURE_FLYOVER | flTCfEATURE_FLYOVERhIGHLIGHT | flTCfEATURE_TABpARTICIPANT , 0 , T("")+S2(saA1_TOOLPAGEuP,sc_cALPHABET1) , 0 , ifcRGB_BROWN , 2 , 1 ) ,
buEyeTiltLeft(       tin0P , "buEyeTiltLeft" , buEyeTiltLeftCBF       , (countT)this , flTCfEATURE_defaultButton             | flTCfEATURE_FLYOVER | flTCfEATURE_FLYOVERhIGHLIGHT | flTCfEATURE_TABpARTICIPANT , 0 , T("")+S2(saA1_TOOLPAGEdOWN,sc_cALPHABET1) , 0 , ifcRGB_BROWN , 2 , 1 ) ,
buEyeAimUp(          tin0P , "buEyeAimUp" , buEyeAimUpCBF          , (countT)this , flTCfEATURE_defaultButton             | flTCfEATURE_FLYOVER | flTCfEATURE_FLYOVERhIGHLIGHT | flTCfEATURE_TABpARTICIPANT , 0 , T("")+S2(saA1_TOOLUP,sc_cALPHABET1) , 0 , ifcRGB_BROWN , 2 , 1 ) ,
buEyeAimDown(        tin0P , "buEyeAimDown" , buEyeAimDownCBF        , (countT)this , flTCfEATURE_defaultButton             | flTCfEATURE_FLYOVER | flTCfEATURE_FLYOVERhIGHLIGHT | flTCfEATURE_TABpARTICIPANT , 0 , T("")+S2(saA1_TOOLDOWN,sc_cALPHABET1) , 0 , ifcRGB_BROWN , 2 , 1 ) ,
buEyeAimRight(       tin0P , "buEyeAimRight" , buEyeAimRightCBF       , (countT)this , flTCfEATURE_defaultButton             | flTCfEATURE_FLYOVER | flTCfEATURE_FLYOVERhIGHLIGHT | flTCfEATURE_TABpARTICIPANT , 0 , T("")+S2(saA1_TOOLRIGHT,sc_cALPHABET1) , 0 , ifcRGB_BROWN , 2 , 1 ) ,
buEyeAimLeft(        tin0P , "buEyeAimLeft" , buEyeAimLeftCBF        , (countT)this , flTCfEATURE_defaultButton             | flTCfEATURE_FLYOVER | flTCfEATURE_FLYOVERhIGHLIGHT | flTCfEATURE_TABpARTICIPANT , 0 , T("")+S2(saA1_TOOLLEFT,sc_cALPHABET1) , 0 , ifcRGB_BROWN , 2 , 1 ) ,
buEyeAimTiltReset(   tin0P , "buEyeAimTiltReset" , buEyeAimTiltResetCBF   , (countT)this , flTCfEATURE_defaultButton             | flTCfEATURE_FLYOVER | flTCfEATURE_FLYOVERhIGHLIGHT | flTCfEATURE_TABpARTICIPANT , 0 , T("aimReset") , 0 , ifcRGB_BROWN , 2 , 1 ) ,
buEyeMoveUp(         tin0P , "buEyeMoveUp" , buEyeMoveUpCBF         , (countT)this , flTCfEATURE_defaultButton             | flTCfEATURE_FLYOVER | flTCfEATURE_FLYOVERhIGHLIGHT | flTCfEATURE_TABpARTICIPANT , 0 , T("up") , 0 , ifcRGB_BROWN , 2 , 1 ) ,
buEyeMoveDown(       tin0P , "buEyeMoveDown" , buEyeMoveDownCBF       , (countT)this , flTCfEATURE_defaultButton             | flTCfEATURE_FLYOVER | flTCfEATURE_FLYOVERhIGHLIGHT | flTCfEATURE_TABpARTICIPANT , 0 , T("down") , 0 , ifcRGB_BROWN , 2 , 1 ) ,
buEyeMoveNorth(      tin0P , "buEyeMoveNorth" , buEyeMoveNorthCBF      , (countT)this , flTCfEATURE_defaultButton             | flTCfEATURE_FLYOVER | flTCfEATURE_FLYOVERhIGHLIGHT | flTCfEATURE_TABpARTICIPANT , 0 , T("north") , 0 , ifcRGB_BROWN , 2 , 1 ) ,
buEyeMoveSouth(      tin0P , "buEyeMoveSouth" , buEyeMoveSouthCBF      , (countT)this , flTCfEATURE_defaultButton             | flTCfEATURE_FLYOVER | flTCfEATURE_FLYOVERhIGHLIGHT | flTCfEATURE_TABpARTICIPANT , 0 , T("south") , 0 , ifcRGB_BROWN , 2 , 1 ) ,
buEyeMoveEast(       tin0P , "buEyeMoveEast" , buEyeMoveEastCBF       , (countT)this , flTCfEATURE_defaultButton             | flTCfEATURE_FLYOVER | flTCfEATURE_FLYOVERhIGHLIGHT | flTCfEATURE_TABpARTICIPANT , 0 , T("eastz") , 0 , ifcRGB_BROWN , 2 , 1 ) ,
buEyeMoveWest(       tin0P , "buEyeMoveWest" , buEyeMoveWestCBF       , (countT)this , flTCfEATURE_defaultButton             | flTCfEATURE_FLYOVER | flTCfEATURE_FLYOVERhIGHLIGHT | flTCfEATURE_TABpARTICIPANT , 0 , T("west") , 0 , ifcRGB_BROWN , 2 , 1 ) ,
buEyeMoveReset(      tin0P , "buEyeMoveReset" , buEyeMoveResetCBF      , (countT)this , flTCfEATURE_defaultButton             | flTCfEATURE_FLYOVER | flTCfEATURE_FLYOVERhIGHLIGHT | flTCfEATURE_TABpARTICIPANT , 0 , T("moveReset") , 0 , ifcRGB_BROWN , 2 , 1 ) ,
buEyeEscape(         tin0P , "buEyeEscape" , buEyeEscapeCBF         , (countT)this , flTCfEATURE_defaultButton             | flTCfEATURE_FLYOVER | flTCfEATURE_FLYOVERhIGHLIGHT | flTCfEATURE_TABpARTICIPANT , 0 , T("")+S2(saA1_TOOLESCAPE,sc_cALPHABET1) , 0 , ifcRGB_BROWN , 2 , 1 ) ,
buEyeEnter(          tin0P , "buEyeEnter" , buEyeEnterCBF          , (countT)this , flTCfEATURE_defaultButton             | flTCfEATURE_FLYOVER | flTCfEATURE_FLYOVERhIGHLIGHT | flTCfEATURE_TABpARTICIPANT , 0 , T("eye") , 0 , ifcRGB_BROWN , 1 , 1         , 0 , 0x33333333 ) ,
buClimbRight(        tin0P , "buClimbRight" , buClimbRightCBF        , (countT)this , flTCfEATURE_defaultButton             | flTCfEATURE_FLYOVER | flTCfEATURE_FLYOVERhIGHLIGHT | flTCfEATURE_TABpARTICIPANT , 0 , T("")+S2(saA1_TOOLRIGHT,sc_cALPHABET1) , 0 , ifcRGB_BROWN , 3 , 4 ) ,
buClimbLeft(         tin0P , "buClimbLeft" , buClimbLeftCBF         , (countT)this , flTCfEATURE_defaultButton             | flTCfEATURE_FLYOVER | flTCfEATURE_FLYOVERhIGHLIGHT | flTCfEATURE_TABpARTICIPANT , 0 , T("")+S2(saA1_TOOLLEFT,sc_cALPHABET1) , 0 , ifcRGB_BROWN , 3 , 3 ) ,
buClimbUp(           tin0P , "buClimbUp" , buClimbUpCBF           , (countT)this , flTCfEATURE_defaultButton             | flTCfEATURE_FLYOVER | flTCfEATURE_FLYOVERhIGHLIGHT | flTCfEATURE_TABpARTICIPANT , 0 , T("")+S2(saA1_TOOLUP,sc_cALPHABET1) , 0 , ifcRGB_BROWN , 3 , 2 ) ,
buClimbDown(         tin0P , "buClimbDown" , buClimbDownCBF         , (countT)this , flTCfEATURE_defaultButton             | flTCfEATURE_FLYOVER | flTCfEATURE_FLYOVERhIGHLIGHT | flTCfEATURE_TABpARTICIPANT , 0 , T("")+S2(saA1_TOOLDOWN,sc_cALPHABET1) , 0 , ifcRGB_BROWN , 3 , 1 ) ,
buDisagree(          tin0P , "buDisagree" , buDisagreeCBF          , (countT)this , flTCfEATURE_defaultButton             | flTCfEATURE_FLYOVER | flTCfEATURE_FLYOVERhIGHLIGHT | flTCfEATURE_TABpARTICIPANT , 0 , T("")+S2(ifcRGB_ORANGE,scOld_cPUSHcOLOR)+T("no, i am not ready to enter into that contract")+S2(0,scOld_POPcOLOR) ) ,
buAgree(             tin0P , "buAgree" , buAgreeCBF             , (countT)this , flTCfEATURE_defaultButton             | flTCfEATURE_FLYOVER | flTCfEATURE_FLYOVERhIGHLIGHT | flTCfEATURE_TABpARTICIPANT , 0 , T("")+S2(ifcRGB_G4,scOld_cPUSHcOLOR)+T("yes, i hereby contract with you")+S2(0,scOld_POPcOLOR) ) ,
buSermon(            tin0P , "buSermon" , buSermonCBF            , (countT)this , flTCfEATURE_defaultButton             | flTCfEATURE_FLYOVER | flTCfEATURE_FLYOVERhIGHLIGHT | flTCfEATURE_TABpARTICIPANT , 0 , T("sermon") , 0 , ifcRGB_BROWN , 2 , 6 ) ,
buCredits(           tin0P , "buCredits" , buCreditsCBF           , (countT)this , flTCfEATURE_defaultButton             | flTCfEATURE_FLYOVER | flTCfEATURE_FLYOVERhIGHLIGHT | flTCfEATURE_TABpARTICIPANT , 0 , T("credits") , 0 , ifcRGB_BROWN , 2 , 5 ) ,
buIntro(             tin0P , "buIntro" , buIntroCBF             , (countT)this , flTCfEATURE_defaultButton             | flTCfEATURE_FLYOVER | flTCfEATURE_FLYOVERhIGHLIGHT | flTCfEATURE_TABpARTICIPANT , 0 , T("introduction") , 0 , ifcRGB_BROWN , 2 , 4 ) ,
buGate(              tin0P , "buGate" , buGateCBF              , (countT)this , flTCfEATURE_defaultButton             | flTCfEATURE_FLYOVER | flTCfEATURE_FLYOVERhIGHLIGHT | flTCfEATURE_TABpARTICIPANT , 0 , T("gate") , 0 , ifcRGB_BROWN , 2 , 8 ) ,
buConsole(           tin0P , "buConsole" , buConsoleCBF           , (countT)this , flTCfEATURE_defaultButton             | flTCfEATURE_FLYOVER | flTCfEATURE_FLYOVERhIGHLIGHT | flTCfEATURE_TABpARTICIPANT , 0 , T("console") , 0 , ifcRGB_BROWN , 2 , 9 ) ,

//buTest(              tin0P , "buTest" , buTestCBF            , (countT)this , ( flTCfEATURE_defaultButton | flTCfEATURE_FLYOVER | flTCfEATURE_FLYOVERhIGHLIGHT | flTCfEATURE_TABpARTICIPANT ) & ~( F(flTCfEATURE_FRAME) ) , 0 , T("-") , 0 , ifcRGB_BROWN , 9 , 1 ) ,
  buTest(              tin0P , "buTest" , buTestCBF            , (countT)this ,   flTCfEATURE_defaultButton | flTCfEATURE_FLYOVER | flTCfEATURE_FLYOVERhIGHLIGHT | flTCfEATURE_TABpARTICIPANT                               , 0 , T("X") , 0 , ifcRGB_BROWN , 9 , 1 ) ,
//buTest(              tin0P , "buTest" , buTestCBF            , (countT)this , ( flTCfEATURE_defaultButton | flTCfEATURE_FLYOVER | flTCfEATURE_FLYOVERhIGHLIGHT | flTCfEATURE_TABpARTICIPANT ) & ~( F(flTCfEATURE_FRAME) ) , 0 , T("")+S2(0,scOld_FRAMEdETACH)+S3(1.0,scOld_mmLINEtO,0.0)+S2(ifcRGB_R4,scOld_cPUSHcOLOR)+S3(1.0,scOld_mmLINEtO,1.0)+S2(0,scOld_POPcOLOR)+S2(ifcRGB_G4,scOld_cPUSHcOLOR)+S3(0.0,scOld_mmLINEtO,1.0)+S2(0,scOld_POPcOLOR)+S2(ifcRGB_B4,scOld_cPUSHcOLOR)+S3(0.0,scOld_mmLINEtO,0.0)+S2(0,scOld_POPcOLOR)+S2(0,scOld_POPfRAMEdETACH) , 0 , ifcRGB_BROWN , 9 , 1 ) ,
buSecure(              tin0P , "buSecure" , buSecureCBF            , (countT)this ,   flTCfEATURE_defaultButton | flTCfEATURE_FLYOVER | flTCfEATURE_FLYOVERhIGHLIGHT | flTCfEATURE_TABpARTICIPANT                               , 0 , T("secure") , 0 , ifcRGB_BROWN , 9 , 1 ) ,

buFc(                tin0P , "buFc" , buFcCBF                , (countT)this , flTCfEATURE_defaultButton             | flTCfEATURE_FLYOVER | flTCfEATURE_FLYOVERhIGHLIGHT | flTCfEATURE_TABpARTICIPANT , 0 , T("")+S2(saA1_TOOLF12,sc_cALPHABET1) , 0 , ifcRGB_BROWN , 2 , 1 ) ,
buFb(                tin0P , "buFb" , buFbCBF                , (countT)this , flTCfEATURE_defaultButton             | flTCfEATURE_FLYOVER | flTCfEATURE_FLYOVERhIGHLIGHT | flTCfEATURE_TABpARTICIPANT , 0 , T("")+S2(saA1_TOOLF11,sc_cALPHABET1) , 0 , ifcRGB_BROWN , 2 , 1 ) ,
buFa(                tin0P , "buFa" , buFaCBF                , (countT)this , flTCfEATURE_defaultButton             | flTCfEATURE_FLYOVER | flTCfEATURE_FLYOVERhIGHLIGHT | flTCfEATURE_TABpARTICIPANT , 0 , T("")+S2(saA1_TOOLF10,sc_cALPHABET1) , 0 , ifcRGB_BROWN , 2 , 1 ) ,
buF9(                tin0P , "buF9" , buF9CBF                , (countT)this , flTCfEATURE_defaultButton             | flTCfEATURE_FLYOVER | flTCfEATURE_FLYOVERhIGHLIGHT | flTCfEATURE_TABpARTICIPANT , 0 , T("")+S2(saA1_TOOLF9,sc_cALPHABET1) , 0 , ifcRGB_BROWN , 2 , 1 ) ,
buF8(                tin0P , "buF8" , buF8CBF                , (countT)this , flTCfEATURE_defaultButton             | flTCfEATURE_FLYOVER | flTCfEATURE_FLYOVERhIGHLIGHT | flTCfEATURE_TABpARTICIPANT , 0 , T("")+S2(saA1_TOOLF8,sc_cALPHABET1) , 0 , ifcRGB_BROWN , 2 , 1 ) ,
buF7(                tin0P , "buF7" , buF7CBF                , (countT)this , flTCfEATURE_defaultButton             | flTCfEATURE_FLYOVER | flTCfEATURE_FLYOVERhIGHLIGHT | flTCfEATURE_TABpARTICIPANT , 0 , T("")+S2(saA1_TOOLF7,sc_cALPHABET1) , 0 , ifcRGB_BROWN , 2 , 1 ) ,
buF6(                tin0P , "buF6" , buF6CBF                , (countT)this , flTCfEATURE_defaultButton             | flTCfEATURE_FLYOVER | flTCfEATURE_FLYOVERhIGHLIGHT | flTCfEATURE_TABpARTICIPANT , 0 , T("")+S2(saA1_TOOLF6,sc_cALPHABET1) , 0 , ifcRGB_BROWN , 2 , 1 ) ,
buF5(                tin0P , "buF5" , buF5CBF                , (countT)this , flTCfEATURE_defaultButton             | flTCfEATURE_FLYOVER | flTCfEATURE_FLYOVERhIGHLIGHT | flTCfEATURE_TABpARTICIPANT , 0 , T("")+S2(saA1_TOOLF5,sc_cALPHABET1) , 0 , ifcRGB_BROWN , 2 , 1 ) ,
buF4(                tin0P , "buF4" , buF4CBF                , (countT)this , flTCfEATURE_defaultButton             | flTCfEATURE_FLYOVER | flTCfEATURE_FLYOVERhIGHLIGHT | flTCfEATURE_TABpARTICIPANT , 0 , T("")+S2(saA1_TOOLF4,sc_cALPHABET1) , 0 , ifcRGB_BROWN , 2 , 1 ) ,
buF3(                tin0P , "buF3" , buF3CBF                , (countT)this , flTCfEATURE_defaultButton             | flTCfEATURE_FLYOVER | flTCfEATURE_FLYOVERhIGHLIGHT | flTCfEATURE_TABpARTICIPANT , 0 , T("")+S2(saA1_TOOLF3,sc_cALPHABET1) , 0 , ifcRGB_BROWN , 2 , 1 ) ,
buF2(                tin0P , "buF2" , buF2CBF                , (countT)this , flTCfEATURE_defaultButton             | flTCfEATURE_FLYOVER | flTCfEATURE_FLYOVERhIGHLIGHT | flTCfEATURE_TABpARTICIPANT , 0 , T("")+S2(saA1_TOOLF2,sc_cALPHABET1) , 0 , ifcRGB_BROWN , 2 , 1 ) ,
//U:: ENABLE buF2 AFTER DEBUGGING PERSISTENT DRAGGING (ON RENDER, PERSISTENT DRAGGABLE IS MOVED TO 0,0 RATHER THAN PRIOR POSITION)
buF1(                tin0P , "buF1" , buF1CBF                , (countT)this , flTCfEATURE_defaultButton             | flTCfEATURE_FLYOVER | flTCfEATURE_FLYOVERhIGHLIGHT | flTCfEATURE_TABpARTICIPANT , 0 , T("")+S2(saA1_TOOLF1,sc_cALPHABET1) , 0 , ifcRGB_BROWN , 2 , 1 ) ,
buEscape(            tin0P , "buEscape" , buEscapeCBF        , (countT)this , flTCfEATURE_defaultButton             | flTCfEATURE_FLYOVER | flTCfEATURE_FLYOVERhIGHLIGHT | flTCfEATURE_TABpARTICIPANT , 0 , T("")+S2(saA1_TOOLESCAPE,sc_cALPHABET1) , 0 , ifcRGB_BROWN , 2 , 1 ) ,
vtToolStateCapsLock( tin0P , "vtToolStateCapsLock" ) ,
vt2bigitHelp( tin0P , "vt2bigitHelp" ) ,
vt2bigitName( tin0P , "vt2bigitName" ) ,
vt2bigit( tin0P , "vt2bigit" ) ,
vtHoverPadAnimation( tin0P , "vtHoverPadAnimation" ) ,
vtHoverPad( tin0P , "vtHoverPad" ) ,
vt1tutorial( tin0P , "vt1tutorial" ) ,
vtGraphSpeed( tin0P , "vtGraphSpeed" , 0 , 1 , 0 , vtGraphSpeedCBF , (countT)this ) ,
vtGraphSpeedMinMax( tin0P , "vtGraphSpeedMinMax" ) ,
vtMonitorPoolNames( tin0P , "vtMonitorPoolNames" ) ,
vtHintClockBanner( tin0P , "vtHintClockBanner" , 0 , 0x3e ) ,
vtHintClock( tin0P , "vtHintClock" , 0 , 0x3e ) ,
vtView( tin0P , "vtView" , 0 , 1 , 0 , vtViewCBF , (countT)this ) ,
vtEyeNote5( tin0P , "vtEyeNote5" ) ,
vtEyeNote4( tin0P , "vtEyeNote4" ) ,
vtEyeNote3( tin0P , "vtEyeNote3" ) ,
vtEyeNote2( tin0P , "vtEyeNote2" ) ,
vtEyeNote1( tin0P , "vtEyeNote1" ) ,
vtEye( tin0P , "vtEye" , 0 , 1 , 0 , vtEyeCBF , (countT)this ) ,
vtButtonsPad( tin0P , "vtButtonsPad" ) ,
vtButtons( tin0P , "vtButtons" ) ,
vtHint( tin0P , "vtHint" ) ,
vtSlidesRemaining( tin0P , "vtSlidesRemaining" ) ,
vtSpeech( tin0P , "vtSpeech" ) ,
vtTest( tin0P , "vtTest" , 0 , 1 , 0 , vtTestCBF , (countT)this ) ,
tHoverPadDrag( tin0P , TAG( TAGiDnULL ) , flTEXTc_null , "" ) ,
tHoverPad( tin0P , TAG( TAGiDnULL ) , flTEXTc_null , "" ) ,
tHintDefault( tin0P , TAG( TAGiDnULL ) , flTEXTc_null , "" ) ,
win( *windowOldC::getRefIF( tin0P ) ) , //U::KLUDGE
eye( tin0P , etherP , 1 , paperToEyeGoofyCBF /*, 0xaabbccdd*/ ) ,
stButtonList( tin0P , etherP , TAG( TAGiDnULL ) , flSTACKc_BLOB , sizeof( buttonListS ) ) ,
treeKt( tin0P , etherP ) ,
stSpeech( tin0P , etherP , TAG( TAGiDnULL ) , flSTACKc_FIFO|flSTACKc_BLOB , sizeof( count3S ) ) ,
bHoverPadDrag( tin0P , TAG( TAGiDnULL ) , 0 /*, flBATONc_DOnOTrEGISTERiNtIN*/ ) ,
bOldViews( tin0P , TAG( TAGiDnULL ) ) ,
timeHintExpires2( 0 ) ,
pptcView( 0 ) ,
psttPromptValue( 0 ) ,
psttHintEscape( 0 ) ,
psttLabelRemaining( 0 ) ,
rReachRemaining( 1.0 / 128.0 ) ,
timeGameErased2( 0 ) ,
idEventViewSelectLath( 0 ) ,
timeGameErased1( 0 ) ,
idView( ifcIDvIEW_HOLLYWOOD ) ,
cpvtClock( sizeof ppvtClock / sizeof ppvtClock[ 0 ] ) ,
cpvtClockBanner( sizeof ppvtClockBanner / sizeof ppvtClockBanner[ 0 ] ) ,
cvtView( 0 ) ,
cRight( 0 ) ,
cLeft( 0 ) ,
cUp( 0 ) ,
cDown( 0 ) ,
timeHintExpires1( 0 ) ,
idSpeech( 0 ) ,
idSpeak( 0 ) ,
bEyeStarted( 0 ) ,
bGameStarted( 0 ) ,
bReadingInstructions( 0 ) ,
b1tutorial( 1 ) ,
bAnimating( 0 ) ,
bBegin( 0 ) ,
flags( flPARAM_null ) ,
ether( etherP ) ,
zMoveMultiplier( 1.0 ) ,
yMoveMultiplier( 1.0 ) ,
xMoveMultiplier( 1.0 ) ,
zMoveGrain( /*U::1.0*/16.0 ) ,
yMoveGrain( /*U::1.0*/16.0 ) ,
xMoveGrain( /*U::1.0*/16.0 ) ,
zHullAt( ZhULLaTiNIT ) ,
yHullAt( YhULLaTiNIT ) ,
xHullAt( XhULLaTiNIT ) ,
//xHullAt( 0x80 ) ,
offHullAimtTick( AIMtICKS / 2 ) ,
offHullAimvTick( AIMtICKS / 2 + AIMtICKvERTbIASdEBUG ) ,
offHullAimhTick( AIMtICKS / 2 + AIMtICKhORZbIASdEBUG ) ,
cHullAimtTicks( AIMtICKS ) ,
cHullAimvTicks( AIMtICKS ) ,
cHullAimhTicks( AIMtICKS ) ,
idFloor( 0 ) ,
bQuitTmUsers( 0 ) ,
bInside( 0 ) ,
paramS::paramS( tin0S& tin0P , etherC& etherP ) :

}
    ether.delF( tin0P , psttHintEscape ) ;

    }
        for( countT off = 0 ; off < celts ; off ++ ) ether.delF( tin0P , ppsttLoginSecret[ off ] ) ;
        const countT celts = sizeof ppsttLoginSecret / sizeof ppsttLoginSecret[ 0 ] ;
    {
    }
        }
            ether.delF( tin0P , *(byteT**)&ppvtClock[ off ] ) ;
            delete ppvtClock[ off ] ;
        {
        for( countT off = 0 ; off < cpvtClock ; off ++ )
        const countT cpvtClock = sizeof ppvtClock / sizeof ppvtClock[ 0 ] ;
    {
    }
        }
            ether.delF( tin0P , *(byteT**)&ppvtClockBanner[ off ] ) ;
            delete ppvtClockBanner[ off ] ;
        {
        for( countT off = 0 ; off < cpvtClockBanner ; off ++ )
        const countT cpvtClockBanner = sizeof ppvtClockBanner / sizeof ppvtClockBanner[ 0 ] ;
    {
    TINSL
{
paramS::~paramS( voidT )

}
    etherP.strMakeF( tin0P , LF , psttHint    , psttHintP ) ; ___( psttHint ) ;
    etherP.strMakeF( tin0P , LF , psttButtons , psttButtonsP ) ; ___( psttButtons ) ;

    }
        if( POOP ) return ;
        __Z( psttHintP ) ;
        __Z( psttButtonsP ) ;
        if( POOP ) return ;
    {
    IFbEcAREFUL
{
flagsHint( flagsHintP )
time1Hint( time1HintP ) ,
psttHint( 0 ) ,
csttMin( csttMinP ) ,
psttButtons( 0 ) ,
buttonListS::buttonListS( tin0S& tin0P , etherC& etherP , const strokeS* const psttButtonsP , countT csttMinP , const strokeS* const psttHintP , const countT time1HintP , const flagsT flagsHintP ) :

}
{
flagsHint( 0 )
time1Hint( 0 ) ,
psttHint( 0 ) ,
csttMin( 0 ) ,
psttButtons( 0 ) ,
buttonListS::buttonListS( voidT ) :

}
    ((tin1S&)tin0P).pEther->delF( tin0P , psttHint    ) ;
    ((tin1S&)tin0P).pEther->delF( tin0P , psttButtons ) ;
    TINSL
{
buttonListS::~buttonListS( voidT )

}
    map.zz = 0.0 ;
    map.yy = map.mIdRow ;
    map.xx = map.mIdCol ;

    //map.zz = - map.mIdCol ;
    //map.yy = map.mIdRow ;
    //map.xx = 32.0 ;

    mapPaperToEyeOldS& map = *(mapPaperToEyeOldS*)&mP ;
{
/*1*/voidT _export paperToEyeGoofyCBF( mapPaperToBackS& mP )/*1*/
//U::MOVE THIS TO ANOTHER MODULE AND MAKE IT SENSIBLE
//THIS IS JUST FOR TESTING SUPPORT FOR NONDEFAULT MAPPER

}
    countT foo = 2 ;
{
testesS::~testesS( voidT )
//U::

*/
/*

//I OBSOLETE a450104 AND AM A COMPLETE REWRITE OF a450104
//OBSOLETED BY a950104 (MULTIFLAVOR CONSOLE FOR DOOR PANIC-DOOR)

#include postADAMhEADER

/*1*/WAKEdEBUGsHOW( "ifcIDaDAM_NEWcONSOLE.console" )/*1*/
/**/
*/
/*


//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2025 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

