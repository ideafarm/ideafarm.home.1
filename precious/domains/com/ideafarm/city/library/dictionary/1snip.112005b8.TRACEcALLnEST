
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


    }
        }                                                                                                                                                                                             \
            etherC::etRockIF( tinBaseP ).traceF( tinBaseP , (const strokeS* const)(const osTextT* const)ostoLine , flTRACE_PARAMETERiSoStEXT ) ;                                                              \
            else           { OStEXTC(  ostoLine , *( pcc - 1 ) , 0 ) }                                                                                                                                \
            if( postFile ) { OStEXTA(  ostoLine , postFile ) ; }                                                                                                                                      \
            const osTextT* postFile = processGlobal8S::_processGlobal8I_IF().source.postFileTitleF( tinBaseP , processGlobal8S::_processGlobal8I_IF().source.idFileRankF( tinBaseP , *( pcc ++ ) ) ) ;        \
            OStEXTAK( ostoLine , "  " ) ;                                                                                                                                                             \
            OStEXTC(  ostoLine , *( pcc ++ ) , 0 ) ;                                                                                                                                                  \
            OStEXTAK( ostoLine , "  " ) ;                                                                                                                                                             \
            OStEXTC(  ostoLine , ++ offDown , 0 ) ;                                                                                                                                                   \
            OStEXTAK( ostoLine , "  " ) ;                                                                                                                                                             \
            OStEXT(   ostoLine , TUCK << 1 ) ;                                                                                                                                                        \
        {                                                                                                                                                                                             \
        while( pcc < pce && *pcc )                                                                                                                                                                    \
        ZE( countT , offDown )                                                                                                                                                                        \
                                                                                                                                                                                                      \
        countT* pce = pcNest + ccNest ;                                                                                                                                                               \
        countT* pcc = pcNest ;                                                                                                                                                                        \
                                                                                                                                                                                                      \
        ((tin9S&)tinBaseP).get_pLFnest_F( tinBaseP , pcNest , ccNest + 1 ) ;                                                                                                                                            \
        countT pcNest[ ccNest + 1 ] ;                                                                                                                                                                 \
        const countT ccNest = sizeof ((tin9S&)tinBaseP).monitor.pLFnest / sizeof ((tin9S&)tinBaseP).monitor.pLFnest[ 0 ] ;                                                                                                        \
                                                                                                                                                                                                      \
        etherC::etRockIF( tinBaseP ).traceF( tinBaseP , (const strokeS* const)(const osTextT* const)ostoSay , /*flTRACE_LOOP |*/ flTRACE_PARAMETERiSoStEXT ) ;                                                \
        OStEXTAK( ostoSay , " / call nest:" ) ;                                                                                                                                                       \
        OStEXTA(  ostoSay , postP ) ;                                                                                                                                                                 \
        OStEXT(   ostoSay , TUCK << 0 ) ;                                                                                                                                                             \
                                                                                                                                                                                                      \
        _IO_                                                                                                                                                                                          \
    {                                                                                                                                                                                                 \
                                                                                                                                                                                                      \
#define TRACEcALLnEST(postP)                                                                                                                                                                          \

/*1*//*TRACEcALLnEST*//*1*/
/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

