
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


//VISIBLE

REST
etThread.osProcessIdPhaseAdamF( tin0P , ifcIDpHASEhANDOFFoLD_SHUTTINGdOWN ) ;

etThread.osSleepF( tin0P , TOCK * 4 ) ;

etThread.delF( tin0P , psttv4 ) ;
etThread.delF( tin0P , psttv3 ) ;
etThread.delF( tin0P , psttv2 ) ;
etThread.delF( tin0P , psttv1 ) ;
etThread.strokeF( tin0P , T(psttv1)+T(" dicks, ")+T(psttv2)+T(" docks, ")+T(psttv3)+T(" ducks, ")+T(psttv4)+T(" days\r\nhave elapsed since Jesus Christ's conventional time of birth\r\n") ) ;
etThread.strFromF( tin0P , psttv4 , offDay  ) ; ___( psttv1 ) ;
etThread.strFromF( tin0P , psttv3 , offDuck ) ; ___( psttv1 ) ;
etThread.strFromF( tin0P , psttv2 , offDock ) ; ___( psttv1 ) ;
etThread.strFromF( tin0P , psttv1 , offDick ) ; ___( psttv1 ) ;
ZE( strokeS* , psttv4 ) ;
ZE( strokeS* , psttv3 ) ;
ZE( strokeS* , psttv2 ) ;
ZE( strokeS* , psttv1 ) ;

countT offDay  = offDAY(  time2 ) ;
countT offDuck = offDUCK( time2 ) ;
countT offDock = offDOCK( time2 ) ;
countT offDick = offDICK( time2 ) ;

etThread.delF( tin0P , psttNow ) ;
etThread.strokeF( tin0P , T("the time is now ")+T(psttNow)+T("\r\n") ) ;
etThread.strFromTimeF( tin0P , psttNow , time1 , time2 ) ;
ZE( strokeS* , psttNow ) ;

etThread.osTimeNowF( tin0P , time1 , time2 ) ;
ZE( sCountT , time2 ) ;
ZE( countT , time1 ) ;

TODO

/*1*/WAKEhIDE( "example.simplest.snip.0010083.offDAY" )/*1*/
/**/
*/
\<A HREF=\"5.2800104.1.0.html\"\>definition\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

