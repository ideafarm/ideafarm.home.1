
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    baton.ungrabF( tinBaseP ) ;

    __Z( cOut ) ;
    third.delF( tinBaseP , pMeI ) ;

    b_idGramLath.ungrabF( tinBaseP ) ;
    }
        }
            else      cOut ++ ;
            if( thp ) thp = 0 ;
            thp.s_writeF( tinBaseP , hsoo , idPortP ? idPortP : idPort , nicNameP , soulo ) ;

            soulo << soulP ;
            pMeI[ offMe ] >> soulo ;
            soulo << idGramLast ;
            soulo << idDisk ;
            soulC soulo( tinBaseP , TAG( TAGiDnULL ) , flSOUL_null , ifcIDtYPEdATAGRAM_NETc_SOULc ) ;
        {
        else
        if( thp ) thp = 0 ;
        thp.s_bindF( tinBaseP , hsoo , 0 , pMeI[ offMe ] ) ;
        thp.s_socketIF( tinBaseP , hsoo , ifcSOCKETtYPE_DATAgRAM ) ;
        handleC hsoo( tinBaseP , TAG( TAGiDnULL ) , ifcIDtYPEhANDLE_SOCKET ) ;
    {
    for( countT offMe = 0 ; offMe < cMe ; offMe ++ )
    idGramLast ++ ;
    b_idGramLath.grabF( tinBaseP , TAG( TAGiDnULL ) ) ;
    ZE( countT , cOut ) ;

    thirdC thp( tinBaseP , TAG( TAGiDnULL ) ) ;

    }
        DEL( pInfo ) ;
        if( pInfo ) idDisk = pInfo->idVolume ;
        third.dosQueryFSInfoF( tinBaseP , pInfo , "///c" ) ; ___( pInfo ) ;
        ZE( infoDisk1S* , pInfo ) ;
    {
    ZE( countT , idDisk ) ;

    third.s_nicNameF( tinBaseP , pMeI , cMe ) ; ___( pMeI ) ;
    ZE( countT , cMe ) ;
    ZE( nicNameC* , pMeI ) ;

    _IO_
    baton.grabF( tinBaseP , TAG( TAGiDnULL ) ) ;

    }
        if( third ) return ;
        __( !idPort && !idPortP ) ;
        if( third ) return ;
    {
    IFbEcAREFUL
{
/*1*/voidT netC::writeF( tinBaseS& tinBaseP , const nicNameC& nicNameP , soulC& soulP , const countT idPortP )/*1*/
/**/
*/
  should be 0 except for special applications
  if 0 then netC::idPort is used
  can be 0 unless idPort was 0 for the constructor
 idPortP
 soulP
  if 0 then the local host is implied
  can be 0
 nicNameP
 tinBaseP
arguments
\<A HREF=\"5.1510004.1.0.html\"\>definition\</A\>
\<A HREF=\"6.$writeF.0.html\"\>instances\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

