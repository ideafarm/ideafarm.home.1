
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
// Respecting the rights of other people is an important part of empowering one another.
//


//VISIBLE

REST
etThread.osProcessIdPhaseAdamF( tinBaseP , ifcIDpHASEhANDOFFoLD_SHUTTINGdOWN ) ;

HEAReNTER( ether )
etThread.strokeF( tinBaseP , T("\r\n\r\npress the enter key") ) ;

}
    etThread.strokeF( tinBaseP , TT(time1B,time2B)+T("    ")+TF1(scc)+T("\r\n") ) ;

    etThread.osTimeSubtractF( tinBaseP , time1B , time2B , time1A , time2A ) ;

    etThread.osTimeNowF( tinBaseP , time1B , time2B ) ;
    ZE( sCountT , time2B ) ;
    ZE( countT , time1B ) ;

    scc *= sccf ;

    etThread.osTimeNowF( tinBaseP , time1A , time2A ) ;
    ZE( sCountT , time2A ) ;
    ZE( countT , time1A ) ;
{
while( cTries -- )
countT cTries = 0x10 ;

sCountC sccf( tinBaseP , ether , 0xf ) ;

etThread.strokeF( tinBaseP , T("after assigning ffffff to scc,\r\ncBits = ")+TF3(cBits,0,8)+T("\r\n\r\nmultiplying...\r\n\r\n") ) ;
countT cBits = scc ;
scc = 0xffffff ;

sCountC scc( tinBaseP , ether ) ;

TODO

/*1*/WAKEhIDE( "example.simplest.snip.003000c.sCountC" )/*1*/
/**/
*/
\<A HREF=\"5.d120104.1.0.html\"\>definition\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 33 years.
//
// Copyright (c) 1992-2024 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ideafarm.home.1 for permitted uses.
//

